# Python stubs generated by omniidl from /local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "hpp/corbaserver/manipulation/gcommon.idl"
import hpp_stubs.corbaserver.manipulation.gcommon_idl
_0_hpp = omniORB.openModule("hpp_stubs.corbaserver.manipulation.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.corbaserver.manipulation.hpp__POA")
# #include "hpp/common.idl"
import hpp_stubs.common_idl
_0_hpp = omniORB.openModule("hpp_stubs.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.hpp__POA")
# #include "hpp/constraints_idl/constraints.idl"
import hpp_stubs.constraints.constraints_idl
_0_hpp = omniORB.openModule("hpp_stubs.constraints.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.constraints.hpp__POA")
_0_hpp.constraints_idl = omniORB.openModule("hpp_stubs.constraints.hpp.constraints_idl")
_0_hpp__POA.constraints_idl = omniORB.openModule("hpp_stubs.constraints.hpp__POA.constraints_idl")
# #include "hpp/core_idl/paths.idl"
import hpp_stubs.core.paths_idl
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")
# #include "hpp/core_idl/_constraints.idl"
import hpp_stubs.core._constraints_idl
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.constraints_idl = omniORB.openModule("hpp_stubs.core.hpp.constraints_idl")
_0_hpp__POA.constraints_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.constraints_idl")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")

#
# Start of module "hpp"
#
__name__ = "hpp_idl.hpp"
_0_hpp = omniORB.openModule("hpp_idl.hpp", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")


#
# Start of module "hpp.constraints_idl"
#
__name__ = "hpp_idl.hpp.constraints_idl"
_0_hpp.constraints_idl = omniORB.openModule("hpp_idl.hpp.constraints_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")
_0_hpp__POA.constraints_idl = omniORB.openModule("hpp_idl.hpp__POA.constraints_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")


# interface Implicit;
_0_hpp.constraints_idl._d_Implicit = (omniORB.tcInternal.tv_objref, "IDL:hpp/constraints_idl/Implicit:1.0", "Implicit")
omniORB.typeMapping["IDL:hpp/constraints_idl/Implicit:1.0"] = _0_hpp.constraints_idl._d_Implicit

#
# End of module "hpp.constraints_idl"
#
__name__ = "hpp_idl.hpp"


#
# Start of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp.core_idl"
_0_hpp.core_idl = omniORB.openModule("hpp_idl.hpp.core_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_idl.hpp__POA.core_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")


# interface SteeringMethod;
_0_hpp.core_idl._d_SteeringMethod = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/SteeringMethod:1.0", "SteeringMethod")
omniORB.typeMapping["IDL:hpp/core_idl/SteeringMethod:1.0"] = _0_hpp.core_idl._d_SteeringMethod

# interface Path;
_0_hpp.core_idl._d_Path = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/Path:1.0", "Path")
omniORB.typeMapping["IDL:hpp/core_idl/Path:1.0"] = _0_hpp.core_idl._d_Path

#
# End of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp"


#
# Start of module "hpp.manipulation_idl"
#
__name__ = "hpp_idl.hpp.manipulation_idl"
_0_hpp.manipulation_idl = omniORB.openModule("hpp_idl.hpp.manipulation_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")
_0_hpp__POA.manipulation_idl = omniORB.openModule("hpp_idl.hpp__POA.manipulation_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")


#
# Start of module "hpp.manipulation_idl.steeringMethod"
#
__name__ = "hpp_idl.hpp.manipulation_idl.steeringMethod"
_0_hpp.manipulation_idl.steeringMethod = omniORB.openModule("hpp_idl.hpp.manipulation_idl.steeringMethod", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")
_0_hpp__POA.manipulation_idl.steeringMethod = omniORB.openModule("hpp_idl.hpp__POA.manipulation_idl.steeringMethod", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/steering_methods.idl")


# interface EndEffectorTrajectory
_0_hpp.manipulation_idl.steeringMethod._d_EndEffectorTrajectory = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/steeringMethod/EndEffectorTrajectory:1.0", "EndEffectorTrajectory")
omniORB.typeMapping["IDL:hpp/manipulation_idl/steeringMethod/EndEffectorTrajectory:1.0"] = _0_hpp.manipulation_idl.steeringMethod._d_EndEffectorTrajectory
_0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory = omniORB.newEmptyClass()
class EndEffectorTrajectory (_0_hpp.core_idl.SteeringMethod):
    _NP_RepositoryId = _0_hpp.manipulation_idl.steeringMethod._d_EndEffectorTrajectory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory = EndEffectorTrajectory
_0_hpp.manipulation_idl.steeringMethod._tc_EndEffectorTrajectory = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.steeringMethod._d_EndEffectorTrajectory)
omniORB.registerType(EndEffectorTrajectory._NP_RepositoryId, _0_hpp.manipulation_idl.steeringMethod._d_EndEffectorTrajectory, _0_hpp.manipulation_idl.steeringMethod._tc_EndEffectorTrajectory)

# EndEffectorTrajectory operations and attributes
EndEffectorTrajectory._d_trajectoryConstraint = ((omniORB.typeMapping["IDL:hpp/constraints_idl/Implicit:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
EndEffectorTrajectory._d_trajectory = ((omniORB.typeMapping["IDL:hpp/core_idl/Path:1.0"], omniORB.tcInternal.tv_boolean), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# EndEffectorTrajectory object reference
class _objref_EndEffectorTrajectory (_0_hpp.core_idl._objref_SteeringMethod):
    _NP_RepositoryId = EndEffectorTrajectory._NP_RepositoryId

    def __init__(self):
        _0_hpp.core_idl._objref_SteeringMethod.__init__(self)

    def trajectoryConstraint(self, *args):
        return _omnipy.invoke(self, "trajectoryConstraint", _0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory._d_trajectoryConstraint, args)

    def trajectory(self, *args):
        return _omnipy.invoke(self, "trajectory", _0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory._d_trajectory, args)

    __methods__ = ["trajectoryConstraint", "trajectory"] + _0_hpp.core_idl._objref_SteeringMethod.__methods__

omniORB.registerObjref(EndEffectorTrajectory._NP_RepositoryId, _objref_EndEffectorTrajectory)
_0_hpp.manipulation_idl.steeringMethod._objref_EndEffectorTrajectory = _objref_EndEffectorTrajectory
del EndEffectorTrajectory, _objref_EndEffectorTrajectory

# EndEffectorTrajectory skeleton
__name__ = "hpp_idl.hpp__POA.manipulation_idl.steeringMethod"
class EndEffectorTrajectory (_0_hpp__POA.core_idl.SteeringMethod):
    _NP_RepositoryId = _0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory._NP_RepositoryId


    _omni_op_d = {"trajectoryConstraint": _0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory._d_trajectoryConstraint, "trajectory": _0_hpp.manipulation_idl.steeringMethod.EndEffectorTrajectory._d_trajectory}
    _omni_op_d.update(_0_hpp__POA.core_idl.SteeringMethod._omni_op_d)

EndEffectorTrajectory._omni_skeleton = EndEffectorTrajectory
_0_hpp__POA.manipulation_idl.steeringMethod.EndEffectorTrajectory = EndEffectorTrajectory
omniORB.registerSkeleton(EndEffectorTrajectory._NP_RepositoryId, EndEffectorTrajectory)
del EndEffectorTrajectory
__name__ = "hpp_idl.hpp.manipulation_idl.steeringMethod"

#
# End of module "hpp.manipulation_idl.steeringMethod"
#
__name__ = "hpp_idl.hpp.manipulation_idl"


#
# End of module "hpp.manipulation_idl"
#
__name__ = "hpp_idl.hpp"


#
# End of module "hpp"
#
__name__ = "hpp_stubs.manipulation.steering_methods_idl"

_exported_modules = ( "hpp_idl.hpp", "hpp_idl.hpp.constraints_idl", "hpp_idl.hpp.core_idl", "hpp_idl.hpp.manipulation_idl", "hpp_idl.hpp.manipulation_idl.steeringMethod")

# The end.
