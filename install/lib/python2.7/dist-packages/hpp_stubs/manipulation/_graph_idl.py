# Python stubs generated by omniidl from /local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "hpp/corbaserver/manipulation/gcommon.idl"
import hpp_stubs.corbaserver.manipulation.gcommon_idl
_0_hpp = omniORB.openModule("hpp_stubs.corbaserver.manipulation.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.corbaserver.manipulation.hpp__POA")
# #include "hpp/common.idl"
import hpp_stubs.common_idl
_0_hpp = omniORB.openModule("hpp_stubs.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.hpp__POA")
# #include "hpp/constraints_idl/constraints.idl"
import hpp_stubs.constraints.constraints_idl
_0_hpp = omniORB.openModule("hpp_stubs.constraints.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.constraints.hpp__POA")
_0_hpp.constraints_idl = omniORB.openModule("hpp_stubs.constraints.hpp.constraints_idl")
_0_hpp__POA.constraints_idl = omniORB.openModule("hpp_stubs.constraints.hpp__POA.constraints_idl")
# #include "hpp/core_idl/paths.idl"
import hpp_stubs.core.paths_idl
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")
# #include "hpp/core_idl/_constraints.idl"
import hpp_stubs.core._constraints_idl
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.constraints_idl = omniORB.openModule("hpp_stubs.core.hpp.constraints_idl")
_0_hpp__POA.constraints_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.constraints_idl")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")
# #include "hpp/core_idl/steering_methods.idl"
import hpp_stubs.core.steering_methods_idl
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")
# #include "hpp/core_idl/path_validations.idl"
import hpp_stubs.core.path_validations_idl
_0_hpp = omniORB.openModule("hpp_stubs.core.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.core.hpp__POA")
_0_hpp.core_idl = omniORB.openModule("hpp_stubs.core.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_stubs.core.hpp__POA.core_idl")

#
# Start of module "hpp"
#
__name__ = "hpp_idl.hpp"
_0_hpp = omniORB.openModule("hpp_idl.hpp", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")


#
# Start of module "hpp.constraints_idl"
#
__name__ = "hpp_idl.hpp.constraints_idl"
_0_hpp.constraints_idl = omniORB.openModule("hpp_idl.hpp.constraints_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")
_0_hpp__POA.constraints_idl = omniORB.openModule("hpp_idl.hpp__POA.constraints_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")


# interface Implicit;
_0_hpp.constraints_idl._d_Implicit = (omniORB.tcInternal.tv_objref, "IDL:hpp/constraints_idl/Implicit:1.0", "Implicit")
omniORB.typeMapping["IDL:hpp/constraints_idl/Implicit:1.0"] = _0_hpp.constraints_idl._d_Implicit

# typedef ... Implicits
class Implicits:
    _NP_RepositoryId = "IDL:hpp/constraints_idl/Implicits:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.constraints_idl.Implicits = Implicits
_0_hpp.constraints_idl._d_Implicits  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/constraints_idl/Implicit:1.0"], 0)
_0_hpp.constraints_idl._ad_Implicits = (omniORB.tcInternal.tv_alias, Implicits._NP_RepositoryId, "Implicits", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/constraints_idl/Implicit:1.0"], 0))
_0_hpp.constraints_idl._tc_Implicits = omniORB.tcInternal.createTypeCode(_0_hpp.constraints_idl._ad_Implicits)
omniORB.registerType(Implicits._NP_RepositoryId, _0_hpp.constraints_idl._ad_Implicits, _0_hpp.constraints_idl._tc_Implicits)
del Implicits

# interface LockedJoint;
_0_hpp.constraints_idl._d_LockedJoint = (omniORB.tcInternal.tv_objref, "IDL:hpp/constraints_idl/LockedJoint:1.0", "LockedJoint")
omniORB.typeMapping["IDL:hpp/constraints_idl/LockedJoint:1.0"] = _0_hpp.constraints_idl._d_LockedJoint

# typedef ... LockedJoints
class LockedJoints:
    _NP_RepositoryId = "IDL:hpp/constraints_idl/LockedJoints:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.constraints_idl.LockedJoints = LockedJoints
_0_hpp.constraints_idl._d_LockedJoints  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/constraints_idl/LockedJoint:1.0"], 0)
_0_hpp.constraints_idl._ad_LockedJoints = (omniORB.tcInternal.tv_alias, LockedJoints._NP_RepositoryId, "LockedJoints", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/constraints_idl/LockedJoint:1.0"], 0))
_0_hpp.constraints_idl._tc_LockedJoints = omniORB.tcInternal.createTypeCode(_0_hpp.constraints_idl._ad_LockedJoints)
omniORB.registerType(LockedJoints._NP_RepositoryId, _0_hpp.constraints_idl._ad_LockedJoints, _0_hpp.constraints_idl._tc_LockedJoints)
del LockedJoints

#
# End of module "hpp.constraints_idl"
#
__name__ = "hpp_idl.hpp"


#
# Start of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp.core_idl"
_0_hpp.core_idl = omniORB.openModule("hpp_idl.hpp.core_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_idl.hpp__POA.core_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")


# interface SteeringMethod;
_0_hpp.core_idl._d_SteeringMethod = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/SteeringMethod:1.0", "SteeringMethod")
omniORB.typeMapping["IDL:hpp/core_idl/SteeringMethod:1.0"] = _0_hpp.core_idl._d_SteeringMethod

# interface PathValidation;
_0_hpp.core_idl._d_PathValidation = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/PathValidation:1.0", "PathValidation")
omniORB.typeMapping["IDL:hpp/core_idl/PathValidation:1.0"] = _0_hpp.core_idl._d_PathValidation

#
# End of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp"


#
# Start of module "hpp.manipulation_idl"
#
__name__ = "hpp_idl.hpp.manipulation_idl"
_0_hpp.manipulation_idl = omniORB.openModule("hpp_idl.hpp.manipulation_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")
_0_hpp__POA.manipulation_idl = omniORB.openModule("hpp_idl.hpp__POA.manipulation_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")


#
# Start of module "hpp.manipulation_idl.graph_idl"
#
__name__ = "hpp_idl.hpp.manipulation_idl.graph_idl"
_0_hpp.manipulation_idl.graph_idl = omniORB.openModule("hpp_idl.hpp.manipulation_idl.graph_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")
_0_hpp__POA.manipulation_idl.graph_idl = omniORB.openModule("hpp_idl.hpp__POA.manipulation_idl.graph_idl", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/manipulation_idl/_graph.idl")


# typedef ... size_t
class size_t:
    _NP_RepositoryId = "IDL:hpp/manipulation_idl/graph_idl/size_t:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.manipulation_idl.graph_idl.size_t = size_t
_0_hpp.manipulation_idl.graph_idl._d_size_t  = omniORB.tcInternal.tv_ulonglong
_0_hpp.manipulation_idl.graph_idl._ad_size_t = (omniORB.tcInternal.tv_alias, size_t._NP_RepositoryId, "size_t", omniORB.tcInternal.tv_ulonglong)
_0_hpp.manipulation_idl.graph_idl._tc_size_t = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._ad_size_t)
omniORB.registerType(size_t._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._ad_size_t, _0_hpp.manipulation_idl.graph_idl._tc_size_t)
del size_t

# interface State;
_0_hpp.manipulation_idl.graph_idl._d_State = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/State:1.0", "State")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_State

# typedef ... States
class States:
    _NP_RepositoryId = "IDL:hpp/manipulation_idl/graph_idl/States:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.manipulation_idl.graph_idl.States = States
_0_hpp.manipulation_idl.graph_idl._d_States  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"], 0)
_0_hpp.manipulation_idl.graph_idl._ad_States = (omniORB.tcInternal.tv_alias, States._NP_RepositoryId, "States", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"], 0))
_0_hpp.manipulation_idl.graph_idl._tc_States = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._ad_States)
omniORB.registerType(States._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._ad_States, _0_hpp.manipulation_idl.graph_idl._tc_States)
del States

# interface Edge;
_0_hpp.manipulation_idl.graph_idl._d_Edge = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/Edge:1.0", "Edge")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Edge:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_Edge

# typedef ... Edges
class Edges:
    _NP_RepositoryId = "IDL:hpp/manipulation_idl/graph_idl/Edges:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.manipulation_idl.graph_idl.Edges = Edges
_0_hpp.manipulation_idl.graph_idl._d_Edges  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Edge:1.0"], 0)
_0_hpp.manipulation_idl.graph_idl._ad_Edges = (omniORB.tcInternal.tv_alias, Edges._NP_RepositoryId, "Edges", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Edge:1.0"], 0))
_0_hpp.manipulation_idl.graph_idl._tc_Edges = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._ad_Edges)
omniORB.registerType(Edges._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._ad_Edges, _0_hpp.manipulation_idl.graph_idl._tc_Edges)
del Edges

# interface GraphComponent
_0_hpp.manipulation_idl.graph_idl._d_GraphComponent = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/GraphComponent:1.0", "GraphComponent")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/GraphComponent:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_GraphComponent
_0_hpp.manipulation_idl.graph_idl.GraphComponent = omniORB.newEmptyClass()
class GraphComponent :
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl._d_GraphComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.manipulation_idl.graph_idl.GraphComponent = GraphComponent
_0_hpp.manipulation_idl.graph_idl._tc_GraphComponent = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._d_GraphComponent)
omniORB.registerType(GraphComponent._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._d_GraphComponent, _0_hpp.manipulation_idl.graph_idl._tc_GraphComponent)

# GraphComponent operations and attributes
GraphComponent._d_name = ((), ((omniORB.tcInternal.tv_string,0), ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
GraphComponent._d_id = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/size_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
GraphComponent._d_numericalConstraints = ((), (omniORB.typeMapping["IDL:hpp/constraints_idl/Implicits:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
GraphComponent._d_lockedJoints = ((), (omniORB.typeMapping["IDL:hpp/constraints_idl/LockedJoints:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# GraphComponent object reference
class _objref_GraphComponent (CORBA.Object):
    _NP_RepositoryId = GraphComponent._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def name(self, *args):
        return _omnipy.invoke(self, "name", _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_name, args)

    def id(self, *args):
        return _omnipy.invoke(self, "id", _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_id, args)

    def numericalConstraints(self, *args):
        return _omnipy.invoke(self, "numericalConstraints", _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_numericalConstraints, args)

    def lockedJoints(self, *args):
        return _omnipy.invoke(self, "lockedJoints", _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_lockedJoints, args)

    __methods__ = ["name", "id", "numericalConstraints", "lockedJoints"] + CORBA.Object.__methods__

omniORB.registerObjref(GraphComponent._NP_RepositoryId, _objref_GraphComponent)
_0_hpp.manipulation_idl.graph_idl._objref_GraphComponent = _objref_GraphComponent
del GraphComponent, _objref_GraphComponent

# GraphComponent skeleton
__name__ = "hpp_idl.hpp__POA.manipulation_idl.graph_idl"
class GraphComponent (PortableServer.Servant):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl.GraphComponent._NP_RepositoryId


    _omni_op_d = {"name": _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_name, "id": _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_id, "numericalConstraints": _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_numericalConstraints, "lockedJoints": _0_hpp.manipulation_idl.graph_idl.GraphComponent._d_lockedJoints}

GraphComponent._omni_skeleton = GraphComponent
_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent = GraphComponent
omniORB.registerSkeleton(GraphComponent._NP_RepositoryId, GraphComponent)
del GraphComponent
__name__ = "hpp_idl.hpp.manipulation_idl.graph_idl"

# interface StateSelector
_0_hpp.manipulation_idl.graph_idl._d_StateSelector = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/StateSelector:1.0", "StateSelector")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/StateSelector:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_StateSelector
_0_hpp.manipulation_idl.graph_idl.StateSelector = omniORB.newEmptyClass()
class StateSelector (_0_hpp.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl._d_StateSelector[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.manipulation_idl.graph_idl.StateSelector = StateSelector
_0_hpp.manipulation_idl.graph_idl._tc_StateSelector = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._d_StateSelector)
omniORB.registerType(StateSelector._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._d_StateSelector, _0_hpp.manipulation_idl.graph_idl._tc_StateSelector)

# StateSelector operations and attributes
StateSelector._d_getStates = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/States:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# StateSelector object reference
class _objref_StateSelector (_0_hpp.manipulation_idl.graph_idl._objref_GraphComponent):
    _NP_RepositoryId = StateSelector._NP_RepositoryId

    def __init__(self):
        _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__init__(self)

    def getStates(self, *args):
        return _omnipy.invoke(self, "getStates", _0_hpp.manipulation_idl.graph_idl.StateSelector._d_getStates, args)

    __methods__ = ["getStates"] + _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__methods__

omniORB.registerObjref(StateSelector._NP_RepositoryId, _objref_StateSelector)
_0_hpp.manipulation_idl.graph_idl._objref_StateSelector = _objref_StateSelector
del StateSelector, _objref_StateSelector

# StateSelector skeleton
__name__ = "hpp_idl.hpp__POA.manipulation_idl.graph_idl"
class StateSelector (_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl.StateSelector._NP_RepositoryId


    _omni_op_d = {"getStates": _0_hpp.manipulation_idl.graph_idl.StateSelector._d_getStates}
    _omni_op_d.update(_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent._omni_op_d)

StateSelector._omni_skeleton = StateSelector
_0_hpp__POA.manipulation_idl.graph_idl.StateSelector = StateSelector
omniORB.registerSkeleton(StateSelector._NP_RepositoryId, StateSelector)
del StateSelector
__name__ = "hpp_idl.hpp.manipulation_idl.graph_idl"

# interface Graph
_0_hpp.manipulation_idl.graph_idl._d_Graph = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/Graph:1.0", "Graph")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Graph:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_Graph
_0_hpp.manipulation_idl.graph_idl.Graph = omniORB.newEmptyClass()
class Graph (_0_hpp.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl._d_Graph[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.manipulation_idl.graph_idl.Graph = Graph
_0_hpp.manipulation_idl.graph_idl._tc_Graph = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._d_Graph)
omniORB.registerType(Graph._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._d_Graph, _0_hpp.manipulation_idl.graph_idl._tc_Graph)

# Graph operations and attributes
Graph._d_getStateSelector = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/StateSelector:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Graph._d_get = ((omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/size_t:1.0"], ), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/GraphComponent:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Graph._d_nbComponents = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/size_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Graph._d_initialize = ((), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# Graph object reference
class _objref_Graph (_0_hpp.manipulation_idl.graph_idl._objref_GraphComponent):
    _NP_RepositoryId = Graph._NP_RepositoryId

    def __init__(self):
        _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__init__(self)

    def getStateSelector(self, *args):
        return _omnipy.invoke(self, "getStateSelector", _0_hpp.manipulation_idl.graph_idl.Graph._d_getStateSelector, args)

    def get(self, *args):
        return _omnipy.invoke(self, "get", _0_hpp.manipulation_idl.graph_idl.Graph._d_get, args)

    def nbComponents(self, *args):
        return _omnipy.invoke(self, "nbComponents", _0_hpp.manipulation_idl.graph_idl.Graph._d_nbComponents, args)

    def initialize(self, *args):
        return _omnipy.invoke(self, "initialize", _0_hpp.manipulation_idl.graph_idl.Graph._d_initialize, args)

    __methods__ = ["getStateSelector", "get", "nbComponents", "initialize"] + _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__methods__

omniORB.registerObjref(Graph._NP_RepositoryId, _objref_Graph)
_0_hpp.manipulation_idl.graph_idl._objref_Graph = _objref_Graph
del Graph, _objref_Graph

# Graph skeleton
__name__ = "hpp_idl.hpp__POA.manipulation_idl.graph_idl"
class Graph (_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl.Graph._NP_RepositoryId


    _omni_op_d = {"getStateSelector": _0_hpp.manipulation_idl.graph_idl.Graph._d_getStateSelector, "get": _0_hpp.manipulation_idl.graph_idl.Graph._d_get, "nbComponents": _0_hpp.manipulation_idl.graph_idl.Graph._d_nbComponents, "initialize": _0_hpp.manipulation_idl.graph_idl.Graph._d_initialize}
    _omni_op_d.update(_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent._omni_op_d)

Graph._omni_skeleton = Graph
_0_hpp__POA.manipulation_idl.graph_idl.Graph = Graph
omniORB.registerSkeleton(Graph._NP_RepositoryId, Graph)
del Graph
__name__ = "hpp_idl.hpp.manipulation_idl.graph_idl"

# interface State
_0_hpp.manipulation_idl.graph_idl._d_State = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/State:1.0", "State")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_State
_0_hpp.manipulation_idl.graph_idl.State = omniORB.newEmptyClass()
class State (_0_hpp.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl._d_State[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.manipulation_idl.graph_idl.State = State
_0_hpp.manipulation_idl.graph_idl._tc_State = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._d_State)
omniORB.registerType(State._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._d_State, _0_hpp.manipulation_idl.graph_idl._tc_State)

# State operations and attributes
State._d_neighborEdges = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Edges:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
State._d_hiddenNeighbors = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Edges:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# State object reference
class _objref_State (_0_hpp.manipulation_idl.graph_idl._objref_GraphComponent):
    _NP_RepositoryId = State._NP_RepositoryId

    def __init__(self):
        _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__init__(self)

    def neighborEdges(self, *args):
        return _omnipy.invoke(self, "neighborEdges", _0_hpp.manipulation_idl.graph_idl.State._d_neighborEdges, args)

    def hiddenNeighbors(self, *args):
        return _omnipy.invoke(self, "hiddenNeighbors", _0_hpp.manipulation_idl.graph_idl.State._d_hiddenNeighbors, args)

    __methods__ = ["neighborEdges", "hiddenNeighbors"] + _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__methods__

omniORB.registerObjref(State._NP_RepositoryId, _objref_State)
_0_hpp.manipulation_idl.graph_idl._objref_State = _objref_State
del State, _objref_State

# State skeleton
__name__ = "hpp_idl.hpp__POA.manipulation_idl.graph_idl"
class State (_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl.State._NP_RepositoryId


    _omni_op_d = {"neighborEdges": _0_hpp.manipulation_idl.graph_idl.State._d_neighborEdges, "hiddenNeighbors": _0_hpp.manipulation_idl.graph_idl.State._d_hiddenNeighbors}
    _omni_op_d.update(_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent._omni_op_d)

State._omni_skeleton = State
_0_hpp__POA.manipulation_idl.graph_idl.State = State
omniORB.registerSkeleton(State._NP_RepositoryId, State)
del State
__name__ = "hpp_idl.hpp.manipulation_idl.graph_idl"

# interface Edge
_0_hpp.manipulation_idl.graph_idl._d_Edge = (omniORB.tcInternal.tv_objref, "IDL:hpp/manipulation_idl/graph_idl/Edge:1.0", "Edge")
omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/Edge:1.0"] = _0_hpp.manipulation_idl.graph_idl._d_Edge
_0_hpp.manipulation_idl.graph_idl.Edge = omniORB.newEmptyClass()
class Edge (_0_hpp.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl._d_Edge[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.manipulation_idl.graph_idl.Edge = Edge
_0_hpp.manipulation_idl.graph_idl._tc_Edge = omniORB.tcInternal.createTypeCode(_0_hpp.manipulation_idl.graph_idl._d_Edge)
omniORB.registerType(Edge._NP_RepositoryId, _0_hpp.manipulation_idl.graph_idl._d_Edge, _0_hpp.manipulation_idl.graph_idl._tc_Edge)

# Edge operations and attributes
Edge._d__from = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Edge._d_to = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Edge._d_getState = ((), (omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Edge._d_setState = ((omniORB.typeMapping["IDL:hpp/manipulation_idl/graph_idl/State:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Edge._d_getSteeringMethod = ((), (omniORB.typeMapping["IDL:hpp/core_idl/SteeringMethod:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Edge._d_getPathValidation = ((), (omniORB.typeMapping["IDL:hpp/core_idl/PathValidation:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# Edge object reference
class _objref_Edge (_0_hpp.manipulation_idl.graph_idl._objref_GraphComponent):
    _NP_RepositoryId = Edge._NP_RepositoryId

    def __init__(self):
        _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__init__(self)

    def _from(self, *args):
        return _omnipy.invoke(self, "from", _0_hpp.manipulation_idl.graph_idl.Edge._d__from, args)

    def to(self, *args):
        return _omnipy.invoke(self, "to", _0_hpp.manipulation_idl.graph_idl.Edge._d_to, args)

    def getState(self, *args):
        return _omnipy.invoke(self, "getState", _0_hpp.manipulation_idl.graph_idl.Edge._d_getState, args)

    def setState(self, *args):
        return _omnipy.invoke(self, "setState", _0_hpp.manipulation_idl.graph_idl.Edge._d_setState, args)

    def getSteeringMethod(self, *args):
        return _omnipy.invoke(self, "getSteeringMethod", _0_hpp.manipulation_idl.graph_idl.Edge._d_getSteeringMethod, args)

    def getPathValidation(self, *args):
        return _omnipy.invoke(self, "getPathValidation", _0_hpp.manipulation_idl.graph_idl.Edge._d_getPathValidation, args)

    __methods__ = ["_from", "to", "getState", "setState", "getSteeringMethod", "getPathValidation"] + _0_hpp.manipulation_idl.graph_idl._objref_GraphComponent.__methods__

omniORB.registerObjref(Edge._NP_RepositoryId, _objref_Edge)
_0_hpp.manipulation_idl.graph_idl._objref_Edge = _objref_Edge
del Edge, _objref_Edge

# Edge skeleton
__name__ = "hpp_idl.hpp__POA.manipulation_idl.graph_idl"
class Edge (_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent):
    _NP_RepositoryId = _0_hpp.manipulation_idl.graph_idl.Edge._NP_RepositoryId


    _omni_op_d = {"from": _0_hpp.manipulation_idl.graph_idl.Edge._d__from, "to": _0_hpp.manipulation_idl.graph_idl.Edge._d_to, "getState": _0_hpp.manipulation_idl.graph_idl.Edge._d_getState, "setState": _0_hpp.manipulation_idl.graph_idl.Edge._d_setState, "getSteeringMethod": _0_hpp.manipulation_idl.graph_idl.Edge._d_getSteeringMethod, "getPathValidation": _0_hpp.manipulation_idl.graph_idl.Edge._d_getPathValidation}
    _omni_op_d.update(_0_hpp__POA.manipulation_idl.graph_idl.GraphComponent._omni_op_d)

Edge._omni_skeleton = Edge
_0_hpp__POA.manipulation_idl.graph_idl.Edge = Edge
omniORB.registerSkeleton(Edge._NP_RepositoryId, Edge)
del Edge
__name__ = "hpp_idl.hpp.manipulation_idl.graph_idl"

#
# End of module "hpp.manipulation_idl.graph_idl"
#
__name__ = "hpp_idl.hpp.manipulation_idl"


#
# End of module "hpp.manipulation_idl"
#
__name__ = "hpp_idl.hpp"


#
# End of module "hpp"
#
__name__ = "hpp_stubs.manipulation._graph_idl"

_exported_modules = ( "hpp_idl.hpp", "hpp_idl.hpp.constraints_idl", "hpp_idl.hpp.core_idl", "hpp_idl.hpp.manipulation_idl", "hpp_idl.hpp.manipulation_idl.graph_idl")

# The end.
