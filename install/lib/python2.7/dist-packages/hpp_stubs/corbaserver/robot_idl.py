# Python stubs generated by omniidl from /local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/robot.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "hpp/common.idl"
import hpp_stubs.common_idl
_0_hpp = omniORB.openModule("hpp_stubs.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.hpp__POA")

#
# Start of module "hpp"
#
__name__ = "hpp_idl.hpp"
_0_hpp = omniORB.openModule("hpp_idl.hpp", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/robot.idl")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/robot.idl")


#
# Start of module "hpp.corbaserver"
#
__name__ = "hpp_idl.hpp.corbaserver"
_0_hpp.corbaserver = omniORB.openModule("hpp_idl.hpp.corbaserver", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/robot.idl")
_0_hpp__POA.corbaserver = omniORB.openModule("hpp_idl.hpp__POA.corbaserver", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/robot.idl")


# interface Robot
_0_hpp.corbaserver._d_Robot = (omniORB.tcInternal.tv_objref, "IDL:hpp/corbaserver/Robot:1.0", "Robot")
omniORB.typeMapping["IDL:hpp/corbaserver/Robot:1.0"] = _0_hpp.corbaserver._d_Robot
_0_hpp.corbaserver.Robot = omniORB.newEmptyClass()
class Robot :
    _NP_RepositoryId = _0_hpp.corbaserver._d_Robot[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.corbaserver.Robot = Robot
_0_hpp.corbaserver._tc_Robot = omniORB.tcInternal.createTypeCode(_0_hpp.corbaserver._d_Robot)
omniORB.registerType(Robot._NP_RepositoryId, _0_hpp.corbaserver._d_Robot, _0_hpp.corbaserver._tc_Robot)

# Robot operations and attributes
Robot._d_loadRobotModel = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_loadHumanoidModel = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_loadRobotModelFromString = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_loadHumanoidModelFromString = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getConfigSize = ((), (omniORB.tcInternal.tv_long, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getNumberDof = ((), (omniORB.tcInternal.tv_long, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointNames = ((), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointTypes = ((), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getAllJointNames = ((), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getParentJointName = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointConfig = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setJointConfig = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/floatSeq:1.0"]), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointType = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_jointIntegrate = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], omniORB.tcInternal.tv_boolean), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getCurrentTransformation = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeqSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointPosition = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Transform_:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointsPosition = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], omniORB.typeMapping["IDL:hpp/Names_t:1.0"]), (omniORB.typeMapping["IDL:hpp/TransformSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointVelocity = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointVelocityInLocalFrame = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointPositionInParentFrame = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Transform_:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getRootJointPosition = ((), (omniORB.typeMapping["IDL:hpp/Transform_:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setRootJointPosition = ((omniORB.typeMapping["IDL:hpp/Transform_:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setJointPositionInParentFrame = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/Transform_:1.0"]), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointNumberDof = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointConfigSize = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setJointBounds = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/floatSeq:1.0"]), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointBounds = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getLinkPosition = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Transform_:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getLinksPosition = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], omniORB.typeMapping["IDL:hpp/Names_t:1.0"]), (omniORB.typeMapping["IDL:hpp/TransformSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getLinkNames = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setDimensionExtraConfigSpace = ((omniORB.tcInternal.tv_ulong, ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getDimensionExtraConfigSpace = ((), (omniORB.tcInternal.tv_ulong, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setExtraConfigSpaceBounds = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getCurrentConfig = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_shootRandomConfig = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setCurrentConfig = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getCurrentVelocity = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setCurrentVelocity = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointInnerObjects = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJointOuterObjects = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getObjectPosition = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/Transform_:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_isConfigValid = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), (omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0)), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_distancesToCollision = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], omniORB.typeMapping["IDL:hpp/Names_t:1.0"], omniORB.typeMapping["IDL:hpp/Names_t:1.0"], omniORB.typeMapping["IDL:hpp/floatSeqSeq:1.0"], omniORB.typeMapping["IDL:hpp/floatSeqSeq:1.0"]), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_autocollisionCheck = ((), (omniORB.typeMapping["IDL:hpp/boolSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_autocollisionPairs = ((), (omniORB.typeMapping["IDL:hpp/Names_t:1.0"], omniORB.typeMapping["IDL:hpp/Names_t:1.0"], omniORB.typeMapping["IDL:hpp/boolSeq:1.0"]), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_setAutoCollision = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getRobotAABB = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getMass = ((), (omniORB.tcInternal.tv_double, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getCenterOfMass = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getCenterOfMassVelocity = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJacobianCenterOfMass = ((), (omniORB.typeMapping["IDL:hpp/floatSeqSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_addPartialCom = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/Names_t:1.0"]), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getPartialCom = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getJacobianPartialCom = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeqSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getVelocityPartialCom = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_getRobotName = ((), ((omniORB.tcInternal.tv_string,0), ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_createRobot = (((omniORB.tcInternal.tv_string,0), ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_appendJoint = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/Transform_:1.0"]), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_createPolyhedron = (((omniORB.tcInternal.tv_string,0), ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_createBox = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_createSphere = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_double), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_createCylinder = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_addPoint = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double, omniORB.tcInternal.tv_double), (omniORB.tcInternal.tv_ulong, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_addTriangle = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong, omniORB.tcInternal.tv_ulong), (omniORB.tcInternal.tv_ulong, ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
Robot._d_addObjectToJoint = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:hpp/Transform_:1.0"]), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# Robot object reference
class _objref_Robot (CORBA.Object):
    _NP_RepositoryId = Robot._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def loadRobotModel(self, *args):
        return _omnipy.invoke(self, "loadRobotModel", _0_hpp.corbaserver.Robot._d_loadRobotModel, args)

    def loadHumanoidModel(self, *args):
        return _omnipy.invoke(self, "loadHumanoidModel", _0_hpp.corbaserver.Robot._d_loadHumanoidModel, args)

    def loadRobotModelFromString(self, *args):
        return _omnipy.invoke(self, "loadRobotModelFromString", _0_hpp.corbaserver.Robot._d_loadRobotModelFromString, args)

    def loadHumanoidModelFromString(self, *args):
        return _omnipy.invoke(self, "loadHumanoidModelFromString", _0_hpp.corbaserver.Robot._d_loadHumanoidModelFromString, args)

    def getConfigSize(self, *args):
        return _omnipy.invoke(self, "getConfigSize", _0_hpp.corbaserver.Robot._d_getConfigSize, args)

    def getNumberDof(self, *args):
        return _omnipy.invoke(self, "getNumberDof", _0_hpp.corbaserver.Robot._d_getNumberDof, args)

    def getJointNames(self, *args):
        return _omnipy.invoke(self, "getJointNames", _0_hpp.corbaserver.Robot._d_getJointNames, args)

    def getJointTypes(self, *args):
        return _omnipy.invoke(self, "getJointTypes", _0_hpp.corbaserver.Robot._d_getJointTypes, args)

    def getAllJointNames(self, *args):
        return _omnipy.invoke(self, "getAllJointNames", _0_hpp.corbaserver.Robot._d_getAllJointNames, args)

    def getParentJointName(self, *args):
        return _omnipy.invoke(self, "getParentJointName", _0_hpp.corbaserver.Robot._d_getParentJointName, args)

    def getJointConfig(self, *args):
        return _omnipy.invoke(self, "getJointConfig", _0_hpp.corbaserver.Robot._d_getJointConfig, args)

    def setJointConfig(self, *args):
        return _omnipy.invoke(self, "setJointConfig", _0_hpp.corbaserver.Robot._d_setJointConfig, args)

    def getJointType(self, *args):
        return _omnipy.invoke(self, "getJointType", _0_hpp.corbaserver.Robot._d_getJointType, args)

    def jointIntegrate(self, *args):
        return _omnipy.invoke(self, "jointIntegrate", _0_hpp.corbaserver.Robot._d_jointIntegrate, args)

    def getCurrentTransformation(self, *args):
        return _omnipy.invoke(self, "getCurrentTransformation", _0_hpp.corbaserver.Robot._d_getCurrentTransformation, args)

    def getJointPosition(self, *args):
        return _omnipy.invoke(self, "getJointPosition", _0_hpp.corbaserver.Robot._d_getJointPosition, args)

    def getJointsPosition(self, *args):
        return _omnipy.invoke(self, "getJointsPosition", _0_hpp.corbaserver.Robot._d_getJointsPosition, args)

    def getJointVelocity(self, *args):
        return _omnipy.invoke(self, "getJointVelocity", _0_hpp.corbaserver.Robot._d_getJointVelocity, args)

    def getJointVelocityInLocalFrame(self, *args):
        return _omnipy.invoke(self, "getJointVelocityInLocalFrame", _0_hpp.corbaserver.Robot._d_getJointVelocityInLocalFrame, args)

    def getJointPositionInParentFrame(self, *args):
        return _omnipy.invoke(self, "getJointPositionInParentFrame", _0_hpp.corbaserver.Robot._d_getJointPositionInParentFrame, args)

    def getRootJointPosition(self, *args):
        return _omnipy.invoke(self, "getRootJointPosition", _0_hpp.corbaserver.Robot._d_getRootJointPosition, args)

    def setRootJointPosition(self, *args):
        return _omnipy.invoke(self, "setRootJointPosition", _0_hpp.corbaserver.Robot._d_setRootJointPosition, args)

    def setJointPositionInParentFrame(self, *args):
        return _omnipy.invoke(self, "setJointPositionInParentFrame", _0_hpp.corbaserver.Robot._d_setJointPositionInParentFrame, args)

    def getJointNumberDof(self, *args):
        return _omnipy.invoke(self, "getJointNumberDof", _0_hpp.corbaserver.Robot._d_getJointNumberDof, args)

    def getJointConfigSize(self, *args):
        return _omnipy.invoke(self, "getJointConfigSize", _0_hpp.corbaserver.Robot._d_getJointConfigSize, args)

    def setJointBounds(self, *args):
        return _omnipy.invoke(self, "setJointBounds", _0_hpp.corbaserver.Robot._d_setJointBounds, args)

    def getJointBounds(self, *args):
        return _omnipy.invoke(self, "getJointBounds", _0_hpp.corbaserver.Robot._d_getJointBounds, args)

    def getLinkPosition(self, *args):
        return _omnipy.invoke(self, "getLinkPosition", _0_hpp.corbaserver.Robot._d_getLinkPosition, args)

    def getLinksPosition(self, *args):
        return _omnipy.invoke(self, "getLinksPosition", _0_hpp.corbaserver.Robot._d_getLinksPosition, args)

    def getLinkNames(self, *args):
        return _omnipy.invoke(self, "getLinkNames", _0_hpp.corbaserver.Robot._d_getLinkNames, args)

    def setDimensionExtraConfigSpace(self, *args):
        return _omnipy.invoke(self, "setDimensionExtraConfigSpace", _0_hpp.corbaserver.Robot._d_setDimensionExtraConfigSpace, args)

    def getDimensionExtraConfigSpace(self, *args):
        return _omnipy.invoke(self, "getDimensionExtraConfigSpace", _0_hpp.corbaserver.Robot._d_getDimensionExtraConfigSpace, args)

    def setExtraConfigSpaceBounds(self, *args):
        return _omnipy.invoke(self, "setExtraConfigSpaceBounds", _0_hpp.corbaserver.Robot._d_setExtraConfigSpaceBounds, args)

    def getCurrentConfig(self, *args):
        return _omnipy.invoke(self, "getCurrentConfig", _0_hpp.corbaserver.Robot._d_getCurrentConfig, args)

    def shootRandomConfig(self, *args):
        return _omnipy.invoke(self, "shootRandomConfig", _0_hpp.corbaserver.Robot._d_shootRandomConfig, args)

    def setCurrentConfig(self, *args):
        return _omnipy.invoke(self, "setCurrentConfig", _0_hpp.corbaserver.Robot._d_setCurrentConfig, args)

    def getCurrentVelocity(self, *args):
        return _omnipy.invoke(self, "getCurrentVelocity", _0_hpp.corbaserver.Robot._d_getCurrentVelocity, args)

    def setCurrentVelocity(self, *args):
        return _omnipy.invoke(self, "setCurrentVelocity", _0_hpp.corbaserver.Robot._d_setCurrentVelocity, args)

    def getJointInnerObjects(self, *args):
        return _omnipy.invoke(self, "getJointInnerObjects", _0_hpp.corbaserver.Robot._d_getJointInnerObjects, args)

    def getJointOuterObjects(self, *args):
        return _omnipy.invoke(self, "getJointOuterObjects", _0_hpp.corbaserver.Robot._d_getJointOuterObjects, args)

    def getObjectPosition(self, *args):
        return _omnipy.invoke(self, "getObjectPosition", _0_hpp.corbaserver.Robot._d_getObjectPosition, args)

    def isConfigValid(self, *args):
        return _omnipy.invoke(self, "isConfigValid", _0_hpp.corbaserver.Robot._d_isConfigValid, args)

    def distancesToCollision(self, *args):
        return _omnipy.invoke(self, "distancesToCollision", _0_hpp.corbaserver.Robot._d_distancesToCollision, args)

    def autocollisionCheck(self, *args):
        return _omnipy.invoke(self, "autocollisionCheck", _0_hpp.corbaserver.Robot._d_autocollisionCheck, args)

    def autocollisionPairs(self, *args):
        return _omnipy.invoke(self, "autocollisionPairs", _0_hpp.corbaserver.Robot._d_autocollisionPairs, args)

    def setAutoCollision(self, *args):
        return _omnipy.invoke(self, "setAutoCollision", _0_hpp.corbaserver.Robot._d_setAutoCollision, args)

    def getRobotAABB(self, *args):
        return _omnipy.invoke(self, "getRobotAABB", _0_hpp.corbaserver.Robot._d_getRobotAABB, args)

    def getMass(self, *args):
        return _omnipy.invoke(self, "getMass", _0_hpp.corbaserver.Robot._d_getMass, args)

    def getCenterOfMass(self, *args):
        return _omnipy.invoke(self, "getCenterOfMass", _0_hpp.corbaserver.Robot._d_getCenterOfMass, args)

    def getCenterOfMassVelocity(self, *args):
        return _omnipy.invoke(self, "getCenterOfMassVelocity", _0_hpp.corbaserver.Robot._d_getCenterOfMassVelocity, args)

    def getJacobianCenterOfMass(self, *args):
        return _omnipy.invoke(self, "getJacobianCenterOfMass", _0_hpp.corbaserver.Robot._d_getJacobianCenterOfMass, args)

    def addPartialCom(self, *args):
        return _omnipy.invoke(self, "addPartialCom", _0_hpp.corbaserver.Robot._d_addPartialCom, args)

    def getPartialCom(self, *args):
        return _omnipy.invoke(self, "getPartialCom", _0_hpp.corbaserver.Robot._d_getPartialCom, args)

    def getJacobianPartialCom(self, *args):
        return _omnipy.invoke(self, "getJacobianPartialCom", _0_hpp.corbaserver.Robot._d_getJacobianPartialCom, args)

    def getVelocityPartialCom(self, *args):
        return _omnipy.invoke(self, "getVelocityPartialCom", _0_hpp.corbaserver.Robot._d_getVelocityPartialCom, args)

    def getRobotName(self, *args):
        return _omnipy.invoke(self, "getRobotName", _0_hpp.corbaserver.Robot._d_getRobotName, args)

    def createRobot(self, *args):
        return _omnipy.invoke(self, "createRobot", _0_hpp.corbaserver.Robot._d_createRobot, args)

    def appendJoint(self, *args):
        return _omnipy.invoke(self, "appendJoint", _0_hpp.corbaserver.Robot._d_appendJoint, args)

    def createPolyhedron(self, *args):
        return _omnipy.invoke(self, "createPolyhedron", _0_hpp.corbaserver.Robot._d_createPolyhedron, args)

    def createBox(self, *args):
        return _omnipy.invoke(self, "createBox", _0_hpp.corbaserver.Robot._d_createBox, args)

    def createSphere(self, *args):
        return _omnipy.invoke(self, "createSphere", _0_hpp.corbaserver.Robot._d_createSphere, args)

    def createCylinder(self, *args):
        return _omnipy.invoke(self, "createCylinder", _0_hpp.corbaserver.Robot._d_createCylinder, args)

    def addPoint(self, *args):
        return _omnipy.invoke(self, "addPoint", _0_hpp.corbaserver.Robot._d_addPoint, args)

    def addTriangle(self, *args):
        return _omnipy.invoke(self, "addTriangle", _0_hpp.corbaserver.Robot._d_addTriangle, args)

    def addObjectToJoint(self, *args):
        return _omnipy.invoke(self, "addObjectToJoint", _0_hpp.corbaserver.Robot._d_addObjectToJoint, args)

    __methods__ = ["loadRobotModel", "loadHumanoidModel", "loadRobotModelFromString", "loadHumanoidModelFromString", "getConfigSize", "getNumberDof", "getJointNames", "getJointTypes", "getAllJointNames", "getParentJointName", "getJointConfig", "setJointConfig", "getJointType", "jointIntegrate", "getCurrentTransformation", "getJointPosition", "getJointsPosition", "getJointVelocity", "getJointVelocityInLocalFrame", "getJointPositionInParentFrame", "getRootJointPosition", "setRootJointPosition", "setJointPositionInParentFrame", "getJointNumberDof", "getJointConfigSize", "setJointBounds", "getJointBounds", "getLinkPosition", "getLinksPosition", "getLinkNames", "setDimensionExtraConfigSpace", "getDimensionExtraConfigSpace", "setExtraConfigSpaceBounds", "getCurrentConfig", "shootRandomConfig", "setCurrentConfig", "getCurrentVelocity", "setCurrentVelocity", "getJointInnerObjects", "getJointOuterObjects", "getObjectPosition", "isConfigValid", "distancesToCollision", "autocollisionCheck", "autocollisionPairs", "setAutoCollision", "getRobotAABB", "getMass", "getCenterOfMass", "getCenterOfMassVelocity", "getJacobianCenterOfMass", "addPartialCom", "getPartialCom", "getJacobianPartialCom", "getVelocityPartialCom", "getRobotName", "createRobot", "appendJoint", "createPolyhedron", "createBox", "createSphere", "createCylinder", "addPoint", "addTriangle", "addObjectToJoint"] + CORBA.Object.__methods__

omniORB.registerObjref(Robot._NP_RepositoryId, _objref_Robot)
_0_hpp.corbaserver._objref_Robot = _objref_Robot
del Robot, _objref_Robot

# Robot skeleton
__name__ = "hpp_idl.hpp__POA.corbaserver"
class Robot (PortableServer.Servant):
    _NP_RepositoryId = _0_hpp.corbaserver.Robot._NP_RepositoryId


    _omni_op_d = {"loadRobotModel": _0_hpp.corbaserver.Robot._d_loadRobotModel, "loadHumanoidModel": _0_hpp.corbaserver.Robot._d_loadHumanoidModel, "loadRobotModelFromString": _0_hpp.corbaserver.Robot._d_loadRobotModelFromString, "loadHumanoidModelFromString": _0_hpp.corbaserver.Robot._d_loadHumanoidModelFromString, "getConfigSize": _0_hpp.corbaserver.Robot._d_getConfigSize, "getNumberDof": _0_hpp.corbaserver.Robot._d_getNumberDof, "getJointNames": _0_hpp.corbaserver.Robot._d_getJointNames, "getJointTypes": _0_hpp.corbaserver.Robot._d_getJointTypes, "getAllJointNames": _0_hpp.corbaserver.Robot._d_getAllJointNames, "getParentJointName": _0_hpp.corbaserver.Robot._d_getParentJointName, "getJointConfig": _0_hpp.corbaserver.Robot._d_getJointConfig, "setJointConfig": _0_hpp.corbaserver.Robot._d_setJointConfig, "getJointType": _0_hpp.corbaserver.Robot._d_getJointType, "jointIntegrate": _0_hpp.corbaserver.Robot._d_jointIntegrate, "getCurrentTransformation": _0_hpp.corbaserver.Robot._d_getCurrentTransformation, "getJointPosition": _0_hpp.corbaserver.Robot._d_getJointPosition, "getJointsPosition": _0_hpp.corbaserver.Robot._d_getJointsPosition, "getJointVelocity": _0_hpp.corbaserver.Robot._d_getJointVelocity, "getJointVelocityInLocalFrame": _0_hpp.corbaserver.Robot._d_getJointVelocityInLocalFrame, "getJointPositionInParentFrame": _0_hpp.corbaserver.Robot._d_getJointPositionInParentFrame, "getRootJointPosition": _0_hpp.corbaserver.Robot._d_getRootJointPosition, "setRootJointPosition": _0_hpp.corbaserver.Robot._d_setRootJointPosition, "setJointPositionInParentFrame": _0_hpp.corbaserver.Robot._d_setJointPositionInParentFrame, "getJointNumberDof": _0_hpp.corbaserver.Robot._d_getJointNumberDof, "getJointConfigSize": _0_hpp.corbaserver.Robot._d_getJointConfigSize, "setJointBounds": _0_hpp.corbaserver.Robot._d_setJointBounds, "getJointBounds": _0_hpp.corbaserver.Robot._d_getJointBounds, "getLinkPosition": _0_hpp.corbaserver.Robot._d_getLinkPosition, "getLinksPosition": _0_hpp.corbaserver.Robot._d_getLinksPosition, "getLinkNames": _0_hpp.corbaserver.Robot._d_getLinkNames, "setDimensionExtraConfigSpace": _0_hpp.corbaserver.Robot._d_setDimensionExtraConfigSpace, "getDimensionExtraConfigSpace": _0_hpp.corbaserver.Robot._d_getDimensionExtraConfigSpace, "setExtraConfigSpaceBounds": _0_hpp.corbaserver.Robot._d_setExtraConfigSpaceBounds, "getCurrentConfig": _0_hpp.corbaserver.Robot._d_getCurrentConfig, "shootRandomConfig": _0_hpp.corbaserver.Robot._d_shootRandomConfig, "setCurrentConfig": _0_hpp.corbaserver.Robot._d_setCurrentConfig, "getCurrentVelocity": _0_hpp.corbaserver.Robot._d_getCurrentVelocity, "setCurrentVelocity": _0_hpp.corbaserver.Robot._d_setCurrentVelocity, "getJointInnerObjects": _0_hpp.corbaserver.Robot._d_getJointInnerObjects, "getJointOuterObjects": _0_hpp.corbaserver.Robot._d_getJointOuterObjects, "getObjectPosition": _0_hpp.corbaserver.Robot._d_getObjectPosition, "isConfigValid": _0_hpp.corbaserver.Robot._d_isConfigValid, "distancesToCollision": _0_hpp.corbaserver.Robot._d_distancesToCollision, "autocollisionCheck": _0_hpp.corbaserver.Robot._d_autocollisionCheck, "autocollisionPairs": _0_hpp.corbaserver.Robot._d_autocollisionPairs, "setAutoCollision": _0_hpp.corbaserver.Robot._d_setAutoCollision, "getRobotAABB": _0_hpp.corbaserver.Robot._d_getRobotAABB, "getMass": _0_hpp.corbaserver.Robot._d_getMass, "getCenterOfMass": _0_hpp.corbaserver.Robot._d_getCenterOfMass, "getCenterOfMassVelocity": _0_hpp.corbaserver.Robot._d_getCenterOfMassVelocity, "getJacobianCenterOfMass": _0_hpp.corbaserver.Robot._d_getJacobianCenterOfMass, "addPartialCom": _0_hpp.corbaserver.Robot._d_addPartialCom, "getPartialCom": _0_hpp.corbaserver.Robot._d_getPartialCom, "getJacobianPartialCom": _0_hpp.corbaserver.Robot._d_getJacobianPartialCom, "getVelocityPartialCom": _0_hpp.corbaserver.Robot._d_getVelocityPartialCom, "getRobotName": _0_hpp.corbaserver.Robot._d_getRobotName, "createRobot": _0_hpp.corbaserver.Robot._d_createRobot, "appendJoint": _0_hpp.corbaserver.Robot._d_appendJoint, "createPolyhedron": _0_hpp.corbaserver.Robot._d_createPolyhedron, "createBox": _0_hpp.corbaserver.Robot._d_createBox, "createSphere": _0_hpp.corbaserver.Robot._d_createSphere, "createCylinder": _0_hpp.corbaserver.Robot._d_createCylinder, "addPoint": _0_hpp.corbaserver.Robot._d_addPoint, "addTriangle": _0_hpp.corbaserver.Robot._d_addTriangle, "addObjectToJoint": _0_hpp.corbaserver.Robot._d_addObjectToJoint}

Robot._omni_skeleton = Robot
_0_hpp__POA.corbaserver.Robot = Robot
omniORB.registerSkeleton(Robot._NP_RepositoryId, Robot)
del Robot
__name__ = "hpp_idl.hpp.corbaserver"

#
# End of module "hpp.corbaserver"
#
__name__ = "hpp_idl.hpp"


#
# End of module "hpp"
#
__name__ = "hpp_stubs.corbaserver.robot_idl"

_exported_modules = ( "hpp_idl.hpp", "hpp_idl.hpp.corbaserver")

# The end.
