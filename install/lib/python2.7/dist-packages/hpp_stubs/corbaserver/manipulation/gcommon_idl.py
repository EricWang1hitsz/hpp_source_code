# Python stubs generated by omniidl from /local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/corbaserver/manipulation/gcommon.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "hpp"
#
__name__ = "hpp_idl.hpp"
_0_hpp = omniORB.openModule("hpp_idl.hpp", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/corbaserver/manipulation/gcommon.idl")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA", r"/local/devel/hpp/src/hpp-manipulation-corba/idl/hpp/corbaserver/manipulation/gcommon.idl")


# typedef ... ID
class ID:
    _NP_RepositoryId = "IDL:hpp/ID:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.ID = ID
_0_hpp._d_ID  = omniORB.tcInternal.tv_long
_0_hpp._ad_ID = (omniORB.tcInternal.tv_alias, ID._NP_RepositoryId, "ID", omniORB.tcInternal.tv_long)
_0_hpp._tc_ID = omniORB.tcInternal.createTypeCode(_0_hpp._ad_ID)
omniORB.registerType(ID._NP_RepositoryId, _0_hpp._ad_ID, _0_hpp._tc_ID)
del ID

# typedef ... IDseq
class IDseq:
    _NP_RepositoryId = "IDL:hpp/IDseq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.IDseq = IDseq
_0_hpp._d_IDseq  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/ID:1.0"], 0)
_0_hpp._ad_IDseq = (omniORB.tcInternal.tv_alias, IDseq._NP_RepositoryId, "IDseq", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/ID:1.0"], 0))
_0_hpp._tc_IDseq = omniORB.tcInternal.createTypeCode(_0_hpp._ad_IDseq)
omniORB.registerType(IDseq._NP_RepositoryId, _0_hpp._ad_IDseq, _0_hpp._tc_IDseq)
del IDseq

# struct ConfigProjStat
_0_hpp.ConfigProjStat = omniORB.newEmptyClass()
class ConfigProjStat (omniORB.StructBase):
    _NP_RepositoryId = "IDL:hpp/ConfigProjStat:1.0"

    def __init__(self, success, error, nbObs):
        self.success = success
        self.error = error
        self.nbObs = nbObs

_0_hpp.ConfigProjStat = ConfigProjStat
_0_hpp._d_ConfigProjStat  = (omniORB.tcInternal.tv_struct, ConfigProjStat, ConfigProjStat._NP_RepositoryId, "ConfigProjStat", "success", omniORB.tcInternal.tv_long, "error", omniORB.tcInternal.tv_long, "nbObs", omniORB.tcInternal.tv_long)
_0_hpp._tc_ConfigProjStat = omniORB.tcInternal.createTypeCode(_0_hpp._d_ConfigProjStat)
omniORB.registerType(ConfigProjStat._NP_RepositoryId, _0_hpp._d_ConfigProjStat, _0_hpp._tc_ConfigProjStat)
del ConfigProjStat

# struct GraphComp
_0_hpp.GraphComp = omniORB.newEmptyClass()
class GraphComp (omniORB.StructBase):
    _NP_RepositoryId = "IDL:hpp/GraphComp:1.0"

    def __init__(self, name, id, start, end, waypoints):
        self.name = name
        self.id = id
        self.start = start
        self.end = end
        self.waypoints = waypoints

_0_hpp.GraphComp = GraphComp
_0_hpp._d_GraphComp  = (omniORB.tcInternal.tv_struct, GraphComp, GraphComp._NP_RepositoryId, "GraphComp", "name", (omniORB.tcInternal.tv_string,0), "id", omniORB.tcInternal.tv_long, "start", omniORB.tcInternal.tv_long, "end", omniORB.tcInternal.tv_long, "waypoints", omniORB.typeMapping["IDL:hpp/IDseq:1.0"])
_0_hpp._tc_GraphComp = omniORB.tcInternal.createTypeCode(_0_hpp._d_GraphComp)
omniORB.registerType(GraphComp._NP_RepositoryId, _0_hpp._d_GraphComp, _0_hpp._tc_GraphComp)
del GraphComp

# typedef ... GraphComps_t
class GraphComps_t:
    _NP_RepositoryId = "IDL:hpp/GraphComps_t:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_hpp.GraphComps_t = GraphComps_t
_0_hpp._d_GraphComps_t  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/GraphComp:1.0"], 0)
_0_hpp._ad_GraphComps_t = (omniORB.tcInternal.tv_alias, GraphComps_t._NP_RepositoryId, "GraphComps_t", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:hpp/GraphComp:1.0"], 0))
_0_hpp._tc_GraphComps_t = omniORB.tcInternal.createTypeCode(_0_hpp._ad_GraphComps_t)
omniORB.registerType(GraphComps_t._NP_RepositoryId, _0_hpp._ad_GraphComps_t, _0_hpp._tc_GraphComps_t)
del GraphComps_t

# struct GraphElements
_0_hpp.GraphElements = omniORB.newEmptyClass()
class GraphElements (omniORB.StructBase):
    _NP_RepositoryId = "IDL:hpp/GraphElements:1.0"

    def __init__(self, nodes, edges):
        self.nodes = nodes
        self.edges = edges

_0_hpp.GraphElements = GraphElements
_0_hpp._d_GraphElements  = (omniORB.tcInternal.tv_struct, GraphElements, GraphElements._NP_RepositoryId, "GraphElements", "nodes", omniORB.typeMapping["IDL:hpp/GraphComps_t:1.0"], "edges", omniORB.typeMapping["IDL:hpp/GraphComps_t:1.0"])
_0_hpp._tc_GraphElements = omniORB.tcInternal.createTypeCode(_0_hpp._d_GraphElements)
omniORB.registerType(GraphElements._NP_RepositoryId, _0_hpp._d_GraphElements, _0_hpp._tc_GraphElements)
del GraphElements

#
# End of module "hpp"
#
__name__ = "hpp_stubs.corbaserver.manipulation.gcommon_idl"

_exported_modules = ( "hpp_idl.hpp", )

# The end.
