# Python stubs generated by omniidl from /local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/path_planners.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "hpp/common.idl"
import hpp_stubs.common_idl
_0_hpp = omniORB.openModule("hpp_stubs.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.hpp__POA")
# #include "hpp/core_idl/paths.idl"
import hpp_stubs.core.paths_idl
_0_hpp = omniORB.openModule("hpp_idl.hpp")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA")
_0_hpp.core_idl = omniORB.openModule("hpp_idl.hpp.core_idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_idl.hpp__POA.core_idl")

#
# Start of module "hpp"
#
__name__ = "hpp_idl.hpp"
_0_hpp = omniORB.openModule("hpp_idl.hpp", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/path_planners.idl")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/path_planners.idl")


#
# Start of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp.core_idl"
_0_hpp.core_idl = omniORB.openModule("hpp_idl.hpp.core_idl", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/path_planners.idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_idl.hpp__POA.core_idl", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/path_planners.idl")


# interface PathPlanner
_0_hpp.core_idl._d_PathPlanner = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/PathPlanner:1.0", "PathPlanner")
omniORB.typeMapping["IDL:hpp/core_idl/PathPlanner:1.0"] = _0_hpp.core_idl._d_PathPlanner
_0_hpp.core_idl.PathPlanner = omniORB.newEmptyClass()
class PathPlanner :
    _NP_RepositoryId = _0_hpp.core_idl._d_PathPlanner[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.core_idl.PathPlanner = PathPlanner
_0_hpp.core_idl._tc_PathPlanner = omniORB.tcInternal.createTypeCode(_0_hpp.core_idl._d_PathPlanner)
omniORB.registerType(PathPlanner._NP_RepositoryId, _0_hpp.core_idl._d_PathPlanner, _0_hpp.core_idl._tc_PathPlanner)

# PathPlanner operations and attributes
PathPlanner._d_solve = ((), (omniORB.typeMapping["IDL:hpp/core_idl/PathVector:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_startSolve = ((), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_tryConnectInitAndGoals = ((), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_oneStep = ((), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_computePath = ((), (omniORB.typeMapping["IDL:hpp/core_idl/PathVector:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_finishSolve = ((omniORB.typeMapping["IDL:hpp/core_idl/PathVector:1.0"], ), (omniORB.typeMapping["IDL:hpp/core_idl/PathVector:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_interrupt = ((), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_maxIterations = ((omniORB.typeMapping["IDL:hpp/size_type:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
PathPlanner._d_timeOut = ((omniORB.typeMapping["IDL:hpp/value_type:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# PathPlanner object reference
class _objref_PathPlanner (CORBA.Object):
    _NP_RepositoryId = PathPlanner._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def solve(self, *args):
        return _omnipy.invoke(self, "solve", _0_hpp.core_idl.PathPlanner._d_solve, args)

    def startSolve(self, *args):
        return _omnipy.invoke(self, "startSolve", _0_hpp.core_idl.PathPlanner._d_startSolve, args)

    def tryConnectInitAndGoals(self, *args):
        return _omnipy.invoke(self, "tryConnectInitAndGoals", _0_hpp.core_idl.PathPlanner._d_tryConnectInitAndGoals, args)

    def oneStep(self, *args):
        return _omnipy.invoke(self, "oneStep", _0_hpp.core_idl.PathPlanner._d_oneStep, args)

    def computePath(self, *args):
        return _omnipy.invoke(self, "computePath", _0_hpp.core_idl.PathPlanner._d_computePath, args)

    def finishSolve(self, *args):
        return _omnipy.invoke(self, "finishSolve", _0_hpp.core_idl.PathPlanner._d_finishSolve, args)

    def interrupt(self, *args):
        return _omnipy.invoke(self, "interrupt", _0_hpp.core_idl.PathPlanner._d_interrupt, args)

    def maxIterations(self, *args):
        return _omnipy.invoke(self, "maxIterations", _0_hpp.core_idl.PathPlanner._d_maxIterations, args)

    def timeOut(self, *args):
        return _omnipy.invoke(self, "timeOut", _0_hpp.core_idl.PathPlanner._d_timeOut, args)

    __methods__ = ["solve", "startSolve", "tryConnectInitAndGoals", "oneStep", "computePath", "finishSolve", "interrupt", "maxIterations", "timeOut"] + CORBA.Object.__methods__

omniORB.registerObjref(PathPlanner._NP_RepositoryId, _objref_PathPlanner)
_0_hpp.core_idl._objref_PathPlanner = _objref_PathPlanner
del PathPlanner, _objref_PathPlanner

# PathPlanner skeleton
__name__ = "hpp_idl.hpp__POA.core_idl"
class PathPlanner (PortableServer.Servant):
    _NP_RepositoryId = _0_hpp.core_idl.PathPlanner._NP_RepositoryId


    _omni_op_d = {"solve": _0_hpp.core_idl.PathPlanner._d_solve, "startSolve": _0_hpp.core_idl.PathPlanner._d_startSolve, "tryConnectInitAndGoals": _0_hpp.core_idl.PathPlanner._d_tryConnectInitAndGoals, "oneStep": _0_hpp.core_idl.PathPlanner._d_oneStep, "computePath": _0_hpp.core_idl.PathPlanner._d_computePath, "finishSolve": _0_hpp.core_idl.PathPlanner._d_finishSolve, "interrupt": _0_hpp.core_idl.PathPlanner._d_interrupt, "maxIterations": _0_hpp.core_idl.PathPlanner._d_maxIterations, "timeOut": _0_hpp.core_idl.PathPlanner._d_timeOut}

PathPlanner._omni_skeleton = PathPlanner
_0_hpp__POA.core_idl.PathPlanner = PathPlanner
omniORB.registerSkeleton(PathPlanner._NP_RepositoryId, PathPlanner)
del PathPlanner
__name__ = "hpp_idl.hpp.core_idl"

#
# End of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp"


#
# End of module "hpp"
#
__name__ = "hpp_stubs.core.path_planners_idl"

_exported_modules = ( "hpp_idl.hpp", "hpp_idl.hpp.core_idl")

# The end.
