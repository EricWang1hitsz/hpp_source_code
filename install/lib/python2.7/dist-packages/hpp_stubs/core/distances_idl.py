# Python stubs generated by omniidl from /local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/distances.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "hpp/common.idl"
import hpp_stubs.common_idl
_0_hpp = omniORB.openModule("hpp_stubs.hpp")
_0_hpp__POA = omniORB.openModule("hpp_stubs.hpp__POA")

#
# Start of module "hpp"
#
__name__ = "hpp_idl.hpp"
_0_hpp = omniORB.openModule("hpp_idl.hpp", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/distances.idl")
_0_hpp__POA = omniORB.openModule("hpp_idl.hpp__POA", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/distances.idl")


#
# Start of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp.core_idl"
_0_hpp.core_idl = omniORB.openModule("hpp_idl.hpp.core_idl", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/distances.idl")
_0_hpp__POA.core_idl = omniORB.openModule("hpp_idl.hpp__POA.core_idl", r"/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/distances.idl")


# interface Distance
_0_hpp.core_idl._d_Distance = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/Distance:1.0", "Distance")
omniORB.typeMapping["IDL:hpp/core_idl/Distance:1.0"] = _0_hpp.core_idl._d_Distance
_0_hpp.core_idl.Distance = omniORB.newEmptyClass()
class Distance :
    _NP_RepositoryId = _0_hpp.core_idl._d_Distance[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.core_idl.Distance = Distance
_0_hpp.core_idl._tc_Distance = omniORB.tcInternal.createTypeCode(_0_hpp.core_idl._d_Distance)
omniORB.registerType(Distance._NP_RepositoryId, _0_hpp.core_idl._d_Distance, _0_hpp.core_idl._tc_Distance)

# Distance operations and attributes
Distance._d_call = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], omniORB.typeMapping["IDL:hpp/floatSeq:1.0"]), (omniORB.typeMapping["IDL:hpp/value_type:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# Distance object reference
class _objref_Distance (CORBA.Object):
    _NP_RepositoryId = Distance._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def call(self, *args):
        return _omnipy.invoke(self, "call", _0_hpp.core_idl.Distance._d_call, args)

    __methods__ = ["call"] + CORBA.Object.__methods__

omniORB.registerObjref(Distance._NP_RepositoryId, _objref_Distance)
_0_hpp.core_idl._objref_Distance = _objref_Distance
del Distance, _objref_Distance

# Distance skeleton
__name__ = "hpp_idl.hpp__POA.core_idl"
class Distance (PortableServer.Servant):
    _NP_RepositoryId = _0_hpp.core_idl.Distance._NP_RepositoryId


    _omni_op_d = {"call": _0_hpp.core_idl.Distance._d_call}

Distance._omni_skeleton = Distance
_0_hpp__POA.core_idl.Distance = Distance
omniORB.registerSkeleton(Distance._NP_RepositoryId, Distance)
del Distance
__name__ = "hpp_idl.hpp.core_idl"

# interface WeighedDistance
_0_hpp.core_idl._d_WeighedDistance = (omniORB.tcInternal.tv_objref, "IDL:hpp/core_idl/WeighedDistance:1.0", "WeighedDistance")
omniORB.typeMapping["IDL:hpp/core_idl/WeighedDistance:1.0"] = _0_hpp.core_idl._d_WeighedDistance
_0_hpp.core_idl.WeighedDistance = omniORB.newEmptyClass()
class WeighedDistance (_0_hpp.core_idl.Distance):
    _NP_RepositoryId = _0_hpp.core_idl._d_WeighedDistance[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_hpp.core_idl.WeighedDistance = WeighedDistance
_0_hpp.core_idl._tc_WeighedDistance = omniORB.tcInternal.createTypeCode(_0_hpp.core_idl._d_WeighedDistance)
omniORB.registerType(WeighedDistance._NP_RepositoryId, _0_hpp.core_idl._d_WeighedDistance, _0_hpp.core_idl._tc_WeighedDistance)

# WeighedDistance operations and attributes
WeighedDistance._d_getWeights = ((), (omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})
WeighedDistance._d_setWeights = ((omniORB.typeMapping["IDL:hpp/floatSeq:1.0"], ), (), {_0_hpp.Error._NP_RepositoryId: _0_hpp._d_Error})

# WeighedDistance object reference
class _objref_WeighedDistance (_0_hpp.core_idl._objref_Distance):
    _NP_RepositoryId = WeighedDistance._NP_RepositoryId

    def __init__(self):
        _0_hpp.core_idl._objref_Distance.__init__(self)

    def getWeights(self, *args):
        return _omnipy.invoke(self, "getWeights", _0_hpp.core_idl.WeighedDistance._d_getWeights, args)

    def setWeights(self, *args):
        return _omnipy.invoke(self, "setWeights", _0_hpp.core_idl.WeighedDistance._d_setWeights, args)

    __methods__ = ["getWeights", "setWeights"] + _0_hpp.core_idl._objref_Distance.__methods__

omniORB.registerObjref(WeighedDistance._NP_RepositoryId, _objref_WeighedDistance)
_0_hpp.core_idl._objref_WeighedDistance = _objref_WeighedDistance
del WeighedDistance, _objref_WeighedDistance

# WeighedDistance skeleton
__name__ = "hpp_idl.hpp__POA.core_idl"
class WeighedDistance (_0_hpp__POA.core_idl.Distance):
    _NP_RepositoryId = _0_hpp.core_idl.WeighedDistance._NP_RepositoryId


    _omni_op_d = {"getWeights": _0_hpp.core_idl.WeighedDistance._d_getWeights, "setWeights": _0_hpp.core_idl.WeighedDistance._d_setWeights}
    _omni_op_d.update(_0_hpp__POA.core_idl.Distance._omni_op_d)

WeighedDistance._omni_skeleton = WeighedDistance
_0_hpp__POA.core_idl.WeighedDistance = WeighedDistance
omniORB.registerSkeleton(WeighedDistance._NP_RepositoryId, WeighedDistance)
del WeighedDistance
__name__ = "hpp_idl.hpp.core_idl"

#
# End of module "hpp.core_idl"
#
__name__ = "hpp_idl.hpp"


#
# End of module "hpp"
#
__name__ = "hpp_stubs.core.distances_idl"

_exported_modules = ( "hpp_idl.hpp", "hpp_idl.hpp.core_idl")

# The end.
