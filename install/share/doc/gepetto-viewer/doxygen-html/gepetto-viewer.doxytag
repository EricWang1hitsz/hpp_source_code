<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>action-search-bar.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00076</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <class kind="class">gepetto::gui::ActionSearchBar</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>blender-geom-writer.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00077</filename>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <includes id="a00108" name="node-visitor.h" local="no" imported="no">gepetto/viewer/node-visitor.h</includes>
    <class kind="class">gepetto::viewer::BlenderGeomWriterVisitor</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>bodytreewidget.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00078</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <class kind="class">gepetto::gui::BodyTreeWidget</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>color-map.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00079</filename>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <class kind="class">gepetto::gui::ColorMap</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>config-osg.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00080</filename>
    <includes id="a00084" name="fwd.h" local="no" imported="no">gepetto/viewer/fwd.h</includes>
    <includes id="a00102" name="macros.h" local="no" imported="no">gepetto/viewer/macros.h</includes>
    <class kind="struct">gepetto::viewer::Configuration</class>
    <namespace>osg</namespace>
    <namespace>osgViewer</namespace>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEF_WIDTH_WINDOW</name>
      <anchorfile>a00080.html</anchorfile>
      <anchor>a44ede564b7032bc9d3de4386d2974574</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_HEIGHT_WINDOW</name>
      <anchorfile>a00080.html</anchorfile>
      <anchor>a645dcb3ec1b936ee674ac15a8f164372</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::osg::ref_ptr&lt; GraphicsContext::Traits &gt;</type>
      <name>TraitsRefPtr</name>
      <anchorfile>a00133.html</anchorfile>
      <anchor>ab8110fb6e19cb79a258c30f4f75343d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::osg::Vec2f</type>
      <name>osgVector2</name>
      <anchorfile>a00080.html</anchorfile>
      <anchor>adbc05c52ea9a02fb54909cb02752d304</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::osg::Vec3f</type>
      <name>osgVector3</name>
      <anchorfile>a00080.html</anchorfile>
      <anchor>a6c6ba8599079385ccfd6c36946382c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::osg::Vec4f</type>
      <name>osgVector4</name>
      <anchorfile>a00080.html</anchorfile>
      <anchor>ade1dec058dcca36ff77bfd9393cb5a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::osg::Quat</type>
      <name>osgQuat</name>
      <anchorfile>a00080.html</anchorfile>
      <anchor>abb02fb90008999f84fbb89d086af5e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VisibilityMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_ON</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1a46538d3a71a5c7f864cc9b7adafe7ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALWAYS_ON_TOP</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1afdf34572ae74f16d7222766f648c89a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_OFF</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1a3a5bb84f6c56cc4b541943be93d08dd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LightingMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a526c3d18c0deaf24aefe9d7a836357bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIGHT_INFLUENCE_ON</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a526c3d18c0deaf24aefe9d7a836357bca530b5c20cec2b9a51ac5a07276df6f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIGHT_INFLUENCE_OFF</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a526c3d18c0deaf24aefe9d7a836357bca8e270965df7abb845804c6b361110435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WireFrameMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILL</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73eae1b971fccf017d1c175e4226940a7cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIREFRAME</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73ead14b19c229f6def1ff76db89e953bda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILL_AND_WIREFRAME</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73ea196211da5a3f3a2834d824aef5ff89ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FaceMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4aa964d6b696c3dd7f3d804ed5494047428</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4aa377b963c2c62aa047e2dda2ca8fa142d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_AND_EDGE</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4aa60b2fa9b0f3590afa28255d161b4015b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/dialog/</path>
    <filename>a00081</filename>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <class kind="class">gepetto::gui::Vector3Dialog</class>
    <class kind="class">gepetto::gui::ConfigurationDialog</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>dialogloadenvironment.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/dialog/</path>
    <filename>a00082</filename>
    <class kind="class">gepetto::gui::DialogLoadEnvironment</class>
    <class kind="struct">gepetto::gui::DialogLoadEnvironment::EnvironmentDefinition</class>
    <namespace>Ui</namespace>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>dialogloadrobot.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/dialog/</path>
    <filename>a00083</filename>
    <class kind="class">gepetto::gui::DialogLoadRobot</class>
    <class kind="struct">gepetto::gui::DialogLoadRobot::RobotDefinition</class>
    <namespace>Ui</namespace>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>fwd.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00084</filename>
    <includes id="a00102" name="macros.h" local="no" imported="no">gepetto/viewer/macros.h</includes>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>fwd.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00085</filename>
    <includes id="a00102" name="macros.h" local="no" imported="no">gepetto/viewer/macros.h</includes>
    <includes id="a00084" name="fwd.h" local="no" imported="no">gepetto/viewer/fwd.h</includes>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
    <member kind="typedef">
      <type>std::vector&lt; BodyTreeItem * &gt;</type>
      <name>BodyTreeItems_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>abae76dce338a5eeafdd5cba6d6e433c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::NodePtr_t</type>
      <name>NodePtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a0cf18beb691ad250ee564aeb9daf7bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::GroupNodePtr_t</type>
      <name>GroupNodePtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a62c289c900586993fcfe4ee090b50691</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::Configuration</type>
      <name>Configuration</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>ae618d3e580f932eabc0c416c2d4ec4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::shared_ptr&lt; WindowsManager &gt;</type>
      <name>WindowsManagerPtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a2fa8d46f1103b355a691ccdd01c99903</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>group-node.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00086</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::GroupNode</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>keyboard-manipulator.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/OSGManipulator/</path>
    <filename>a00087</filename>
    <class kind="class">osgGA::KeyboardManipulator</class>
    <namespace>osgGA</namespace>
    <member kind="enumeration">
      <type></type>
      <name>KeyBinding</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_forward</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a18e6c4e569e5b94ad90154e5eee5a962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_backward</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a2e5cf552fd6c2f24b1014963162d0aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_right</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895af4cbb58ecfe567d418bdce9d5c75c2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_left</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895ad48fd4dd20a612e15f57d80f0d16b97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_roll_right</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a1d5098090b2aae8153c5b72da22dc391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_roll_left</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895acb2b8ccc3065b4ba0b5d4cea112fe90f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_up</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a2afaa03124f2ea68057e18ac872f94d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_down</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a5437b7c371175a0dd6a91dd5554a7437</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>keyLayout</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAYOUT_unknown</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890ca20c6b2636cab0394a448e1c51017ccbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAYOUT_azerty</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890ca1fe0a0fc67451f42a35a804ea70b161a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAYOUT_qwerty</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890caf8de243cd1bdd8e9bdf0b6da021fdb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>startSpeed_</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a2e81c7b668b4cae6fbf49a15299534ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>leaf-node-arrow.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00088</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeArrow</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-box.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00089</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeBox</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-capsule.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00090</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeCapsule</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-collada.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00091</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeCollada</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-cone.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00092</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeCone</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-cylinder.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00093</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeCylinder</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-face.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00094</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeFace</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-ground.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00095</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeGround</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-light.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00096</filename>
    <includes id="a00099" name="leaf-node-sphere.h" local="no" imported="no">gepetto/viewer/leaf-node-sphere.h</includes>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeLight</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-line.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00097</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeLine</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-mesh.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00098</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeMesh</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-sphere.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00099</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeSphere</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>leaf-node-xyzaxis.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00100</filename>
    <includes id="a00105" name="node-drawable.h" local="no" imported="no">gepetto/viewer/node-drawable.h</includes>
    <class kind="class">gepetto::viewer::LeafNodeXYZAxis</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>ledindicator.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00101</filename>
    <class kind="class">gepetto::gui::LedIndicator</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>macros.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00102</filename>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>aa06eedd6f738a415870e97a375337d51</anchor>
      <arglist>(condition, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_CLASS_SMART_PTR</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>afbaa603ffb6a6a5833f883178c1b78c2</anchor>
      <arglist>(className)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEF_OSG_CLASS_REF_PTR</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>a38853dd619f0c36bd5f9f993a6691ce6</anchor>
      <arglist>(className)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>a8fc74f165d8f00f4a4493d0b32eae7ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mainwindow.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00103</filename>
    <includes id="a00085" name="fwd.hh" local="yes" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <includes id="a00101" name="ledindicator.hh" local="no" imported="no">gepetto/gui/ledindicator.hh</includes>
    <includes id="a00083" name="dialogloadrobot.hh" local="no" imported="no">gepetto/gui/dialog/dialogloadrobot.hh</includes>
    <includes id="a00082" name="dialogloadenvironment.hh" local="no" imported="no">gepetto/gui/dialog/dialogloadenvironment.hh</includes>
    <includes id="a00114" name="pluginmanagerdialog.hh" local="no" imported="no">gepetto/gui/dialog/pluginmanagerdialog.hh</includes>
    <includes id="a00121" name="settings.hh" local="no" imported="no">gepetto/gui/settings.hh</includes>
    <class kind="class">gepetto::gui::MainWindow</class>
    <namespace>Ui</namespace>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>node-action.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00104</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::gui::NodeActionBase</class>
    <class kind="class">gepetto::gui::NodeAction</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>node-drawable.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00105</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::NodeDrawable</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>node-property.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00106</filename>
    <includes id="a00084" name="fwd.h" local="no" imported="no">gepetto/viewer/fwd.h</includes>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <class kind="class">gepetto::viewer::Property</class>
    <class kind="class">gepetto::viewer::PropertyTpl</class>
    <class kind="struct">gepetto::viewer::MetaEnum</class>
    <class kind="class">gepetto::viewer::EnumProperty</class>
    <class kind="class">gepetto::viewer::Properties</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
    <member kind="typedef">
      <type>std::map&lt; std::string, PropertyPtr_t &gt;</type>
      <name>PropertyMap_t</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8dec06a4f28dd79f0d4733ca053803d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; bool &gt;</type>
      <name>BoolProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5ef0961eb3447fd814301b885eeb94fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; int &gt;</type>
      <name>IntProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>ad250b088022ffa3f1452eae1fe67f8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; float &gt;</type>
      <name>FloatProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a1e438936350983a5dea73acce579e104</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; std::string &gt;</type>
      <name>StringProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a66aa120470946bf79f4b4a5bcd315bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; unsigned long &gt;</type>
      <name>UIntProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>aa82660f64d56f3ce51c699b25468e971</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; osgVector2 &gt;</type>
      <name>Vector2Property</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5f2860c17e98f73cda424c9e6c5898e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; osgVector3 &gt;</type>
      <name>Vector3Property</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a3f091255a53e293e195ea5fabf12eec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; osgVector4 &gt;</type>
      <name>Vector4Property</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a25a68d140ced8cc6f4fa2d2a6a1c7a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; Configuration &gt;</type>
      <name>ConfigurationProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>aacd055a9f80b3def957775c691ceab5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>visibilityModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5107673c4647b5f66d33d5bae7ebe215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>wireFrameModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>ad061dcb3cafe56914b90def14a5b76d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>lightingModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a90ff0c118c54177d438566a6fb0cc676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>glImmediateModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a64b3c8b7a36ea49abae8b42ad87b96a7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>node-rod.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00107</filename>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <includes id="a00090" name="leaf-node-capsule.h" local="no" imported="no">gepetto/viewer/leaf-node-capsule.h</includes>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <class kind="class">gepetto::viewer::NodeRod</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>node-visitor.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00108</filename>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <class kind="class">gepetto::viewer::NodeVisitor</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>node.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00109</filename>
    <includes id="a00084" name="fwd.h" local="no" imported="no">gepetto/viewer/fwd.h</includes>
    <includes id="a00108" name="node-visitor.h" local="no" imported="no">gepetto/viewer/node-visitor.h</includes>
    <includes id="a00106" name="node-property.h" local="no" imported="no">gepetto/viewer/node-property.h</includes>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <class kind="class">gepetto::viewer::Node</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
    <member kind="enumvalue">
      <name>IntersectionBit</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5c93e133f02543dd69d0362513736392a8ccc4970b9c55c8b2796c34034ec33f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NodeBit</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5c93e133f02543dd69d0362513736392a7cdc0cf699d5719b913996e1fb678fa9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>osgwidget.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00110</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00126" name="window-manager.h" local="no" imported="no">gepetto/viewer/window-manager.h</includes>
    <includes id="a00128" name="windows-manager.hh" local="no" imported="no">gepetto/gui/windows-manager.hh</includes>
    <class kind="class">gepetto::gui::OSGWidget</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
    <member kind="typedef">
      <type>viewer::WindowManagerPtr_t</type>
      <name>WindowManagerPtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>ad09bf5d998d0b6e479d8ff6e43794e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WindowsManager::WindowID</type>
      <name>WindowID</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a80f032b5815101ac520f730607f1b63c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>package.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/doc/main-page/</path>
    <filename>a00111</filename>
  </compound>
  <compound kind="file">
    <name>pick-handler.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00112</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <includes id="a00116" name="qt-osg-keyboard.hh" local="no" imported="no">gepetto/gui/qt-osg-keyboard.hh</includes>
    <class kind="class">gepetto::gui::PickHandler</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>plugin-interface.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00113</filename>
    <includes id="a00083" name="dialogloadrobot.hh" local="no" imported="no">gepetto/gui/dialog/dialogloadrobot.hh</includes>
    <includes id="a00082" name="dialogloadenvironment.hh" local="no" imported="no">gepetto/gui/dialog/dialogloadenvironment.hh</includes>
    <class kind="class">gepetto::gui::PluginInterface</class>
    <class kind="class">gepetto::gui::JointModifierInterface</class>
    <class kind="class">gepetto::gui::ModelInterface</class>
    <class kind="class">gepetto::gui::ConnectionInterface</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
    <member kind="variable">
      <type>const int</type>
      <name>DockKeyShortcutBase</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a87790a9a31b590ac12a5c378c5f34ae4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pluginmanagerdialog.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/dialog/</path>
    <filename>a00114</filename>
    <includes id="a00113" name="plugin-interface.hh" local="no" imported="no">gepetto/gui/plugin-interface.hh</includes>
    <class kind="class">gepetto::gui::PluginManager</class>
    <class kind="class">gepetto::gui::PluginManagerDialog</class>
    <namespace>Ui</namespace>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>pythonwidget.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00115</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <class kind="class">gepetto::gui::PythonWidget</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>qt-osg-keyboard.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00116</filename>
    <class kind="class">gepetto::gui::QtOsgKeyboard</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>roadmap-viewer.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00117</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <includes id="a00100" name="leaf-node-xyzaxis.h" local="no" imported="no">gepetto/viewer/leaf-node-xyzaxis.h</includes>
    <includes id="a00097" name="leaf-node-line.h" local="no" imported="no">gepetto/viewer/leaf-node-line.h</includes>
    <class kind="class">gepetto::viewer::RoadmapViewer</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>safeapplication.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00118</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <class kind="class">gepetto::gui::SlotExceptionCatch</class>
    <class kind="class">gepetto::gui::SafeApplication</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>selection-event.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00119</filename>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <class kind="class">gepetto::gui::SelectionEvent</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>selection-handler.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00120</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <class kind="class">gepetto::gui::SelectionMode</class>
    <class kind="class">gepetto::gui::UniqueSelection</class>
    <class kind="class">gepetto::gui::MultiSelection</class>
    <class kind="class">gepetto::gui::SelectionHandler</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>settings.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00121</filename>
    <includes id="a00114" name="pluginmanagerdialog.hh" local="no" imported="no">gepetto/gui/dialog/pluginmanagerdialog.hh</includes>
    <class kind="struct">gepetto::gui::Settings</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>shortcut-factory.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00122</filename>
    <class kind="class">gepetto::gui::ShortcutFactory</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>transform-writer.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00123</filename>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <includes id="a00108" name="node-visitor.h" local="no" imported="no">gepetto/viewer/node-visitor.h</includes>
    <class kind="class">gepetto::viewer::TransformWriter</class>
    <class kind="class">gepetto::viewer::BasicTransformWriter</class>
    <class kind="class">gepetto::viewer::YamlTransformWriter</class>
    <class kind="class">gepetto::viewer::TransformWriterVisitor</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>tree-item.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00124</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::gui::BodyTreeItem</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="file">
    <name>urdf-parser.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00125</filename>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <includes id="a00091" name="leaf-node-collada.h" local="no" imported="no">gepetto/viewer/leaf-node-collada.h</includes>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
    <namespace>gepetto::viewer::urdfParser</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>getFilename</name>
      <anchorfile>a00132.html</anchorfile>
      <anchor>aae4a14857220a372156795f7e6b6abac</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>GroupNodePtr_t</type>
      <name>parse</name>
      <anchorfile>a00132.html</anchorfile>
      <anchor>a9e2024c944424ebe3bbc1edc663e9319</anchor>
      <arglist>(const std::string &amp;robotName, const std::string &amp;urdf_file, const bool &amp;visual=true, const bool &amp;linkFrame=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>window-manager.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00126</filename>
    <includes id="a00086" name="group-node.h" local="no" imported="no">gepetto/viewer/group-node.h</includes>
    <includes id="a00109" name="node.h" local="no" imported="no">gepetto/viewer/node.h</includes>
    <class kind="class">gepetto::viewer::WindowManager</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="file">
    <name>windows-manager.h</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/viewer/</path>
    <filename>a00127</filename>
    <includes id="a00084" name="fwd.h" local="no" imported="no">gepetto/viewer/fwd.h</includes>
    <includes id="a00080" name="config-osg.h" local="no" imported="no">gepetto/viewer/config-osg.h</includes>
    <includes id="a00123" name="transform-writer.h" local="no" imported="no">gepetto/viewer/transform-writer.h</includes>
    <class kind="struct">gepetto::viewer::NodeConfiguration</class>
    <class kind="struct">gepetto::viewer::BlenderFrameCapture</class>
    <class kind="class">gepetto::viewer::WindowsManager</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::viewer</namespace>
    <member kind="typedef">
      <type>OpenThreads::Mutex</type>
      <name>Mutex</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>af2b8c58183efb47cd567eb59fb57ac03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OpenThreads::ScopedLock&lt; Mutex &gt;</type>
      <name>ScopedLock</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>af531ee51faed7f01013b25977f9ccb19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>windows-manager.hh</name>
    <path>/local/devel/hpp/src/gepetto-viewer/include/gepetto/gui/</path>
    <filename>a00128</filename>
    <includes id="a00085" name="fwd.hh" local="no" imported="no">gepetto/gui/fwd.hh</includes>
    <includes id="a00127" name="windows-manager.h" local="no" imported="no">gepetto/viewer/windows-manager.h</includes>
    <class kind="class">gepetto::gui::WindowsManager</class>
    <namespace>gepetto</namespace>
    <namespace>gepetto::gui</namespace>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::ActionSearchBar</name>
    <filename>a00007.html</filename>
    <member kind="function">
      <type></type>
      <name>ActionSearchBar</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a2a2bc7ef400a43077a74b8733a227b2c</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAction</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>aad22d61cd2c0ecf46f85a84fd2a2825c</anchor>
      <arglist>(QAction *action)</arglist>
    </member>
    <member kind="function">
      <type>QAction *</type>
      <name>showAction</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a6dc68fa854dce0b2bf5cafea1f00414c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyPressEvent</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a0007b6bdbd89e89725252ccd06cd9a77</anchor>
      <arglist>(QKeyEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>showEvent</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>aa26e72aeeb468a8cb3c4af057c4b8e48</anchor>
      <arglist>(QShowEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::BasicTransformWriter</name>
    <filename>a00008.html</filename>
    <base>gepetto::viewer::TransformWriter</base>
    <member kind="function">
      <type></type>
      <name>BasicTransformWriter</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>aa0dab109c5cb818471e0f116508a6423</anchor>
      <arglist>(const std::string filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BasicTransformWriter</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>afa4bd50e3c8d68365681bffa43ce4674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeTransform</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>aedabfea6ced2e3afbf2e27cb369f46a5</anchor>
      <arglist>(const char *objName, const osgVector3 &amp;vec, const osgQuat &amp;quat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeNewFrame</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a5a265e1ae49ffd8975f6cefc7f4559c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::viewer::BlenderFrameCapture</name>
    <filename>a00009.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; NodePtr_t &gt;</type>
      <name>Nodes_t</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>aa9e0964162ce8bbb97971793c760e5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlenderFrameCapture</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a0eb5ffad78cb314c5ae0902f07c1b9d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a39a59427f97218d890d53123309e1e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>osg::ref_ptr&lt; TransformWriterVisitor &gt;</type>
      <name>writer_visitor_</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ac3ba3b2ab0186809991c010cc7fa01fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Nodes_t</type>
      <name>nodes_</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a5aa46efcdbaf4d3e12354f99c50f8bfe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::BlenderGeomWriterVisitor</name>
    <filename>a00010.html</filename>
    <base>gepetto::viewer::NodeVisitor</base>
    <member kind="function">
      <type></type>
      <name>BlenderGeomWriterVisitor</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a4c3efa529eeb8db97bd1050c3f4eaa80</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a74670da580aa2a9eb692cd32bced073d</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a3e14f93064e834a4b5135bbec8d94d21</anchor>
      <arglist>(GroupNode &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a56ae14d586a4a122b22386902a7f5b3d</anchor>
      <arglist>(LeafNodeArrow &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a0f5d805550ed7252df36b1fbd2b413de</anchor>
      <arglist>(LeafNodeBox &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a6886214a4d75b34abea68bb995920691</anchor>
      <arglist>(LeafNodeCapsule &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a9b0bb6654e8a1513c8cc088c8b0d6dcc</anchor>
      <arglist>(LeafNodeCollada &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a9cdb2e4eb6af658058eaf3d94bddefa2</anchor>
      <arglist>(LeafNodeCone &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a518fcf14fa0da80333f625e276fab715</anchor>
      <arglist>(LeafNodeCylinder &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a2cccdc804778a511c65c08aa16cdb3e6</anchor>
      <arglist>(LeafNodeFace &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>af74a3caf393265db8a000693e6641db6</anchor>
      <arglist>(LeafNodeGround &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a00cda70e66b11b32669ece99a996d868</anchor>
      <arglist>(LeafNodeLight &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>afbdf248463f163128caec74572ac0312</anchor>
      <arglist>(LeafNodeLine &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>ac919b849504a3b92a6fe1005458a4e45</anchor>
      <arglist>(LeafNodeSphere &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a5e26033021cf2e3cdfcfde05869b6272</anchor>
      <arglist>(LeafNodeXYZAxis &amp;node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ofstream &amp;</type>
      <name>out</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a90e3ed6f264d32406e11bf6bf10b2b44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>standardApply</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>ae0315042b52c04a685235025ad94a820</anchor>
      <arglist>(Node &amp;node, osgVector3 scaleMultiplier=osgVector3(1, 1, 1))</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a52f481e6e81e591b602c9be04c2a5309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeFile</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a6b971169a81a3b8398e4ccdfa4dd9063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unimplemented</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>af4661d4c24c4d0ad3b0cbae8859499d6</anchor>
      <arglist>(const char *type, Node &amp;n)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream</type>
      <name>file_</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>aaa74920cbe80580db4522b1dde2d4bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>filename_</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a4130896776475770e7c37a4333bdded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>nodeCount_</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a10a71652187c8901ddd4071726dc7977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>groupDepth_</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>aa6dbf93b47675c04a668f7033f13c1a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::BodyTreeItem</name>
    <filename>a00011.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>setViewingMode</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>afb5e66ddd03457a20e48dbd0b0761a9f</anchor>
      <arglist>(QString mode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVisibilityMode</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a3243724cb0295d1eeeaf7fdbef001275</anchor>
      <arglist>(QString mode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeFromGroup</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a829c5fcce560345daea7eb516cca94cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>remove</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a1e144abdd09446646152863de6355039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeAll</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>aee64f04f057e37a9db7dcb7b48bb5b98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addLandmark</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a0ad60d4b80d8468d5ee3e3a9db3754d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>deleteLandmark</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ad33cbfd1a8de507d4752acb304c7e283</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>text</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ae5e38a6a4d0fa663352ebbc496cb350c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>requestInitialize</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a3751d84126bad4c02d4f7f798d3e3714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BodyTreeItem</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a53228244e502e851452d786909eecca9</anchor>
      <arglist>(QObject *parent, NodePtr_t node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>acb191cc2515b7ec5aeb5a6e122719ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStandardItem *</type>
      <name>clone</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ab17ab4971c17ac625124e965d38b9bfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>type</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ad775475a8160798f8759d75802e9dbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>node</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ab51444e480e31fe2cba4112d7e967ab4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateContextMenu</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>af47d9f899cf33bc2e0c39aba5510bde3</anchor>
      <arglist>(QMenu *menu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentGroup</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ac494cc29c355e17bf8dda8361b8c3063</anchor>
      <arglist>(const std::string &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>propertyEditors</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a3cea62d3f7bd166a009bc24103546970</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyTreeItem</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a8faeeb12caadfa6e6780197ca46b63bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToWindow</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a7e3653f2d38f4e98bdf07ce9d9f3d8c8</anchor>
      <arglist>(unsigned int windowID)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>VisibilityItem</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>aef99da3efc48f6e303e502c228b56f9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::BodyTreeWidget</name>
    <filename>a00012.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>selectBodyByName</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>aef80ba1760e96bec40720a7e38369d0e</anchor>
      <arglist>(const QString bodyName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectBodyByName</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a438373d0049c123e977996d9b64bb1cc</anchor>
      <arglist>(const std::string &amp;bodyName)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; BodyTreeItem * &gt;</type>
      <name>selectedBodies</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>aac04dca42295c9ca88071d285a978f58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bodySelected</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>ad75ac9b0cf50a3ad6c99c2650f35690f</anchor>
      <arglist>(SelectionEvent *event)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BodyTreeWidget</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a16c5a52f72ba66bfed33cad4bc7f7c27</anchor>
      <arglist>(QWidget *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a508ac7b938324c9905b5f97c50b9caac</anchor>
      <arglist>(QTreeView *view, QWidget *propertyArea)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyTreeWidget</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a3f25be9a23cf0dc96bd39013f6bfb73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QTreeView *</type>
      <name>view</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>aed9555c8bd59f38cb85a73c587b2be6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStandardItemModel *</type>
      <name>model</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a46337f5dbecd5220fddc2971bbd5abfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emitBodySelected</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a52afdbbc2b9b28b086f4e67bbc915fc7</anchor>
      <arglist>(SelectionEvent *event)</arglist>
    </member>
    <member kind="slot" protection="protected">
      <type>void</type>
      <name>customContextMenu</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a2605e2f59694dfecbd61c9e8d2b787bd</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="slot" protection="protected">
      <type>void</type>
      <name>currentChanged</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a177ebecf1b26f3a75cf963fd8153ff75</anchor>
      <arglist>(const QModelIndex &amp;current, const QModelIndex &amp;previous)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectBodyByName</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>aef80ba1760e96bec40720a7e38369d0e</anchor>
      <arglist>(const QString bodyName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectBodyByName</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a438373d0049c123e977996d9b64bb1cc</anchor>
      <arglist>(const std::string &amp;bodyName)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; BodyTreeItem * &gt;</type>
      <name>selectedBodies</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>aac04dca42295c9ca88071d285a978f58</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::ColorMap</name>
    <filename>a00013.html</filename>
    <member kind="function">
      <type></type>
      <name>ColorMap</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>aaba3a146f42e48108af68ce7de665687</anchor>
      <arglist>(std::size_t nbColors)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>getColor</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>af14f0f4874dfb83c593549891cbf4a7a</anchor>
      <arglist>(std::size_t index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getColor</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a1c1df2a5b2775672ad21171649d2d026</anchor>
      <arglist>(std::size_t index, osgVector4 &amp;color) const </arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>nextColor</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a347e22a77f63ab6ec1493c55855823a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentIndex</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a2ab5d30c9dd60a039066863e6870ae6d</anchor>
      <arglist>(std::size_t index)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>remap</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ad864e8d4579f24f54e55dc9a359e74d0</anchor>
      <arglist>(const std::size_t &amp;index) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>interpolate</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a9a385fbe3d28dea497fde12a98514224</anchor>
      <arglist>(std::size_t nbColors, std::size_t index)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::viewer::Configuration</name>
    <filename>a00014.html</filename>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a1faa91fe533a5fee553bbf20d4a71bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aed117b592c150cdd7d1eaaade2031379</anchor>
      <arglist>(const float *a, bool XYZW)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a946ef6b5141fa8c040d057b7c38304c0</anchor>
      <arglist>(const osgVector3 &amp;p, const osgQuat &amp;q)</arglist>
    </member>
    <member kind="variable">
      <type>osgVector3</type>
      <name>position</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aeea09cae41bc4c18d3d1524d47bc482d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>osgQuat</type>
      <name>quat</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a827dd1f5484631d385518082e72ea4be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::ConfigurationDialog</name>
    <filename>a00015.html</filename>
    <member kind="typedef">
      <type>viewer::Configuration</type>
      <name>Configuration</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a83bd6af98cb5d8623e9baef4b1cf240a</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>configurationChanged</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6f030dbad62892f9378c66ebf34f7b95</anchor>
      <arglist>(const Configuration &amp;config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigurationDialog</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a71ef41772bbd3d44408bab0cf774d037</anchor>
      <arglist>(const viewer::PropertyPtr_t prop, const QString &amp;name, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>ae2ccdb830de99b1ddfd87981df2762eb</anchor>
      <arglist>(QShowEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::ConnectionInterface</name>
    <filename>a00016.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionInterface</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>aa94f01b3cf3b99c25bf87e6affe86fd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>openConnection</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>aba42619a64bd332c23f4f484de2bd2ff</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>closeConnection</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>ac1539ffd83c5aec1895073be413d33e0</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::DialogLoadEnvironment</name>
    <filename>a00017.html</filename>
    <class kind="struct">gepetto::gui::DialogLoadEnvironment::EnvironmentDefinition</class>
    <member kind="function">
      <type></type>
      <name>DialogLoadEnvironment</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ad7f4c3b9256fc3e3ae95ec2a708fe21c</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DialogLoadEnvironment</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a3aaf3167c15f01bac8104417482c1039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EnvironmentDefinition</type>
      <name>getSelectedDescription</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a52db2761bfe6d45d204054cf1bba7782</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addEnvironmentDefinition</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a031532c74da72559b6ef3646dbaba0d2</anchor>
      <arglist>(QString name, QString envName, QString package, QString urdfFilename, QString urdfSuffix, QString srdfSuffix)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; EnvironmentDefinition &gt;</type>
      <name>getEnvironmentDefinitions</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a30a36214a343a93f505f1b194213fa83</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::DialogLoadRobot</name>
    <filename>a00018.html</filename>
    <class kind="struct">gepetto::gui::DialogLoadRobot::RobotDefinition</class>
    <member kind="function">
      <type></type>
      <name>DialogLoadRobot</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a85cc0091f0b1abfacd3253208e02ef5d</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DialogLoadRobot</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a704e8ebc7917e96a3156ed55771a9e18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RobotDefinition</type>
      <name>getSelectedRobotDescription</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>aa797e89122b4d2726dd2913398f63d30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addRobotDefinition</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a98c17c7780fc6f97467c4dd7c194f0a4</anchor>
      <arglist>(QString name, QString robotName, QString rootJointType, QString modelName, QString package, QString urdfSuffix, QString srdfSuffix)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; RobotDefinition &gt;</type>
      <name>getRobotDefinitions</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a419ebf9c191ca8fa241b57d45b8291ed</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::EnumProperty</name>
    <filename>a00019.html</filename>
    <base>gepetto::viewer::PropertyTpl</base>
    <member kind="typedef">
      <type>shared_ptr&lt; EnumProperty &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a207d4cfe93fd7f288a9523d9c84903b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::function&lt; T(void)&gt;</type>
      <name>Getter_t</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ad55304b7c8b4fd6a73ba0368a6ca16eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::function&lt; void(const T &amp;)&gt;</type>
      <name>Setter_t</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ae9ae2822bdf15fcc72233b0551a59311</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>af561c8b537e0f56b107698688d15430f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const MetaEnum *</type>
      <name>metaEnum</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a92448f8b2a38e1467c3a8d6d33257fb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumProperty</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a0e6e95065cebec6d8355918b201a2fc2</anchor>
      <arglist>(const std::string &amp;name, const MetaEnum *type, const Getter_t &amp;g, const Setter_t &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a42b658f2b18582fbdca903a69545c2f4</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>create</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ade5125501cbd7da040b0bf000b2cba70</anchor>
      <arglist>(const std::string &amp;name, const MetaEnum *type, const Getter_t &amp;g, const Setter_t &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::gui::DialogLoadEnvironment::EnvironmentDefinition</name>
    <filename>a00020.html</filename>
    <member kind="function">
      <type></type>
      <name>EnvironmentDefinition</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ae971c5d390a23e0761fe9aafacdcc0d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnvironmentDefinition</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ab1bb4f3a48325a0d7c9637fc9b054e67</anchor>
      <arglist>(QString name, QString envName, QString package, QString urdfFilename, QString urdfSuffix, QString srdfSuffix)</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a78b3003602f3a05ed5d5c4522841a9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>envName_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a642da2ba20ae51a1482429bb7adea410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>urdfFilename_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a80a8a799271792bbb53e33f7c63827de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>package_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>aebdcf67a8bbb02f5cc59f2ddd4492113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>urdfSuf_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a9a705af8ccc3f2b745cf10c6c28a7f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>srdfSuf_</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>ab12f9135548cad7d0f644ab8fae88831</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::GroupNode</name>
    <filename>a00021.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function">
      <type>GroupNodePtr_t</type>
      <name>clone</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a1f96e7e52cb84663c2a8c4c4e2a41c4a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>GroupNodePtr_t</type>
      <name>self</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a851f78d4a3f15ba78cea7c5cfa5c2dee</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addChild</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ae378f43516aa4b5d8f163467ce093eb4</anchor>
      <arglist>(NodePtr_t child_ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeChild</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>aa810c59b4e60c094346e36bd11c75982</anchor>
      <arglist>(NodePtr_t child_ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasChild</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ace081ef768b06eaf4ee63a9d567aec27</anchor>
      <arglist>(NodePtr_t child_ptr) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAllChildren</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>acbff9a5cfa3e212baee1df012171156e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getNumOfChildren</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>aee804f8324d04bbd1aa3c1baf985fb14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>getChild</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a688d45d2a8b7921fb932543bb1dec31f</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLightingMode</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a2bc334e7c26349f77e076cbe46179aaf</anchor>
      <arglist>(const LightingMode &amp;lighting_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setWireFrameMode</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ac7883c0809cc8d113588daa4447d46c9</anchor>
      <arglist>(const WireFrameMode &amp;wireframe_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a06da0bba3dcfbd145a550613b365af9c</anchor>
      <arglist>(const float &amp;alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScale</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a4794d3b602fe435ad6e1a7dc7241546f</anchor>
      <arglist>(const float scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>acbf4f8389db7cc685c0885f5e7a630ba</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>traverse</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a14993a16cfa7e291403899bd71e7c81e</anchor>
      <arglist>(NodeVisitor &amp;visitor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osg::ref_ptr&lt; osg::Node &gt;</type>
      <name>getOsgNode</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a8e7edcf5f9672463adfd525079b9bef7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GroupNode</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a9d11861dd25dd9f76620c4e42e9c1332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupNodePtr_t</type>
      <name>create</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ae445e40ab0c965de3085603e5e2c2d35</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupNodePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a7b40f74d21c0be353877f6f02e185a87</anchor>
      <arglist>(GroupNodePtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a4f6b6fdbdb870cc479443c283692896e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GroupNode</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a46aefc89613e9dfd9885e41c9f7126b6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GroupNode</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a2cf7beb9b2545231567ffcaf510ac2f1</anchor>
      <arglist>(const GroupNode &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initWeakPtr</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a3ecf41802e6e466215c5c67384165921</anchor>
      <arglist>(GroupNodeWeakPtr other_weak_ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::JointModifierInterface</name>
    <filename>a00022.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointModifierInterface</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a4f1d9f5f7344dd7b6af6d39fbc8641c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QAction *</type>
      <name>action</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a05c6819afd0596d55466fb426239d16a</anchor>
      <arglist>(const std::string &amp;jointName) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>osgGA::KeyboardManipulator</name>
    <filename>a00023.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyboardManipulator</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a086226ff7e4b5cbaf3758889da793cd1</anchor>
      <arglist>(int flags=DEFAULT_SETTINGS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyboardManipulator</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aefea593e85a6e7a89ed2ae09a8660b2c</anchor>
      <arglist>(const KeyboardManipulator &amp;fpm, const osg::CopyOp &amp;copyOp=osg::CopyOp::SHALLOW_COPY)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyboardManipulator</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>afc5a04600c94e72c716af6631482e931</anchor>
      <arglist>(osgViewer::GraphicsWindow *window, int flags=DEFAULT_SETTINGS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>META_Object</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aaafe9c44b4bfd53f39705df3105cdbdd</anchor>
      <arglist>(osgGA, KeyboardManipulator)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handleKeyDown</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a7fe1a7a59c9411e7665d859247946680</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;ea, osgGA::GUIActionAdapter &amp;us)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handleKeyUp</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ab4558333b4e893aeb6500cadd350dbc7</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;ea, osgGA::GUIActionAdapter &amp;us)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handleFrame</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a23d646a11f7e04eeb3d32c52a3392f19</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;ea, osgGA::GUIActionAdapter &amp;us)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handleMousePush</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a1555740dd7fbf445caaf2fdda298a293</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;ea, osgGA::GUIActionAdapter &amp;us)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>handleMouseRelease</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a3a1c822d09af9831db0a4d8b1c905f5b</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;ea, osgGA::GUIActionAdapter &amp;us)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>performMovementLeftMouseButton</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a0242fafe71a56d6cae0bb6b650aaa762</anchor>
      <arglist>(const double eventTimeDelta, const double dx, const double dy)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>rotateRoll</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>adfba256a949bffdeeefd13f684f82233</anchor>
      <arglist>(const double roll)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getUsage</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a03554108ab9e1aae1a60412bfe11b8e7</anchor>
      <arglist>(osg::ApplicationUsage &amp;usage) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>initKeyboard</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a0ff58c942f9bf007300ebfb71f8b31df</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeArrow</name>
    <filename>a00024.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function">
      <type>void</type>
      <name>addVertex</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>ac7f2f75a7caf44651b5887c9fbefa4aa</anchor>
      <arglist>(const osgVector3 &amp;vertex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeArrowPtr_t</type>
      <name>clone</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>aed2a0ae4ed70e3cb78d43931780513bc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>copy</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a807af5d1cfdb43e635c406d55a409d61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeArrowPtr_t</type>
      <name>self</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a6e6f5748087f2001c8be0662ef659fef</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a2fe35eb88f35363e86f6fed6f2ab9ba8</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>osgVector4</type>
      <name>getColor</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a77e072a08c279fefeaae62d5eef8be65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a196ad224efb655c5238ea277685213cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a378d135b4b2f6a265270906b4f5114b8</anchor>
      <arglist>(const float &amp;radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a22c9c7b25133488230488ecd939f5ded</anchor>
      <arglist>(const float &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSize</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a235ffa0dcd3a51fc9e8b3ac3f02e57f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a9e7b687158db279eef25ecb30bb53041</anchor>
      <arglist>(float radius, float length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeArrow</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a8e268acde45ceecc9c3e8320daf54eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeArrowPtr_t</type>
      <name>create</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a47395bd660be0fa7ea81ffc440b3d8e8</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;color, float radiusCenter, float sizeAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeArrowPtr_t</type>
      <name>create</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a23c046f9ce10205cdf0f674c06af0cae</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;color, float radiusCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeArrowPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a67d8e9ea9bc9048dc7122ea9841444f7</anchor>
      <arglist>(LeafNodeArrowPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>abbeee32046f2a02326880d4158bb9cda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeBox</name>
    <filename>a00025.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeBoxPtr_t</type>
      <name>clone</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>aa16c084a7b89776b06bca7a013327fd7</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>copy</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a5d5563d64832d6c129d00d2c968f1400</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeBoxPtr_t</type>
      <name>self</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a24770a41489d1f7bd384e26cde291194</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHalfAxis</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>adf8e7724fe48720a53884bbc83245388</anchor>
      <arglist>(const osgVector3 &amp;half_axis)</arglist>
    </member>
    <member kind="function">
      <type>osgVector3</type>
      <name>getHalfAxis</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a0628f1c5cb51de1dbf9bb95bca93e10c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeBox</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a3706163c5fd094850e67fc0cdcd2dbe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeBoxPtr_t</type>
      <name>create</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ad5563261e1a9064626d040cf4f60d855</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;half_axis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeBoxPtr_t</type>
      <name>create</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ae0e00f4b77c8bfc08dfb31a1614480ba</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;half_axis, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeBoxPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a8f55733c354714e874e949c66d497e23</anchor>
      <arglist>(LeafNodeBoxPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>aa5c7567dd4a4b5c73e64d5a2740e24c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeCapsule</name>
    <filename>a00026.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeCapsulePtr_t</type>
      <name>clone</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>aae75513cd7663fb37d202c81d4611479</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeCapsulePtr_t</type>
      <name>copy</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a38c661e58a703a0ec4eaf8cba5ed3e58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeCapsulePtr_t</type>
      <name>self</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a2965d7f87115bad0daf5775bfc84a8d5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRadius</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a4364b59707c2d3606414201ee8ff3134</anchor>
      <arglist>(const float &amp;radius)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a1bf021e6c3571f54b8fce0929bd146fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeight</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a447a6cf174253428ffd724381ce2a2fe</anchor>
      <arglist>(const float &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getHeight</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>abe5980ea9314e4ec500977ad63150034</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeCapsule</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a8feae1cf4d9895b23ef289cf6c5edf38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeCapsulePtr_t</type>
      <name>create</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a1c3df782c3ae08e19ce370563420d3c5</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const float &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeCapsulePtr_t</type>
      <name>create</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>acdb328a4da529ba5d6eb43c112078838</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const float &amp;height, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeCapsulePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a920ddf739696338d4227547bffdc51f0</anchor>
      <arglist>(const LeafNodeCapsulePtr_t &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>aea6df256590e29a7dfe51e292e8b3134</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeCollada</name>
    <filename>a00027.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeColladaPtr_t</type>
      <name>clone</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>ab7c485ef3a85b10f9c7f44f247e5a852</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>::osg::NodeRefPtr</type>
      <name>getColladaPtr</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a3573d5613c3f608047855ec2bd5aa81a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeColladaPtr_t</type>
      <name>copy</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a7ad77cb2384127fab933a23ac6428df7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeColladaPtr_t</type>
      <name>self</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>ae527576ba7fb14349cc21a3e169ce529</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a9ecc7298a93318ff74b6a58c786c1d13</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>osgVector4</type>
      <name>getColor</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a4027d330613df93a918aa77bfa0175bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexture</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>abc0d2d4497ad7f93a3bb33c6eefee63e</anchor>
      <arglist>(const std::string &amp;image_path)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>meshFilePath</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a065fa793a50a1a51aaf7a51a1ab50919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>textureFilePath</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a0a964d2d0ae10cbfac3f17ab3cb8f1a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a324659d69d2edd8664daba0d1aba0a15</anchor>
      <arglist>(const float &amp;alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osg::ref_ptr&lt; osg::Node &gt;</type>
      <name>getOsgNode</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>adaa7fbdc2aa52031dc060ef23c40efad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeCollada</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a73bd5afa037768e44ba69e4b7384f53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeColladaPtr_t</type>
      <name>create</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>afeeb927ed68ea64fa25baefdacc5ba04</anchor>
      <arglist>(const std::string &amp;name,::osg::NodeRefPtr mesh, const std::string &amp;collada_file_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeColladaPtr_t</type>
      <name>create</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a78ace02a543971c986c8f8938044e0af</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;collada_file_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeColladaPtr_t</type>
      <name>create</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>abb73c07f862933a487437f1920ab848c</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;collada_file_path, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeColladaPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>aa31367403f92bf51008abd514cf4c10d</anchor>
      <arglist>(LeafNodeColladaPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a56e653b33b29d99ede41175e938681e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeCone</name>
    <filename>a00028.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeConePtr_t</type>
      <name>clone</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a970162b9f5d03df221a426222318ad77</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeConePtr_t</type>
      <name>copy</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a4dde54c327cfb4e3f51ec8b0ddcff06d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeConePtr_t</type>
      <name>self</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ad881649f2f0cb2b764a782f7069b1b34</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRadius</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a63e11b90a89b611d53895fd8aa1125f4</anchor>
      <arglist>(const float &amp;radius)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a6978c51c2d63b13cbf1bdce941f83552</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setHeight</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>af165f7c933be88d6717a31045b56154e</anchor>
      <arglist>(const float &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getHeight</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>aa808fbe6138d37c707c19f1145049338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeCone</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>aa7f874f620d3f4a3f1e5d44ae71547d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeConePtr_t</type>
      <name>create</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>aa58fcb9fca2c68f3aa7985c46a9cf6b0</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const float &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeConePtr_t</type>
      <name>create</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ae8480eeead33ec0809e3e8ce6e2f92eb</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const float &amp;height, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeConePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ab20d9d7998fb179e54deb58c34a8aa32</anchor>
      <arglist>(LeafNodeConePtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a5ccbc6c1c0fa90ac984b0effd87e774e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeCylinder</name>
    <filename>a00029.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeCylinderPtr_t</type>
      <name>clone</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a834e5a62319f2f6bb9616c456999b66a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>copy</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa3028635eeae3eb207ceebc2734dae1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeCylinderPtr_t</type>
      <name>self</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a0a219171060e15b1bb50b7adb9bac4ee</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa8ac2317ed7526b3ac51834eebdf8c62</anchor>
      <arglist>(const float &amp;radius)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>af27f31394d508a853f61919538e9a014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a7c31500f42d7fed8f4dc37f09fc4973a</anchor>
      <arglist>(const float &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getHeight</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a928c7012fae24503a194eeee1f59bdb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeCylinder</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>adbb57d56ee2d7b5e135625bec32988c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeCylinderPtr_t</type>
      <name>create</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a26885588d352fe0fbc884101534a4109</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const float &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeCylinderPtr_t</type>
      <name>create</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>af53d4bb218dc7c04af11994db7a6df2b</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const float &amp;height, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeCylinderPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a35d928a5b9047d4fc5245e310f6d183d</anchor>
      <arglist>(LeafNodeCylinderPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a1a0a17d8a235bdc0271527db75716521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeFace</name>
    <filename>a00030.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function">
      <type>void</type>
      <name>addVertex</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a8d4dd6394cd2dd68dabd9fd647b51e04</anchor>
      <arglist>(const osgVector3 &amp;vertex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeFacePtr_t</type>
      <name>clone</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a3b9f196e5fc20f47543817fe665d9008</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>copy</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ad967487f636d7b9acfbb3a1f995826ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeFacePtr_t</type>
      <name>self</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ab5edd15c753d2e1f9cd6208f02e13cf9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a409e1303a3b0c609c119e63cc7765f1a</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexture</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a7f29b063225aa3330042853c22aeb997</anchor>
      <arglist>(const std::string &amp;image_path)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>nbVertices</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ae3595c0a3605110fae95476e4e7acfce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeFace</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a44afb3c1efb662c683410f28fa4f06a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeFacePtr_t</type>
      <name>create</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>af31f14916804849ab9ac67189b727b55</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;point1, const osgVector3 &amp;point2, const osgVector3 &amp;point3)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeFacePtr_t</type>
      <name>create</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a9ce7e2f3841b5862a0266087bae13780</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;point1, const osgVector3 &amp;point2, const osgVector3 &amp;point3, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeFacePtr_t</type>
      <name>create</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ad2c323391aa18215347a2dbf7c9fec52</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;point1, const osgVector3 &amp;point2, const osgVector3 &amp;point3, const osgVector3 &amp;point4)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeFacePtr_t</type>
      <name>create</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a10b556ebcd886de705f70a8636a29321</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;point1, const osgVector3 &amp;point2, const osgVector3 &amp;point3, const osgVector3 &amp;point4, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeFacePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>aae31294ca2a2bc872dbfeeb14c9d8ac3</anchor>
      <arglist>(LeafNodeFacePtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a49acba5bfeeb1f9fa0f5a4c22f33f71c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeGround</name>
    <filename>a00031.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeGroundPtr_t</type>
      <name>clone</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a0512a48d41c0b3183032d84bb8ec57b4</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeGroundPtr_t</type>
      <name>copy</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ac881d221614be3257a5cbfba8290c93d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeGroundPtr_t</type>
      <name>self</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ac6a88186205c8c7e8e1dc2cb8cc86228</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a148520b25086c3192eb5f565543f6a5d</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColor1</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ac2adf137454fdb3f253b54542122a0ea</anchor>
      <arglist>(const osgVector4 &amp;color1)</arglist>
    </member>
    <member kind="function">
      <type>const osgVector4 &amp;</type>
      <name>getColor1</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ad9c79aa6b314b0f2c12d9e059acc99a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColor2</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a1b5aa35a47e6b252818a4f4af01d0c57</anchor>
      <arglist>(const osgVector4 &amp;color2)</arglist>
    </member>
    <member kind="function">
      <type>const osgVector4 &amp;</type>
      <name>getColor2</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a05fe625c613a1d0da7fe20d2742cf1c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColors</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ad28efee21fcdd04704993dcddfc13359</anchor>
      <arglist>(const osgVector4 &amp;color1, const osgVector4 &amp;color2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeGround</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a5955e606e85d38c8520471cb1be8f1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeGroundPtr_t</type>
      <name>create</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a4c00e4e4b71eda1f08f06796e5221100</anchor>
      <arglist>(const std::string &amp;name, const float &amp;length, const float &amp;width)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeGroundPtr_t</type>
      <name>create</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a3b3e11767aaa6c5eccd03756b7970f66</anchor>
      <arglist>(const std::string &amp;name, const float &amp;length, const float &amp;width, const float &amp;square_length, const float &amp;square_width)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeGroundPtr_t</type>
      <name>create</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a14cdd756cf0417476789c43018af0447</anchor>
      <arglist>(const std::string &amp;name, const float &amp;length, const float &amp;width, const float &amp;square_length, const float &amp;square_width, const osgVector4 &amp;color1, const osgVector4 &amp;color2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeGroundPtr_t</type>
      <name>create</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ad7ef27d4649d95b51bd86108c8fae633</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeGroundPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>aef4a92d4a6a6ffb39e2c01a5d54ed468</anchor>
      <arglist>(const LeafNodeGroundPtr_t &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>afa5106e60789ee6412124d86d5325cf3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeLight</name>
    <filename>a00032.html</filename>
    <base>gepetto::viewer::LeafNodeSphere</base>
    <member kind="function">
      <type>LeafNodeLightPtr_t</type>
      <name>clone</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a45b89514c55192d129c4392be18b8a80</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeLightPtr_t</type>
      <name>copy</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a9eeead7f0852927d32247901211d2e27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeLightPtr_t</type>
      <name>self</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>ad728238447aea6f77c45dc74b10f9169</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColor</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a376d89508b6535ac50a3db99f9ccfba7</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoot</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a8050a57c6c788f7295d7fd02cc73e80e</anchor>
      <arglist>(GroupNodePtr_t root)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeLight</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a490d5564f4a08737e84b887d1d5ace94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLightPtr_t</type>
      <name>create</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>ac579e5ae5919e05679d39bb1bab9131f</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLightPtr_t</type>
      <name>create</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a5cac502227dfc74137b20562b1abb998</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLightPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a3fa275ab9d40cc43a1a90a34408384ae</anchor>
      <arglist>(LeafNodeLightPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a75c8748d42d44ecfe04fad92b29a8add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeLine</name>
    <filename>a00033.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeLinePtr_t</type>
      <name>clone</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ad3fc3153dd73d19bcf93a4cb56f3ff31</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>copy</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a332e9ff3746ece6dbc45b53532afcf80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeLinePtr_t</type>
      <name>self</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a23f80cf02aa8f3afcdc97078aecc4048</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStartPoint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a04ac09a1d84d8b7364cde415b575eb1b</anchor>
      <arglist>(const osgVector3 &amp;start_point)</arglist>
    </member>
    <member kind="function">
      <type>osgVector3</type>
      <name>getStartPoint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a52aed6b87b8018306c2ca94773f629e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEndPoint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a913b2f29537f75d2c249322da1a60a1b</anchor>
      <arglist>(const osgVector3 &amp;end_point)</arglist>
    </member>
    <member kind="function">
      <type>osgVector3</type>
      <name>getEndPoint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a55e4b1ae6ffefd9b925193bda9a428c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>aaef188049c1b376b7aa77d02680f64d3</anchor>
      <arglist>(const GLenum &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>GLenum</type>
      <name>getMode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a3c1fbc3d1dad7177224dee64803c5209</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPoints</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a9cb0b610ebe6171fb1696738f1dec002</anchor>
      <arglist>(const osgVector3 &amp;start_point, const osgVector3 &amp;end_point)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPoints</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a0f157c0f7c04c01210651ff692a1befb</anchor>
      <arglist>(const ::osg::Vec3ArrayRefPtr &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointsSubset</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a3cc993fe30db58ac4f7d7b20cb6e0d11</anchor>
      <arglist>(const int first, const std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>::osg::Vec3ArrayRefPtr</type>
      <name>getPoints</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>af9ff62d316932781c4549ff6a434f44e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a9ca502f7eac83b0b9429c42ac1d09ef6</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColors</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a06c90adcd361cd78fd8ef4e534bd63c8</anchor>
      <arglist>(const ::osg::Vec4ArrayRefPtr &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>osgVector4</type>
      <name>getColor</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>aa595cd5c83c98273bdcd6eccce8db016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::osg::GeometryRefPtr</type>
      <name>geometry</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ada42b8f0fc24bc77932b0d2a68fc62cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeLine</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a486f37a380d2e9f05a7a91bb3d5fdc8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLinePtr_t</type>
      <name>create</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a8f02f0629abd20f7c74dfd6c88f5f60c</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;start_point, const osgVector3 &amp;end_point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLinePtr_t</type>
      <name>create</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ae7acd0d600e250d21e119149b88cad5b</anchor>
      <arglist>(const std::string &amp;name, const osgVector3 &amp;start_point, const osgVector3 &amp;end_point, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLinePtr_t</type>
      <name>create</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a6c36e1a49bd04018886b2d4b768de78c</anchor>
      <arglist>(const std::string &amp;name, const ::osg::Vec3ArrayRefPtr &amp;points, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeLinePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a3efac694977f6bccdea1cf1f36a7e841</anchor>
      <arglist>(LeafNodeLinePtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a91e812efddd11988960c8b2aed15dc52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeMesh</name>
    <filename>a00034.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeMeshPtr_t</type>
      <name>clone</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ae344d4e8ccd640d21f5e67b072543369</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeMeshPtr_t</type>
      <name>copy</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a8999377fe9841edda142bb9dd51033be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeMeshPtr_t</type>
      <name>self</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ad4929dfaf468696af26073b2603dd32e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ab92d67417d3a053c61e2c7e6ec94ec76</anchor>
      <arglist>(const osgVector4 &amp;color_diffuse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>af6b35395ce9ce6b65790bb165fb69fee</anchor>
      <arglist>(const osgVector4 &amp;color_diffuse, const osgVector4 &amp;color_specular, const osgVector4 &amp;color_emissive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTexture</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ab53346729ebaab52f2f53ee7705c4cb1</anchor>
      <arglist>(const std::string &amp;image_path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>abb0508646badb7da6ab6e5e15995e965</anchor>
      <arglist>(const float &amp;alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osg::ref_ptr&lt; osg::Node &gt;</type>
      <name>getOsgNode</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>aceac2a78815bf8030ad6c3bbbe989d20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexArray</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a2252f35c2e065deae4273f455dc0d5da</anchor>
      <arglist>(osg::Vec3ArrayRefPtr arrayOfVertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPrimitiveSet</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a3a6c94dc6c14d9a5ce998edd9712d98f</anchor>
      <arglist>(osg::DrawElementsUInt *aSetOfColors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorBinding</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a95195d765ab5cef2ead0cac7ca3f2c0d</anchor>
      <arglist>(osg::Geometry::AttributeBinding aColorBinding)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorArray</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>aa310918cae7a4cfb0864fcf0b56bb099</anchor>
      <arglist>(osg::Vec4ArrayRefPtr colors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalArray</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ac3d8c14fdecb11bda40ff07cb0586a8e</anchor>
      <arglist>(osg::Vec3ArrayRefPtr normals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalBinding</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a2306b9a05f07f08c0e9568905ee672d0</anchor>
      <arglist>(osg::Geometry::AttributeBinding aNormalBinding)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeMesh</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a3efb10747c5ac06527e1e42672e9ab08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeMeshPtr_t</type>
      <name>create</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a64e3618b59df352d28072b08f09a574d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeMeshPtr_t</type>
      <name>create</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>af35311a93fa8f38f720c72af7619a437</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeMeshPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a1dd9f30781e020abc18d62a0c37a10b8</anchor>
      <arglist>(LeafNodeMeshPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a74860ad59a757e567e5b52072a9cc163</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeSphere</name>
    <filename>a00035.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function">
      <type>LeafNodeSpherePtr_t</type>
      <name>clone</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>aa5dcd619491c47396ef3dda05e583bc8</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeSpherePtr_t</type>
      <name>copy</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ad8727dbc44d4a52656d41580b3cf8f53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeSpherePtr_t</type>
      <name>self</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a283b40e4668bd24918aee25fd996bbde</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ae301533311616233e34a42254c8eb377</anchor>
      <arglist>(const float &amp;radius)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a84e3158bc7e09d20e146ba91baed0cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeSphere</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>aa623bc550691c982613a4c7f1f19ed56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeSpherePtr_t</type>
      <name>create</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a67253ba631262f04ea3add4c9aae378b</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeSpherePtr_t</type>
      <name>create</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a6766826224cf8285becbabb864839f70</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeSpherePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a0a4b90fffb0b2cdf9c6a06a38e8b7bfd</anchor>
      <arglist>(LeafNodeSpherePtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a14d1d2f744a69cbc5e56a39384a27aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LeafNodeSphere</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a752d922e23f21acb4092a37623b88333</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LeafNodeSphere</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ae05f35091f2e978d8ec5ab3253204608</anchor>
      <arglist>(const std::string &amp;name, const float &amp;radius, const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LeafNodeSphere</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ae388c59d84068ee1a3d99d7a4e1b3e39</anchor>
      <arglist>(const std::string &amp;name, const LeafNodeSphere &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initWeakPtr</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a89da08e2599a6dba79bc30fa16ffa035</anchor>
      <arglist>(LeafNodeSphereWeakPtr other_weak_ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::LeafNodeXYZAxis</name>
    <filename>a00036.html</filename>
    <base>gepetto::viewer::NodeDrawable</base>
    <member kind="function">
      <type>void</type>
      <name>addVertex</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a805585f62d8de9e4383dbbd7965d1c4b</anchor>
      <arglist>(const osgVector3 &amp;vertex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeXYZAxisPtr_t</type>
      <name>clone</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a565c43fd8e4babcd5cc32e48be602ba3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NodePtr_t</type>
      <name>copy</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>acc2fef92df93f728339bb30787554629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafNodeXYZAxisPtr_t</type>
      <name>self</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a6b3f181c135bbb572e6ba30de518e4c6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRadius</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a9bde3f2dbc4f48e3abb79af6870addbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ac93f2820af6839d2c403fde72ff41262</anchor>
      <arglist>(const float &amp;radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeAxis</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a456419ea108946da2195d730ae19db3c</anchor>
      <arglist>(const float &amp;sizeAxis)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSizeAxis</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a406bff5f93940c7dacb20bcaa91e8da1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeafNodeXYZAxis</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>aa21e09b81d6d188e042a05d5782bddf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeXYZAxisPtr_t</type>
      <name>create</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a11897892c3097cd6e3087cf93b9f1c57</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;color, float radiusCenter, float sizeAxis)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeXYZAxisPtr_t</type>
      <name>create</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a735e7a76de4e73b0133c1573d1f3ad5b</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;color, float radiusCenter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafNodeXYZAxisPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ae88c24eade8419bcf5418dc299502bf4</anchor>
      <arglist>(LeafNodeXYZAxisPtr_t other)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a2e54c41af45210afae91efa0d8cb3b86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::LedIndicator</name>
    <filename>a00037.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>switchLed</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a48b1a4cd042c2c19a09da87472dcdfc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>switchLed</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a6fab979a570e58ecfa148805ef036842</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>switched</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a5257688205aaa268c534dea93fb29bd8</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mouseClickEvent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a1c354cae41360b6ba5d6449bfeb7da62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LedIndicator</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a374828fe277532d90db447a2f75fdc81</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a4ff3f755dc734c05685dc17382aff96d</anchor>
      <arglist>(QPaintEvent *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a52e4d1beba6e10acaf947b57dce63029</anchor>
      <arglist>(QMouseEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::MainWindow</name>
    <filename>a00038.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>RefreshType</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RefreshBodyTree</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7afa940cb34035f4fd360d66536780ba6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RefreshPlugins</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7a567f34cce991efc812765f3ff1124d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RefreshAll</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7abcb0dc2f79612c8b1f067f62acd5288b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RefreshBodyTree</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7afa940cb34035f4fd360d66536780ba6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RefreshPlugins</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7a567f34cce991efc812765f3ff1124d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RefreshAll</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af7841d2a45e5131f86456714a83e26d7abcb0dc2f79612c8b1f067f62acd5288b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>OSGWidget *</type>
      <name>createView</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a8aea0d82050eb1ec0013037c3b2019cf</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>BodyTreeWidget *</type>
      <name>bodyTree</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a130a139796396baf9cfc7ac6f5e0e9cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>log</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab2eda0153c5abfa3b7b2b2b4887fc103</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logError</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a5f40c0d107e4080825597a12bd36172e</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logJobStarted</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae195e7df202aa3ba04e82c8074ee80e9</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logJobDone</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab85003854dad35eda81d5de02f901c73</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logJobFailed</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a49f7ef97d04d31edaa98d60363d2c21d</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestRefresh</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae901a67d17c45384053921957e6210cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestApplyCurrentConfiguration</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab984eb83e135679dd0a127b406c06711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestConfigurationValidation</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aef9c53dcbf3aa8df4ccae4b33db5f2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>configurationValidationStatusChanged</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a354992932791b5bb833a1fe04dd9abec</anchor>
      <arglist>(bool valid)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>configurationValidationStatusChanged</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>adff62b8bb6444d3248ffa38e7089d9c0</anchor>
      <arglist>(QStringList bodiesInCollision)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestSelectJointFromBodyName</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ac9999317424c133c70f3b63c64d502fb</anchor>
      <arglist>(const QString bodyName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onOpenPluginManager</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ac9cc181beae3c16542b563f4f95eebef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerSignal</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab6a49e41e1b1668ad16e14110375c59f</anchor>
      <arglist>(const char *signal, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>QObject *</type>
      <name>getFromSignal</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a70b05a62e82ba3c31e3a30aee02d07fb</anchor>
      <arglist>(const char *signal)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>connectSignal</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a70a8b20d33287de24e7ed24f9865e963</anchor>
      <arglist>(const char *signal, const char *slot, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerSlot</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab64463e1cc1391bd06906f6bfb275b53</anchor>
      <arglist>(const char *slot, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>QObject *</type>
      <name>getFromSlot</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>acc4de699baee734024dc037ea5b34515</anchor>
      <arglist>(const char *slot)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>connectSlot</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af28d7445cb5386c054e14adf0b8cf5b2</anchor>
      <arglist>(const char *slot, const char *signal, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerShortcut</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aba93ce840652cb66dfbcb1d6e4ba0323</anchor>
      <arglist>(QString widgetName, QString actionName, QAction *action)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerShortcut</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae943a4cd430dff19ce582a15886d3774</anchor>
      <arglist>(QString widgetName, QAction *action)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>viewCreated</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a0d7879980e46194bc8d4a4a1aec53cec</anchor>
      <arglist>(OSGWidget *widget)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aaf55befaf3cf8a026f8ee4d2d9c430d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>applyCurrentConfiguration</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a21e3e0c250114c00c341acf246b8488c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>configurationValidation</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a63c7f12e4ffe970ed984550416150199</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>selectJointFromBodyName</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a300652442f4741c80769faedf4f06448</anchor>
      <arglist>(const QString bodyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>logString</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a0f2348bebcef4e83093e6ac57e3ed338</anchor>
      <arglist>(QString msg)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>logErrorString</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a7c34700f92aabb3576d0e240a960e480</anchor>
      <arglist>(QString msg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MainWindow</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a699a6d42b9e857c7f7a0f4f10ce5308a</anchor>
      <arglist>(Settings *settings, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MainWindow</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a102a9f7f4c3d4a08b9ba778cf4a1a444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertDockWidget</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a839150c913a8d7ec7f4fa98fc0633a8e</anchor>
      <arglist>(QDockWidget *dock, Qt::DockWidgetArea area=Qt::AllDockWidgetAreas, Qt::Orientation orientation=Qt::Horizontal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDockWidget</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a7a94b7af21111ee6b02f25b3224c23b7</anchor>
      <arglist>(QDockWidget *dock)</arglist>
    </member>
    <member kind="function">
      <type>WindowsManagerPtr_t</type>
      <name>osg</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>afae01426f76e2f0dfc72442ca65e0b19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SelectionHandler *</type>
      <name>selectionHandler</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a49ad178cbdd6cbb76edafde3286e3495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; OSGWidget * &gt;</type>
      <name>osgWindows</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>abf92902a9235496779cdb732fb19ab3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PluginManager *</type>
      <name>pluginManager</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ad2ed26d59e45f98b0abf1ee4c3f98fb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ActionSearchBar *</type>
      <name>actionSearchBar</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aa8513771967dc0394f5d912a32691ebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QMenu *</type>
      <name>pluginMenu</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a6044c70e622f1d1bf83a4d2955426e16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PythonWidget *</type>
      <name>pythonWidget</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ac10c2ac9d4a0f5a6132cfb2e587c10b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MainWindow *</type>
      <name>instance</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a0e1b639ab37af780241fa113dc1829e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Settings *</type>
      <name>settings_</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a8a886cb014debcd084b975d3f8fdcc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>BodyTreeWidget *</type>
      <name>bodyTree</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a130a139796396baf9cfc7ac6f5e0e9cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>log</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab2eda0153c5abfa3b7b2b2b4887fc103</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logError</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a5f40c0d107e4080825597a12bd36172e</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logJobStarted</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae195e7df202aa3ba04e82c8074ee80e9</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logJobDone</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab85003854dad35eda81d5de02f901c73</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>logJobFailed</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a49f7ef97d04d31edaa98d60363d2c21d</anchor>
      <arglist>(int id, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestRefresh</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae901a67d17c45384053921957e6210cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestApplyCurrentConfiguration</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab984eb83e135679dd0a127b406c06711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestConfigurationValidation</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aef9c53dcbf3aa8df4ccae4b33db5f2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>configurationValidationStatusChanged</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a354992932791b5bb833a1fe04dd9abec</anchor>
      <arglist>(bool valid)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>configurationValidationStatusChanged</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>adff62b8bb6444d3248ffa38e7089d9c0</anchor>
      <arglist>(QStringList bodiesInCollision)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>requestSelectJointFromBodyName</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ac9999317424c133c70f3b63c64d502fb</anchor>
      <arglist>(const QString bodyName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>onOpenPluginManager</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ac9cc181beae3c16542b563f4f95eebef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerSignal</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab6a49e41e1b1668ad16e14110375c59f</anchor>
      <arglist>(const char *signal, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>QObject *</type>
      <name>getFromSignal</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a70b05a62e82ba3c31e3a30aee02d07fb</anchor>
      <arglist>(const char *signal)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>connectSignal</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a70a8b20d33287de24e7ed24f9865e963</anchor>
      <arglist>(const char *signal, const char *slot, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerSlot</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab64463e1cc1391bd06906f6bfb275b53</anchor>
      <arglist>(const char *slot, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>QObject *</type>
      <name>getFromSlot</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>acc4de699baee734024dc037ea5b34515</anchor>
      <arglist>(const char *slot)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>connectSlot</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af28d7445cb5386c054e14adf0b8cf5b2</anchor>
      <arglist>(const char *slot, const char *signal, QObject *obj)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerShortcut</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aba93ce840652cb66dfbcb1d6e4ba0323</anchor>
      <arglist>(QString widgetName, QString actionName, QAction *action)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>registerShortcut</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae943a4cd430dff19ce582a15886d3774</anchor>
      <arglist>(QString widgetName, QAction *action)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::viewer::MetaEnum</name>
    <filename>a00039.html</filename>
    <member kind="function">
      <type>int</type>
      <name>from_string</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a70e8a5f415015702fe36cd2761f6f36a</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>to_string</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>afa8e480959b92fd5e9b23432621f6592</anchor>
      <arglist>(const int &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a4ed0627cdcb1daf4f40c41c27995c4b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>names</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a7f1629b1a9b41e1b44c5b9c06d1b690a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>values</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aeb0688c81ed04fd4d1b8852bd121db13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::ModelInterface</name>
    <filename>a00040.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModelInterface</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a61b2e40cf7af688dfd67859c77651a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a64b2e883d7908fe2df11f96866586458</anchor>
      <arglist>(DialogLoadRobot::RobotDefinition rd)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadEnvironmentModel</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a10e0426f9cb09e18913096a59535f70e</anchor>
      <arglist>(DialogLoadEnvironment::EnvironmentDefinition ed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getBodyFromJoint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa26fd4ded70e1b62df41ad519d852ffd</anchor>
      <arglist>(const std::string &amp;jointName) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::MultiSelection</name>
    <filename>a00041.html</filename>
    <base>gepetto::gui::SelectionMode</base>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>onSelect</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ab5ce31840f5dcf7f773fbd453c13e46e</anchor>
      <arglist>(SelectionEvent *event)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>getName</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a81348bce030e6a26fa77d5ff5a7f5a4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiSelection</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a786b22a2555bc093cc2d5116c59269fd</anchor>
      <arglist>(WindowsManagerPtr_t wsm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiSelection</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a4a9daf8d2f265ff136c4910c686a5b1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a1612fa1c92b7c72f248916cdab37582d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QStringList</type>
      <name>selectedBodies_</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ac83d3ab274943b140e9028c2fa48d72a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::Node</name>
    <filename>a00042.html</filename>
    <base>gepetto::viewer::Properties</base>
    <member kind="function">
      <type>const Configuration &amp;</type>
      <name>getGlobalTransform</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac7f11a7d81edfc7e64847f69a9ed9276</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getID</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5161860dba54b1c84e503d53f2ac276e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirty</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a4be7f061e5c8608e67ce0fd4652483a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a0cb2daf7ae061392f6e8824e49ddc8b5</anchor>
      <arglist>(bool dirty=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyConfiguration</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a43d0be53944b7a4ae28d6e09a1334cc0</anchor>
      <arglist>(const osgVector3 &amp;position, const osgQuat &amp;quat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyConfiguration</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abd32c0c0f5298e8f4d229ac2361f3cff</anchor>
      <arglist>(const Configuration &amp;cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStaticTransform</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac7f17f90476f6767d6a201b7603441df</anchor>
      <arglist>(const osgVector3 &amp;position, const osgQuat &amp;quat)</arglist>
    </member>
    <member kind="function">
      <type>osgQuat</type>
      <name>getStaticRotation</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab24184314f7abe16188c010eccb7ad7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>osgVector3</type>
      <name>getStaticPosition</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a916a0e4c99041af6756fe28a7af4e31a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVisibilityMode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad0611241f5ad9ddb17f990d0c0557782</anchor>
      <arglist>(const VisibilityMode &amp;visibility_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VisibilityMode &amp;</type>
      <name>getVisibilityMode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af2a93caac4667a005ee8cd54d4279784</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLightingMode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af0dc5cd696be5df71006c68756379015</anchor>
      <arglist>(const LightingMode &amp;lighting_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LightingMode</type>
      <name>getLightingMode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a94ec6cc119c9633fb029dd9705f874d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setWireFrameMode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a60d1545a192d1a8467673c5e6147b52e</anchor>
      <arglist>(const WireFrameMode &amp;wireframe_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const WireFrameMode &amp;</type>
      <name>getWireFrameMode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a538b166f28aeac54895566e5a85899b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScale</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a4392fdc1fb3cb2c00cf12fedbd271eae</anchor>
      <arglist>(float scale)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScale</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8fd422b0cfc27a3ee148f966d1132ea2</anchor>
      <arglist>(const osgVector3 &amp;scale)</arglist>
    </member>
    <member kind="function">
      <type>osgVector3</type>
      <name>getScale</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a0cf443f31da24843a6a154033e5a7810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setColor</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a339817065b325b403cacb2af7f6ba20a</anchor>
      <arglist>(const osgVector4 &amp;color)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osg::ref_ptr&lt; osg::Node &gt;</type>
      <name>getOsgNode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a0573584f8f25ddc1a7eb53963eaa98f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>virtual ::osg::GroupRefPtr</type>
      <name>asGroup</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a3d4e635e5c0319209e1876a7239937ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addLandmark</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa8bc331c08ebe1b4d5258fef48a92e51</anchor>
      <arglist>(const float &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLandmark</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a761fe056069d7693d23a0894b260b7af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::osg::StateSetRefPtr</type>
      <name>getOrCreateRootStateSet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abba29ad6227cd1a48c8a813ef55d5a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteLandmark</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a61473e8155d8ee1a57ab3afa15c491c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHighlightEnabled</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a10efb74ed9f9db3fdf173df613597cd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighlightEnabled</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad235adfb3c53bb5cd6dc6c2fbba219f1</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighlightState</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abbf6658ef7aeb739135d605ebb626e33</anchor>
      <arglist>(unsigned int state)</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t &amp;</type>
      <name>getHighlightState</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab3adc4b4bac13ef22fdd013db9e0e207</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7ae94ce54f0a968ba0113711570fbe3b</anchor>
      <arglist>(const float &amp;alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getAlpha</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aef8d91df83966ef5548f8bddb2158071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransparency</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abb240b1f288a9c2f1a2256338db10ca8</anchor>
      <arglist>(const float &amp;transparency)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTransparency</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a97bda40073b68fe6f05b1b5e533f9f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransparentRenderingBin</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a854b3632483087a1dd6208f2f67dc497</anchor>
      <arglist>(bool transparent=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>traverse</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a27a2a21158a55c40eae9629fb9281a5e</anchor>
      <arglist>(NodeVisitor &amp;visitor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Node</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8b8d9bb5551a91375fba4186f38ac581</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SCENE_VIEWER_ACCEPT_VISITOR</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad26858d5832aa839803301f58ff802a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>TransparencyRenderingBinThreashold</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aaf12a29aa014e0b5eca2e114082137b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5df1347cf6850aecac54c18e8a4b1c38</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a4ace55966a6acf41ac69120acf1c1de0</anchor>
      <arglist>(const Node &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>::osg::GroupRefPtr</type>
      <name>asQueue</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab402dab8389843273fd9c238b4904069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setID</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7237532ab977b5a1ab57dcfe1e1a9883</anchor>
      <arglist>(const std::string &amp;id_name)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::GeodeRefPtr</type>
      <name>landmark_geode_ptr_</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a9395be2f3c8779e83395ebfa121b5324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::GeodeRefPtr</type>
      <name>geode_ptr_</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad3b5a94cfca60adc1be12a99e08707e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>alpha_</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7e4a473423142e088ba8dca3c7aa0ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NodeTest</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a829f2e8ab1dd660f3f7275fa464db66f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::NodeAction</name>
    <filename>a00043.html</filename>
    <base>gepetto::gui::NodeActionBase</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_ON</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1faf1f1c2040d84d2a611c95faffad90f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_OFF</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1fa420aa16563342020922c6a1880589483</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALWAYS_ON_TOP</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1faf8d1ca32617b51826e5eac81c7cab977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTACH_TO_WINDOW</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1fad0c1749db3b7ddbe70271dcba60ca569</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTACH_CAMERA_TO_NODE</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1faaafac0819b2fa759c65f4f056d1d118a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_ON</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1faf1f1c2040d84d2a611c95faffad90f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_OFF</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1fa420aa16563342020922c6a1880589483</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALWAYS_ON_TOP</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1faf8d1ca32617b51826e5eac81c7cab977</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTACH_TO_WINDOW</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1fad0c1749db3b7ddbe70271dcba60ca569</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ATTACH_CAMERA_TO_NODE</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a56dfd57957dbf89addf570090785fa1faaafac0819b2fa759c65f4f056d1d118a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeAction</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a4f5cb014b7035e061607b6d090a1046b</anchor>
      <arglist>(const Type &amp;t, const QString &amp;text, NodePtr_t node, QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeAction</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>acd68b7a394ccbe74d4ac671010b37bc9</anchor>
      <arglist>(const Type &amp;t, const QString &amp;text, QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeAction</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>afa3f7e5ec60959faffb9e9c71504caec</anchor>
      <arglist>(const QString &amp;text, NodePtr_t node, OSGWidget *window, QWidget *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeAction</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>aaa4e85348eaf6c4082de3a462e1d1fe2</anchor>
      <arglist>(const QString &amp;text, OSGWidget *window, QWidget *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeAction</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ac9b42e26463ced15c6055fd5ab328e35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>act</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a52ecd280ac8ce4775f19a2fa6011ea1b</anchor>
      <arglist>(bool checked)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::NodeActionBase</name>
    <filename>a00044.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeActionBase</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0fff59399b7d44a2f13f05bbc7bec5ef</anchor>
      <arglist>(const QString &amp;text, NodePtr_t node, QWidget *parent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeActionBase</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0e9d53b4ba89335df19f1d8c24a9c49c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>node</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab23b79c3d0f8a30e47000f129444bc1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>act</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae17d1841a2eb6f56c8a22dc5272ca089</anchor>
      <arglist>(bool checked)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::viewer::NodeConfiguration</name>
    <filename>a00045.html</filename>
    <base>gepetto::viewer::Configuration</base>
    <member kind="variable">
      <type>NodePtr_t</type>
      <name>node</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a7901d73782237175f19b19e592d052be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::NodeDrawable</name>
    <filename>a00046.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>af6c40faa1730dd46d41791452b19bc43</anchor>
      <arglist>(const float &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAlpha</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a31bb254d0a6ecb053b91488e93103105</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColor</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a0089ef54b69e9412c7c8fb3940fcdf20</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector4</type>
      <name>getColor</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>acf8b229717f824c290b1366d0eb58db6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTexture</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a9136ece5d4f00ca7385c972bc8823b6a</anchor>
      <arglist>(const std::string &amp;image_path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDrawable</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a30b818fa97887f24280b004a848d35ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>redrawShape</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa67b019e8409d9ebed441ee6a73cfdeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NodeDrawable</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa872b0035ea81a39ef68529a3d443552</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NodeDrawable</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a4c310569c8c019fa8688089442a769ce</anchor>
      <arglist>(const Node &amp;other)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>::osg::ShapeDrawableRefPtr</type>
      <name>shape_drawable_ptr_</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a8a31254f8a7575597d0dde48331ee592</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::NodeRod</name>
    <filename>a00047.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="typedef">
      <type>osg::Vec3f::value_type</type>
      <name>value_type</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aef02e68f306af01c33ffe3f03d1b5ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getCapsuleName</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>af2a50971a78c877009a5e160a4dd0428</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeCapsulePtr_t</type>
      <name>getCapsule</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a126283f3299fc0972027e3c2d0030719</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>NodeRodPtr_t</type>
      <name>self</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a1430619328495add2a3dd2d90ab354dc</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>radius</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a594f9b520f5c96be03e7ba1a3697511d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>totalLength</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a3770e464d0f7400195466066188851b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab04c37c5d089f6a948e0882345ff67d1</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector4</type>
      <name>color</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac67ae620de8e60cb02f2d3256ef4df29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>maxCapsule</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>acc6e545fd632a52d1ff4e4cb48468891</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyConfiguration</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac7f6eb87b47755cf24e31684fa107c44</anchor>
      <arglist>(std::vector&lt; std::vector&lt; value_type &gt; &gt; params)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NodeRodPtr_t</type>
      <name>create</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a1d8da663af1077e16baf0cf4e61bec2b</anchor>
      <arglist>(const std::string &amp;name, osgVector4 color, float radius, float totalLength, short maxCapsule)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NodeRodPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aa01c8dcafa8e13a07abd3dada8c738b8</anchor>
      <arglist>(NodeRodPtr_t other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NodeRod</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a8b802d9acc1510bc1a482e3c89303d8c</anchor>
      <arglist>(const std::string &amp;name, osgVector4 color, float radius, float totalLength, size_t maxCapsule)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NodeRod</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a276cf75f16761935a71c5ed76b6de441</anchor>
      <arglist>(const NodeRod &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::NodeVisitor</name>
    <filename>a00048.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeVisitor</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a1736918662a978e4dbaf447c5927ed5e</anchor>
      <arglist>(bool invisibleAreValid=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeVisitor</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aa7b616c24c0c8cee2507119ca56d0f54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a5827f5ed4e187929017a60c24aa4f0ce</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a80b2fa1d160ce59c8e843044e105a0de</anchor>
      <arglist>(GroupNode &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ac5d99a5e52cd1862d304b3784642ff71</anchor>
      <arglist>(LeafNodeArrow &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>abc854a945a18faee9e833e50e078c174</anchor>
      <arglist>(LeafNodeBox &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a3609147feb46ca449f94e6eee176c4fd</anchor>
      <arglist>(LeafNodeCapsule &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a00f2b2578fc1000ae80b1cbb02ed54c5</anchor>
      <arglist>(LeafNodeCollada &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ae277266265e53696d6230936ab73aeab</anchor>
      <arglist>(LeafNodeCone &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ae532dbd1e6a3528f004fec5b2bfb22a3</anchor>
      <arglist>(LeafNodeCylinder &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ac38ed54e390da7727f4e2e5f4128325d</anchor>
      <arglist>(LeafNodeFace &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a1b59d20f3c89056ac16cc2d7514fe3db</anchor>
      <arglist>(LeafNodeGround &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ad872fe84b50d4b14d8446a035164307a</anchor>
      <arglist>(LeafNodeLight &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aa19593836b50d9efb09000b0d1a5b07f</anchor>
      <arglist>(LeafNodeLine &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aab99bb07901285fdf634266586bf6916</anchor>
      <arglist>(LeafNodeSphere &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ad1b34ca9460f067e95ddc00c28cad61e</anchor>
      <arglist>(LeafNodeXYZAxis &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>valid</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ac31ab5d31adff65b9938b30a73b97cc0</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>traverse</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ae5a550e73c16010cde3da76101fd5151</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>invisibleAreValid_</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aafa6741f4baf6870e74c85ab84888b96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::OSGWidget</name>
    <filename>a00049.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>onHome</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a45fdcf33902a1b66d14222f9f14d66e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addFloor</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af47372d674cec99c15dc7f4997460949</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>toggleCapture</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5302b95a304a88f29f2111921d10bb0d</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a74bc6c9948ebde6acedd5b06f3a36e49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a41e10c130f90f76bcf79753258319a4c</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>startCapture</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a714e03523f0d4734e0262a50567aa0d9</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;extension)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>stopCapture</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af2ba4647dd867d94f3b43321cfb37508</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OSGWidget</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae68684239b4b1bd8d102ba59ff8ab2dc</anchor>
      <arglist>(WindowsManagerPtr_t wm, const std::string &amp;name, MainWindow *parent, Qt::WindowFlags f=0, osgViewer::ViewerBase::ThreadingModel threadingModel=osgViewer::Viewer::ThreadPerContext)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OSGWidget</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa764c9b3cdb5ceb32014e7f299401d79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WindowID</type>
      <name>windowID</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a60f455697f04c112cdb343c7ceb316dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WindowManagerPtr_t</type>
      <name>window</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa2d4229100c20a1b68166c805e79ef96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WindowsManagerPtr_t</type>
      <name>osg</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a719384fc72258f7e586a6ac28e15441a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>paintEvent</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a07980660d7bffb7f60c5a1befb4721fe</anchor>
      <arglist>(QPaintEvent *event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isFixedSize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ad6ab24940064a3348208093ce542dfe4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setFixedSize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5033e6927e1ebff85d84c573ba73ba44</anchor>
      <arglist>(bool fixedSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setWindowDimension</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4375a277b7e01cdd9b9afd8ebb8a0929</anchor>
      <arglist>(const osgVector2 &amp;size)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PickHandler</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af79a4892e98959fb7081d30842988d08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::PickHandler</name>
    <filename>a00050.html</filename>
    <member kind="function">
      <type></type>
      <name>PickHandler</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a99a9333112f58db154880ef711513f63</anchor>
      <arglist>(OSGWidget *parent, WindowsManagerPtr_t wsm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PickHandler</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a65be4b233f8f3ecbad8dbcfaba2904ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>handle</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a62ff574d1c8506c381306fe5123044a8</anchor>
      <arglist>(const osgGA::GUIEventAdapter &amp;ea, osgGA::GUIActionAdapter &amp;aa)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUsage</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>afc3f335a31a1f1ecbba9c84939077b08</anchor>
      <arglist>(osg::ApplicationUsage &amp;usage) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::PluginInterface</name>
    <filename>a00051.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginInterface</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>ad57eb78211e580e7cc7dd548003fba80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PluginInterface</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>ad0d9ae874ccff7be000a3584b7fa5891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>name</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a56837679ca53811bec8ae2b4efb0c482</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doInit</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a32340b358ddc80038ec703d401878927</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInit</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a0173b1f8fac01b235e98a60ea89e6624</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>errorMsg</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a96535105f7ce908a96bfb2af953dab0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af179699b3f747e1231ca9fbc4e8d739b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::PluginManager</name>
    <filename>a00052.html</filename>
    <member kind="typedef">
      <type>QPair&lt; QString, QPluginLoader * &gt;</type>
      <name>Pair</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>acbcfe37685316dda8a5d2efb3b41576a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QString, QPluginLoader * &gt;</type>
      <name>Map</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a82d8692fa923870a6848f51822dacf91</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QPair&lt; QString, QString &gt;</type>
      <name>PyPair</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a6486f876f011b790fe1cfb86ee839181</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>PyMap</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ae5422dd95686704a0a19663e6ef256a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginManager</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a2eba5bc1550147fe02b49c44ec29a2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Map &amp;</type>
      <name>plugins</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a9a3ce4c69e1e39ae4586763d83d57494</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PyMap &amp;</type>
      <name>pyplugins</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a153e2e45a53c98793d63b49937d65c6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Interface *</type>
      <name>getFirstOf</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ab162cc97a2b94b499826053a0a6cf9aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Interface * &gt;</type>
      <name>get</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>af0be2c81e249594eba2e0dd1fa050724</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declareAllPlugins</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a77634ba3ce874783464e71c97bf43244</anchor>
      <arglist>(QWidget *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>declarePlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a650601b5c922f08d19f20cd456bfada3</anchor>
      <arglist>(const QString &amp;name, QWidget *parent=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadPlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a44f4bd81e8c29981741d2b9eed1abbc5</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initPlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a0178194747f870579375d18ce129123f</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unloadPlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a3f8c7634d57ec550fdce1f831fb9a226</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPlugins</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>acabee4757a146b9cc33f9937bc4eb4fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declareAllPyPlugins</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a83d719ab045ae763d19ed70cff4cca60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>declarePyPlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a8e1929a4c6c00c0799424dcd2482c44a</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadPyPlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a47fe2f4f94839875ae0fd831fe1ecc32</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unloadPyPlugin</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a1d89be720b0e14ce5a58edc366bf4e01</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPyPluginLoaded</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ae02f5b8952a912ec38286e0c2700f994</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPyPlugins</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a72cf7bfda6e0b08db8160fa34a5e2575</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QIcon</type>
      <name>icon</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>af62f0e44c76a1d23e192a760b4c8980e</anchor>
      <arglist>(const QPluginLoader *pl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>status</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ad6e6aed16d5a4703fb9fcf0e9b96e6cc</anchor>
      <arglist>(const QPluginLoader *pl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addPluginDir</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>adc208bc884931ad4ecbf85a8be6077c0</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::PluginManagerDialog</name>
    <filename>a00053.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>onItemChanged</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a8951f19d1f6893b1b065cd21340a2850</anchor>
      <arglist>(QTableWidgetItem *current, QTableWidgetItem *previous)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>contextMenu</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a128b7993deb3ff8efdbb5c10143cfe83</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>load</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a9f621e0962d5688afbff1b0a139e8e81</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>unload</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a8047ac845c4e756c01d8cc3765190680</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>pyContextMenu</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a4d1cd084132f6f31b47d8e3ae25259aa</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>pyLoad</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a527e834050f8c44e3056ece1212aa244</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>pyUnload</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a1d3c87366b38bdc75bd728205651db09</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>declareAll</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a798f64d67b3276a00dbec513fb61c03b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>save</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>ae8a0f6adee434d7ab8ba0bbd00bc76f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginManagerDialog</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a05906a7b3ef5e4ee563e96475abdad6d</anchor>
      <arglist>(PluginManager *pm, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginManagerDialog</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>ac6f794bab601e2ae0f80a680af5aa816</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::Properties</name>
    <filename>a00054.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>getProperty</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a10be0074b5624995ddcbc7f00ddb873c</anchor>
      <arglist>(const std::string &amp;name, T &amp;value) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setProperty</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ab64759676ec7af9376a6e3e027fe91c3</anchor>
      <arglist>(const std::string &amp;name, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperty</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a175e014c8440b1c4205f185c6d00dec4</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const PropertyMap_t &amp;</type>
      <name>properties</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a0f6f8b68ae7c61ed7f00ba8e5c8bf346</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addProperty</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a3cf0b9da59cb35cbe700b1926d4186cf</anchor>
      <arglist>(const PropertyPtr_t &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addProperty</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a1e320a3dfaf73e9340674e8d3f007b7f</anchor>
      <arglist>(const std::string &amp;name, const PropertyPtr_t &amp;prop)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const PropertyPtr_t &amp;</type>
      <name>property</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a7ba7af2567e01d63c33d930fcdcf3486</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setDirty</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ad53c026c9cc00dca5d35aa376b3bb0b8</anchor>
      <arglist>(bool dirty=true)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PropertyMap_t</type>
      <name>properties_</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ab16302439fee6f330affaa873171da10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::Property</name>
    <filename>a00055.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a91cf49f7520f98155b37a3c5d53172c0</anchor>
      <arglist>(const bool &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a2c814ad14f081dec4a459df70ff72e75</anchor>
      <arglist>(const int &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a77407badb6f9847c7eba993dfd884090</anchor>
      <arglist>(const float &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a92bc22f9b88cf9c7b41e2bf449248dd1</anchor>
      <arglist>(const std::string &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a390660793ba3335f7963308aea1950d8</anchor>
      <arglist>(const unsigned long &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ab4274f2dbcd4a9cafcd107edacf9957b</anchor>
      <arglist>(const osgVector2 &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>abd4340f65c5db01a65941ee0a7b4004c</anchor>
      <arglist>(const osgVector3 &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ab1c671ca70225df3af9bdaa6ad873b5b</anchor>
      <arglist>(const osgVector4 &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>set</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a06b13d72bfe7b92dc32a40e613e314ed</anchor>
      <arglist>(const Configuration &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a628f44c30a141dca79bf24c89b1ebb7c</anchor>
      <arglist>(bool &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a05beebe01457b353b98c62ea4ef996ab</anchor>
      <arglist>(int &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a44d3ea5df6d5aa43a4b15642fa880ce8</anchor>
      <arglist>(float &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ac7de11856255da29e928e39b3712f130</anchor>
      <arglist>(std::string &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a09bc3adaa45d30dd62ab4544e3981d05</anchor>
      <arglist>(unsigned long &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a1153ed83cd44ab91bea6242d943a2ca6</anchor>
      <arglist>(osgVector2 &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a234d5c4250a054f279ee09f401c36dca</anchor>
      <arglist>(osgVector3 &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a244e5a547400ce83657563688596b89a</anchor>
      <arglist>(osgVector4 &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>aa51cd889c468022a910a77e0eb59f7fc</anchor>
      <arglist>(Configuration &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasReadAccess</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a469ae05beb028e9622a1e370f4ba1c13</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasWriteAccess</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a71a3cd23a282063c81066de62cc70f37</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>af780bfde5be9358e0147a52294a407a1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>aaf4c3e4b8d818d541b93d81945b7293a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Property</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a4f58eb5a603d38befb5732e80c46715b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invalidType</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a726e929450ebf4621b77ecf8daf54989</anchor>
      <arglist>(T) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invalidGet</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>aea0f8967820b609ea354ea8c73bf3b13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invalidSet</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a463af3a9dcc75b167ecc47ba9918d82a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>name_</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>af9807865b43919dc253c47ec49c22f6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::PropertyTpl</name>
    <filename>a00056.html</filename>
    <templarg></templarg>
    <base>gepetto::viewer::Property</base>
    <member kind="typedef">
      <type>boost::function&lt; void(const T &amp;)&gt;</type>
      <name>Setter_t</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ae9ae2822bdf15fcc72233b0551a59311</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::function&lt; T(void)&gt;</type>
      <name>Getter_t</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ad55304b7c8b4fd6a73ba0368a6ca16eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>shared_ptr&lt; PropertyTpl &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ad717addd8ddf3b2f2c835af443681dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>type</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ab3d174a7c52706e9a2d98e968b3db14f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PropertyTpl</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>aae3c44a148225671c5a1f8364fa4e22c</anchor>
      <arglist>(const std::string &amp;name, const Getter_t &amp;g, const Setter_t &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ad908d15d0b05ff2e6626b4742486ece3</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>get</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a7bd2afd462bfbf34211488547d1b40e7</anchor>
      <arglist>(T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasReadAccess</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a06245b39e8981d705351369a2c43522f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasWriteAccess</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a922df672360e5fcfc5511c7ed9cce198</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Getter_t &amp;</type>
      <name>getter</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a9161cebb2738524f2e8fd2d51021ffea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getter</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a0bd264657b848385245be287daf251f5</anchor>
      <arglist>(const Getter_t &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>const Setter_t &amp;</type>
      <name>setter</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a393fc7a0db0eaf0129b0d0422e725463</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setter</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a552f641585c6cbbad8319087ad4c5a52</anchor>
      <arglist>(const Setter_t &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>create</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>ae4d78187090ef2caede8df87b8223748</anchor>
      <arglist>(const std::string &amp;name, const Getter_t &amp;g, const Setter_t &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Getter_t</type>
      <name>getterFromMemberFunction</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a4c6f5859ab13f81562ec9cf574523e5b</anchor>
      <arglist>(Obj *obj, const T &amp;(Obj::*mem_func)() const)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Getter_t</type>
      <name>getterFromMemberFunction</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>adac881eb920f2e63ed30498fb9b80169</anchor>
      <arglist>(Obj *obj, T(Obj::*mem_func)() const)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Setter_t</type>
      <name>setterFromMemberFunction</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a086f4668b6431c6671435c6aade54f89</anchor>
      <arglist>(Obj *obj, void(Obj::*mem_func)(const T &amp;))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Setter_t</type>
      <name>setterFromMemberFunction</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a6e3a9206e804ea3bd4dd120226c2a2ee</anchor>
      <arglist>(Obj *obj, void(Obj::*mem_func)(T))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::PythonWidget</name>
    <filename>a00057.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>loadModulePlugin</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a7ba60593e0a478aaa43961b6c1172bb0</anchor>
      <arglist>(QString moduleName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>unloadModulePlugin</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>abbba253e935527a59235ffd6c9d78715</anchor>
      <arglist>(QString moduleName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>loadScriptPlugin</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>aedcb5419fdb704ef1a6683c91286840c</anchor>
      <arglist>(QString moduleName, QString fileName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>runScript</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a61148e3c5ccde16de5aee481e292f752</anchor>
      <arglist>(QString fileName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>browseFile</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a7cc810c8ee35ece008aaf5f191026736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PythonWidget</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a227b24cea595ce11559905b4b0181d24</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToContext</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a54fd0d732babc75bfe30dbdb210ee067</anchor>
      <arglist>(QString const &amp;name, QObject *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PythonWidget</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a0ead6b905db57bd745b3fa0448b70a83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QVariantList</type>
      <name>callPluginMethod</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a0d93b7386d4e645d3f0b6353d082579b</anchor>
      <arglist>(const QString &amp;method, const QVariantList &amp;args=QVariantList(), const QVariantMap &amp;kwargs=QVariantMap()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveHistory</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a1ff4aa75e69e5e26982e7923eaa897bb</anchor>
      <arglist>(QSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreHistory</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ae9650b1c500671f3cc5a02cd7ea00ae2</anchor>
      <arglist>(QSettings &amp;settings)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPlugin</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ae1197b0ac0d49eaf413f57d7452a5402</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::QtOsgKeyboard</name>
    <filename>a00058.html</filename>
    <member kind="function">
      <type></type>
      <name>QtOsgKeyboard</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a49593f4095d421740a8dc77ef963d70e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QtOsgKeyboard</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>afe5c73c70863bfeac7acec261fdf7ebf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>remapKey</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>ac82e2f3e90d34727fb2327be2d667796</anchor>
      <arglist>(QKeyEvent *event)</arglist>
    </member>
    <member kind="function">
      <type>QKeyEvent *</type>
      <name>remapKey</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>aa88885d8e6e02f6fa2cdb0c884c1bdf8</anchor>
      <arglist>(int key)</arglist>
    </member>
    <member kind="function">
      <type>QKeyEvent *</type>
      <name>remapModKey</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a37cfa280d4c284fcc39ee7e287629d94</anchor>
      <arglist>(int modMask)</arglist>
    </member>
    <member kind="function">
      <type>Qt::KeyboardModifiers</type>
      <name>getQtModKey</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>ae26c4ca453ba3b00bef6b191889c4e64</anchor>
      <arglist>(int modMask)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::RoadmapViewer</name>
    <filename>a00059.html</filename>
    <base>gepetto::viewer::Node</base>
    <member kind="function" virtualness="virtual">
      <type>virtual RoadmapViewerPtr_t</type>
      <name>clone</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>ad8063fe5837d107d6bb175e2510412ed</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>RoadmapViewerPtr_t</type>
      <name>self</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>af3794753c08d0f50891582b2cf1c957d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a31eb4068c2e1470d5782f545bb0f83cf</anchor>
      <arglist>(osgVector3 position, osgQuat quat,::OpenThreads::Mutex &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addEdge</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a4cbf8bf6d8a6a805e06d6192b4326306</anchor>
      <arglist>(osgVector3 from, osgVector3 to,::OpenThreads::Mutex &amp;mtx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAllChildren</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>ab08717c4621c94492875b336b95a8f06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVisibilityMode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a72ae12f7c7881d58f1d086b3aa0516f7</anchor>
      <arglist>(const VisibilityMode &amp;visibility_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLightingMode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a5869c1b28454f44dfda8338e5156c813</anchor>
      <arglist>(const LightingMode &amp;lighting_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setWireFrameMode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a7995d6332eb4a5f01ab991a12f0ca8c9</anchor>
      <arglist>(const WireFrameMode &amp;wireframe_state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getNumOfNodes</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a95c0376dd1d5f72518d416c500cb7981</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getNumOfEdges</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a6061e5a99e19e578bf14f782c0a229c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeXYZAxisPtr_t</type>
      <name>getNode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a330887eb1c7de15d002414672f5baed9</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LeafNodeLinePtr_t</type>
      <name>getEdge</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a53e715033b8a90aae63ac00b83f0ca85</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getRadiusSphere</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a26ba3e10d8d2d2b0948c0456a8e3c193</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getSizeAxis</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a0b6ae35844794196f3a925462d56c5f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector4</type>
      <name>getColorNode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a3366dac53871f007768149395139d49f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector4</type>
      <name>getColorEdge</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a473115374c2ac98cc9f99b4cd6f51f79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorNode</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a4bd2ff45389960b31e56d938802e80b3</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorEdge</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a7cbd57e7898f6142748e3baa4c3c2001</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>af4225083465bd789a8b1155507d8598e</anchor>
      <arglist>(const osgVector4 &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RoadmapViewerPtr_t</type>
      <name>create</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a0db13cd90f87b2182bb882b377ffa1e8</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;colorNode, float radiusSphere, float sizeAxis, const osgVector4 &amp;colorEdge)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RoadmapViewerPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a4eb4c6ce16948d274b7c6a3a19877c22</anchor>
      <arglist>(RoadmapViewerPtr_t other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RoadmapViewer</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a8d42798d4d7ced4428eabf5dd6f07f7a</anchor>
      <arglist>(const std::string &amp;name, const osgVector4 &amp;colorNode, float radiusSphere, float sizeAxis, const osgVector4 &amp;colorEdge)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RoadmapViewer</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a8f345a2d570a1975a061e58d64ad642b</anchor>
      <arglist>(const RoadmapViewer &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::gui::DialogLoadRobot::RobotDefinition</name>
    <filename>a00060.html</filename>
    <member kind="function">
      <type></type>
      <name>RobotDefinition</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a690d2cf09108cacafbcd368f8cea9877</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RobotDefinition</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a1ed79c3cd4308dd9ed082e9eaf7dd00f</anchor>
      <arglist>(QString name, QString robotName, QString rootJointType, QString modelName, QString package, QString urdfSuffix, QString srdfSuffix)</arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>ac091b25acc778c451f1b26f7c2df84c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>robotName_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a9ac801caf8bb099436bfd67777395d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>urdfSuf_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a263944a70847154418176ca84b402cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>srdfSuf_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a0976aea90e14ed1d3b0bec6e00a69838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>package_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>ae2c267580b310acb6225d192e6738282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>modelName_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a284a5ab2c366de3f151750ee29ca2f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>rootJointType_</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a83747d4238e5b0896956ab6a9a80367d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::SafeApplication</name>
    <filename>a00061.html</filename>
    <base>gepetto::gui::SlotExceptionCatch</base>
    <member kind="function">
      <type></type>
      <name>SafeApplication</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a189fae93f2d88ce1a1881295b9014e51</anchor>
      <arglist>(int &amp;argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>notify</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a14e3311465668844c4ab4bb95738e1c4</anchor>
      <arglist>(QObject *receiver, QEvent *e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::SelectionEvent</name>
    <filename>a00062.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad3ba74e73f2ef0b490b4e8b2277a0754</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromOsgWindow</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad3ba74e73f2ef0b490b4e8b2277a0754ab827b301624d24547934882a7404126f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromBodyTree</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad3ba74e73f2ef0b490b4e8b2277a0754a2aed788b10006c981073817efd609b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromOsgWindow</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad3ba74e73f2ef0b490b4e8b2277a0754ab827b301624d24547934882a7404126f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FromBodyTree</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad3ba74e73f2ef0b490b4e8b2277a0754a2aed788b10006c981073817efd609b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>Type</type>
      <name>type</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a4c43eb0439aaf215c8dfb7102db53212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>nodeName</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a22327551271618d8c7cf06050d267487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>Qt::KeyboardModifiers</type>
      <name>modKey</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>aca0511a3cbfc8be47b0e84dd1fafe054</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>hasIntersection</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ac7f0c7389de2451a406e021b048c6e88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>QVector3D</type>
      <name>normal</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ae4539d3f9d7433fef6229748a3db7ad6</anchor>
      <arglist>(bool local) const </arglist>
    </member>
    <member kind="slot">
      <type>QVector3D</type>
      <name>point</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a14766af4671fe54ba99c36e8dbed6637</anchor>
      <arglist>(bool local) const </arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>done</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a3f3e14e2fa55ad4d3fc125312b0cbc14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionEvent</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a4e0f335c3e139a4d952c9ba0503ec40a</anchor>
      <arglist>(const Type &amp;t, NodePtr_t node=NodePtr_t(), Qt::KeyboardModifiers modKey=Qt::NoModifier)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionEvent</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a072eeb9d42c1158b178db6235a6bc2ad</anchor>
      <arglist>(const Type &amp;t, Qt::KeyboardModifiers modKey)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupIntersection</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a8b79df1adf689ae4aad26b70026cf053</anchor>
      <arglist>(const osgUtil::LineSegmentIntersector::Intersection &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>const NodePtr_t &amp;</type>
      <name>node</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ac6364c498920a46ffab72967d14495ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modKey</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a3caf379ff6b22320a2baa2bf3d80a76c</anchor>
      <arglist>(const Qt::KeyboardModifiers &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCounter</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad7016c99b7d8456a9f7f589a2158d0fa</anchor>
      <arglist>(int c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::SelectionHandler</name>
    <filename>a00063.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>addMode</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a9d661bc65034eba5c9028f12ba00b9b8</anchor>
      <arglist>(SelectionMode *mode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionHandler</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a39273da4f7d38de4cc21415de56736d9</anchor>
      <arglist>(WindowsManagerPtr_t wsm, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionHandler</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>ab31e3612fbd8583dd5fd842c361e4380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SelectionMode *</type>
      <name>mode</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>ada59982967affa17885f89fec726f78a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::SelectionMode</name>
    <filename>a00064.html</filename>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>onSelect</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>ac495a97efca095ba8d906feb7f2630c6</anchor>
      <arglist>(SelectionEvent *event)=0</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>getName</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>aee0ec7f218a9d998343c2dcce1c4bcb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>selectedBodies</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a8ce684142d466952c9698c243c7a69af</anchor>
      <arglist>(QStringList selectedBodies)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectionMode</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>aa68b4da0d3f2f4430e8dd3ff6216a535</anchor>
      <arglist>(WindowsManagerPtr_t wsm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionMode</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>aa633abf2a4fb675ae37a511585d26bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>aba0654507f428e5567798d9091a17136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>currentBody</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a6b744d047cd9bd60fe86cd8c0e1dbcc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>QString</type>
      <name>currentSelected_</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a30fc5689fefc6370f1725a4f3ed849bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WindowsManagerPtr_t</type>
      <name>wsm_</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>af8104b60da8398c5c436e5b888dc5b05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>gepetto::gui::Settings</name>
    <filename>a00065.html</filename>
    <member kind="function">
      <type></type>
      <name>Settings</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a136b1e35594567720682707f09a19e87</anchor>
      <arglist>(const char *installDirectory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupPaths</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a53e77d4f898106561adc6f88212d8d7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getQSettingsFileName</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>af4b9c4eeafa8c6f2ca39adc65d853af0</anchor>
      <arglist>(const std::string &amp;settingsName) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>initSettings</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a7cbf4df6a03691204cb895df805af951</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromFiles</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a8bf58ade29c15dc491f89ea7610332e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSettings</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a1164c65689da34f83747f7dd11da2dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>getSetting</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aa8e28570c28a9845bdbc2767ff83e373</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;defaultValue=QVariant())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMainWindow</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a6ad725de8dfe214038fbbe56596c7964</anchor>
      <arglist>(MainWindow *main)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initPlugins</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aff234b244804ec15b073b97cc92425ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aa6b09175f47826d0eb807319e27ff2b2</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRobotFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a936ceec8aab059191baa3e0f1c56c568</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readEnvFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ae25591069d382c399d113a61f0ba5dc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readSettingFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a7ba36a24cba7c4b1b9cfad8cc9040426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveState</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a4a0dcbf465d5ce1946ff390dcc3cdf44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreState</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a28a213a8c5cc2ee59f6cc460945621ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreDockWidgetsState</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ac1ee1fe7017bcdd69b01bac1f058d056</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRobotFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aedbabd49a34bfa879143142173b73441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeEnvFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a0d874c56894dc58a02a03b8ed520e82e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSettingFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a4888b2dfcda5129a04884f932e8c02ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char **</type>
      <name>makeOmniORBargs</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>abf8bfbad3652275cbddfdceddff82716</anchor>
      <arglist>(int &amp;argc)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>configurationFile</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a0e620ae1df7817c52b98466b25e164dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>predifinedRobotConf</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aa180390628ecb621c7ea4310a79dbd0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>predifinedEnvConf</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aa0af9f0da0eebebf2671371a9bf2a900</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>stateConf</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a36195bf4ae8e11562178e40b9b50efd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a6a6fa67789cbfed84404831d05c8531c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>noPlugin</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ae707ff7c596bbb84057be741915bab1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoWriteSettings</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a2b3e6baa623644be45f81e27fbe4c06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useNameService</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a4eca2467f10d6fe0e9af0947d81b9016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>refreshRate</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a4fd585b38263e831cf7ff86106de398b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>captureDirectory</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a8a4892df252349a6a0c009617883ea4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>captureFilename</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a9ba73e4152f905d3ef85462483ceaa07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>captureExtension</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a695940c31526679141f1e7063a5f7d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>installDirectory</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a5bafbfa3f9a36f3dff095ccbebae119c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>appStyle</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a3ebed1f77b7ba6a131d4fc7759d36ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PluginManager</type>
      <name>pluginManager_</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a0ea972df12e38531e2097acf356becb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>pluginsToInit_</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>acfddf7df29e9df8446cc600ef0f9512d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>pyplugins_</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aa2d7993961cb2e8c69c757d25e0c06aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>pyscripts_</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a5e1c469b07eee11a466474eb3066f5b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>avconv</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ac3a65cb686666b883ff15a184bf402ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>avConvInputOptions</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a8863e8bb9e8e33a1a37b1c1aec433a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>avConvOutputOptions</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a6f5d59cf6d5b110a4a37b63545e3ca87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>avconv</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ac3a65cb686666b883ff15a184bf402ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>avConvInputOptions</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a8863e8bb9e8e33a1a37b1c1aec433a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>avConvOutputOptions</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a6f5d59cf6d5b110a4a37b63545e3ca87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::ShortcutFactory</name>
    <filename>a00066.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>open</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>a3740b59e857ade6025f5c08629660d19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShortcutFactory</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>ae33e22bcb7a5f2fd4c325edc260edfda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShortcutFactory</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>a8658cbf0b18bb2e6d6acfa06ae69adce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBinding</name>
      <anchorfile>a00066.html</anchorfile>
      <anchor>a68373c638b7d5f04db4aee891aef98ef</anchor>
      <arglist>(QString widgetName, QString actionName, QAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::SlotExceptionCatch</name>
    <filename>a00067.html</filename>
    <member kind="function">
      <type></type>
      <name>SlotExceptionCatch</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ae8dd6c1a0b80674760f5b43cd6ca55e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>safeNotify</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac77314f3b41afa581b5bd329ca1f941a</anchor>
      <arglist>(QApplication *app, QObject *receiver, QEvent *e)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsLeaf</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a8a864b4da3daeb47733d4f32df2c54fe</anchor>
      <arglist>(SlotExceptionCatch *child)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>impl_notify</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac5ff29cf2b5799ec3d49d49d6e8bf227</anchor>
      <arglist>(QApplication *app, QObject *receiver, QEvent *e)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SlotExceptionCatch *</type>
      <name>child_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a7db5d6849cb702e8b21d86253a31cdda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::TransformWriter</name>
    <filename>a00068.html</filename>
    <member kind="function">
      <type></type>
      <name>TransformWriter</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>adefdf926dde541365cd3cfc6be1e3ec2</anchor>
      <arglist>(const std::string filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TransformWriter</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad1403fbe8e05c5da7d2d32602514fa27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newFrame</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9d02aa52dcabe87bb21c1a73261cc93e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeTransform</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a14d39f0d8e024f230f9ecbbb9a5938ce</anchor>
      <arglist>(const char *objName, const osgVector3 &amp;vec, const osgQuat &amp;quat)=0</arglist>
    </member>
    <member kind="function">
      <type>std::ofstream &amp;</type>
      <name>out</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a424b84baed6ea4fd0fc938cfe23808d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openFile</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a45ffbdd7c1c4bcd9474720bf37a73456</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeFile</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aebacf5d15dc76599f0d0bcb0fd03b311</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>writeNewFrame</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afd1ed91ede13b4f12e5479cb3af9f0a4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream</type>
      <name>file_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>add92c5bedd70913694a07f047350a400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>filename_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aa23eeb7e2e4d65145fe75cb1bb32f824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>frameCount_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a585b26e9b00e6cd9b62542e6e17d5181</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::TransformWriterVisitor</name>
    <filename>a00069.html</filename>
    <base>gepetto::viewer::NodeVisitor</base>
    <member kind="function">
      <type></type>
      <name>TransformWriterVisitor</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a8a0ee9c1869754f06b303a8c6952edea</anchor>
      <arglist>(TransformWriter *writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aad1a8e63d15a765a920b7c388b66234a</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aebf41e63a9d01b5b5a25ec8580f88750</anchor>
      <arglist>(Iterator begin, Iterator end)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a427b601e4412e03a7e8a938e2192ddf6</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="variable">
      <type>osg::ref_ptr&lt; TransformWriter &gt;</type>
      <name>writer_</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a4841df5d1edaf4a5d7f9118ca38ae42b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::UniqueSelection</name>
    <filename>a00070.html</filename>
    <base>gepetto::gui::SelectionMode</base>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>onSelect</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>ad6cb81cbc6d28c9e21e332c989c89b54</anchor>
      <arglist>(SelectionEvent *event)</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual QString</type>
      <name>getName</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a3347baa3f6c61ed1755738b4207a66d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueSelection</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>ae20d2e19dd53702429cb4b0b2e5ae0b5</anchor>
      <arglist>(WindowsManagerPtr_t wsm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UniqueSelection</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a3458ca46cd1e937391ffbadf038b7283</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::Vector3Dialog</name>
    <filename>a00071.html</filename>
    <member kind="typedef">
      <type>viewer::Configuration</type>
      <name>Configuration</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a398ad878bdfad0fdadf260d1476e6d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>ad2d35393e8ce3683778979c689ef0be2</anchor>
      <arglist>(const osgVector3 &amp;config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector3Dialog</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a6251280e198fac884a7de11f5d9c5036</anchor>
      <arglist>(const viewer::PropertyPtr_t prop, const QString &amp;name, QWidget *parent=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a763bb5d99ea14dd66cd6ea7698335132</anchor>
      <arglist>(QShowEvent *event)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::WindowManager</name>
    <filename>a00072.html</filename>
    <base>gepetto::viewer::GroupNode</base>
    <member kind="enumeration">
      <type></type>
      <name>TextAlignment</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a53556e5d8a93e8a4c21c7acfce910a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CENTER</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a23f1291aeb002fef20d31f1364c05627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a51fd9a744eb46099c9ea77059af55d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a9961c797dcb3010050707009e479fc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9aa3a24994f5c03b9a65446227190556d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TOP</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a53556e5d8a93e8a4c21c7acfce910a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CENTER</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a23f1291aeb002fef20d31f1364c05627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTTOM</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a51fd9a744eb46099c9ea77059af55d12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9a9961c797dcb3010050707009e479fc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad850d0a2e99fc5788793ed3d4e5566d9aa3a24994f5c03b9a65446227190556d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowManagerPtr_t</type>
      <name>clone</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a61701bc078f6e2a2f19e5f7967ab5d8a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>WindowManagerPtr_t</type>
      <name>self</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>afc09dc808b7b361f0e4d59a07f681f37</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addNode</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>aa2250358c8319f0a799b537ec8ee66ce</anchor>
      <arglist>(NodePtr_t graphical_object_ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GroupNodePtr_t</type>
      <name>getScene</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a815b91bf2be6e3e19f27ee30b423bd49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>done</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ad3f5594c3184c951127c7c6153f6e507</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>frame</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a3626d0ff95bf916daad28ca9c9344da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>run</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a4a12e690d8b2859dc8dbae443af1f989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setWindowDimension</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a8ef2276a9115097b433a824f1118d147</anchor>
      <arglist>(const osgVector2 &amp;size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setWindowPosition</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a0ea7a6e28e821806f9ba78845c0cfb74</anchor>
      <arglist>(const osgVector2 &amp;position)</arglist>
    </member>
    <member kind="function">
      <type>osgVector2</type>
      <name>getWindowPosition</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a7f5487ec398f88f3a3c1f5dbb87ddab1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>osgVector2</type>
      <name>getWindowDimension</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a58235183d4f2a9b64a63bfcc951e170c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getText</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a38a6a56a975f259c99225e408fec4746</anchor>
      <arglist>(TextAlignment verticalPos, TextAlignment horizontalPos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>af797659502855ff15bbe9677ccff4156</anchor>
      <arglist>(TextAlignment verticalPos, TextAlignment horizontalPos, const std::string &amp;text, float size=20)</arglist>
    </member>
    <member kind="function">
      <type>::osgViewer::ViewerRefPtr</type>
      <name>getViewerClone</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a67cb8a8ab0317e0d01cf6e71d59df4b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WindowManager</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a9a692712c5ee1e4761a8d76f76f9fc27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a7dc2c16817b313dd18f7b86978e283cf</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startCapture</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a96396eb955db891cec663fcd1be34925</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;extension)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopCapture</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a0734adb051545f5c71000b3c43240ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeNodeFile</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a1f30885153293f3193376185f58901f4</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor1</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ab38343c91690e3419c9138081e8b3b1c</anchor>
      <arglist>(const osg::Vec4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a3d597f53e711c057885cf0123799f81c</anchor>
      <arglist>(const osg::Vec4 &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCameraTransform</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a1c736e18676a31dfe088e7fca785717b</anchor>
      <arglist>(osg::Vec3d &amp;pos, osg::Quat &amp;rot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraTransform</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a11459f624cc2dfa4316269b94f7970e7</anchor>
      <arglist>(const osg::Vec3d &amp;pos, const osg::Quat &amp;rot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachCameraToNode</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a09fd25bc69ff839205a624c58bb6a93e</anchor>
      <arglist>(NodePtr_t node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachCamera</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>adc9df0f3e99cf7974b7f2d79652cf8a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowManagerPtr_t</type>
      <name>create</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a457d83d87fa9d9b7fbe467916f9b3ef7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowManagerPtr_t</type>
      <name>create</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>af468d963d5a467767f764e593da8b64a</anchor>
      <arglist>(osg::GraphicsContext *gc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowManagerPtr_t</type>
      <name>create</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a1f238b56901fbc5cf9894890e9586177</anchor>
      <arglist>(osgViewer::Viewer *v, osg::GraphicsContext *gc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowManagerPtr_t</type>
      <name>create</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a83f93a77adf0c8cdcdb2efd8b89bb5be</anchor>
      <arglist>(const unsigned int &amp;x, const unsigned int &amp;y, const unsigned int &amp;width, const unsigned int &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowManagerPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ada47f3cfa6dac96d3534191d7e526ad5</anchor>
      <arglist>(WindowManagerPtr_t other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::WindowsManager</name>
    <filename>a00073.html</filename>
    <member kind="typedef">
      <type>osg::Vec3f::value_type</type>
      <name>value_type</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7147e934932bd1b51381734babbee4bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>osgVector4</type>
      <name>Color_t</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5ce4c71fd53649198568967ada7f39aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::osg::Vec3ArrayRefPtr</type>
      <name>Vec3ArrayPtr_t</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a524802105f0b4898d70c40546db7b949</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>WindowID</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a83ac106da4aa51d88c20747c2b4f2fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, WindowID &gt;</type>
      <name>WindowIDMap_t</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a1558eaa27031c512501c68305a7aa107</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WindowsManager</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3a9395b7a6be5381832ce52d707bca51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getNodeList</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>acb3c941f1fe560445e6fd020ae4c2737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getGroupNodeList</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7b963e4b0ad72a24c975c06a603b6991</anchor>
      <arglist>(const std::string &amp;group)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getSceneList</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>adcee0d5eebb68ee0cb8bb5849b1d7729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getWindowList</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>adf8236116c05754126590b058ae58016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mutex &amp;</type>
      <name>osgFrameMutex</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a4316fab9307d7e98f7611b6745b19191</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual WindowID</type>
      <name>getWindowID</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a0812a757a7e89f86ad41e59d1ffff9f4</anchor>
      <arglist>(const std::string &amp;windowName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createScene</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad5ae929169c50fe76dee6d59977ef7e5</anchor>
      <arglist>(const std::string &amp;sceneName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createSceneWithFloor</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>af18722e4a2e555dd4d94bc5eb342dd40</anchor>
      <arglist>(const std::string &amp;sceneName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSceneToWindow</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a56dabcee18a7f6adf62077d26c9a3ac4</anchor>
      <arglist>(const std::string &amp;sceneName, const WindowID windowId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>attachCameraToNode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a395978b0d1b840315642146296f993c9</anchor>
      <arglist>(const std::string &amp;nodeName, const WindowID windowId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detachCamera</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ab7f11daefa77824252b7d159b060e847</anchor>
      <arglist>(const WindowID windowId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>nodeExists</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a551d3eec9664237ec06bc5828758cc33</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addFloor</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>acd47bcc00ff00e9572be19ba6c4c6749</anchor>
      <arglist>(const std::string &amp;floorName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addBox</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a96aa7afc76609425b0937e3da85b7c0f</anchor>
      <arglist>(const std::string &amp;boxName, const float &amp;boxSize1, const float &amp;boxSize2, const float &amp;boxSize3, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCapsule</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad555069e3951ec3b2364977729aff8b6</anchor>
      <arglist>(const std::string &amp;capsuleName, float radius, float height, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addArrow</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ae9f27e9ee636854d50b13afac0d5089a</anchor>
      <arglist>(const std::string &amp;arrowName, const float radius, const float length, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addRod</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>af4ea9ff81e3b81e1bd439c7f0c7e9bb3</anchor>
      <arglist>(const std::string &amp;rodName, const Color_t &amp;color, const float radius, const float length, short maxCapsule)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resizeCapsule</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>abeb8d0a9be038d2ecbdabcd9004cd1fd</anchor>
      <arglist>(const std::string &amp;capsuleName, float newHeight)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resizeArrow</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a6c75c3824b1d899df749c8c079a4ae82</anchor>
      <arglist>(const std::string &amp;arrowName, float newRadius, float newLength)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addMesh</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a8ea5e5202cc226d8e093beeedb16f429</anchor>
      <arglist>(const std::string &amp;meshName, const std::string &amp;meshPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCone</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3fb1b7cf25e88e8e945532ea0f6b33a9</anchor>
      <arglist>(const std::string &amp;coneName, float radius, float height, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCylinder</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad67f33510fba4967378bb693d002dd08</anchor>
      <arglist>(const std::string &amp;cylinderName, float radius, float height, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSphere</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ae42ba79234a73195665ce14deb166748</anchor>
      <arglist>(const std::string &amp;sphereName, float radius, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addLight</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a2ac97b60b6b5f1feaa95ff8eead5faaf</anchor>
      <arglist>(const std::string &amp;lightName, const WindowID wid, float radius, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addLine</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a55abfe0cff81cc3f9f01a98568ff1075</anchor>
      <arglist>(const std::string &amp;lineName, const osgVector3 &amp;pos1, const osgVector3 &amp;pos2, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setLineStartPoint</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a95cbb92ef9b2ce3fb787f71d7fea40fd</anchor>
      <arglist>(const std::string &amp;lineName, const osgVector3 &amp;pos1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setLineEndPoint</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ac4d60710cb4040fb0b381feffc863003</anchor>
      <arglist>(const std::string &amp;lineName, const osgVector3 &amp;pos2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setLineExtremalPoints</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aaf07079e1ffb26e0be5af9c9293a2369</anchor>
      <arglist>(const std::string &amp;lineName, const osgVector3 &amp;pos1, const osgVector3 &amp;pos2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addCurve</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>afeced7df0e55882c64c1db8fe791c620</anchor>
      <arglist>(const std::string &amp;curveName, const Vec3ArrayPtr_t &amp;pos, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setCurvePoints</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a73764092b5bbcf6500d0828bb2ef77eb</anchor>
      <arglist>(const std::string &amp;curveName, const Vec3ArrayPtr_t &amp;pos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setCurveMode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a89c58a7d4c2bbfea9ca7b36232bd8f88</anchor>
      <arglist>(const std::string &amp;curveName, const GLenum mode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setCurvePointsSubset</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a9b5e477dbcc7bc6d11c4edd1d9e7ffe2</anchor>
      <arglist>(const std::string &amp;curveName, const int first, const std::size_t count)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setCurveLineWidth</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3abebdf03106fc936911128c1b62de5b</anchor>
      <arglist>(const std::string &amp;curveName, const float &amp;width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSquareFace</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a114f42cc1a531eff477d288f15d1e5f4</anchor>
      <arglist>(const std::string &amp;faceName, const osgVector3 &amp;pos1, const osgVector3 &amp;pos2, const osgVector3 &amp;pos3, const osgVector3 &amp;pos4, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setTexture</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3c086e3ba71f8220726f18c7436a6de0</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addTriangleFace</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a15ba31a960dc65271008558d033b57ad</anchor>
      <arglist>(const std::string &amp;faceName, const osgVector3 &amp;pos1, const osgVector3 &amp;pos2, const osgVector3 &amp;pos3, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addXYZaxis</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a93cd69f5b5ac70667e71ebb7ea2e7893</anchor>
      <arglist>(const std::string &amp;nodeName, const Color_t &amp;color, float radius, float sizeAxis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createRoadmap</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a675be44762d44973f7c0f958a0378dde</anchor>
      <arglist>(const std::string &amp;name, const Color_t &amp;colorNode, float radius, float sizeAxis, const Color_t &amp;colorEdge)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addEdgeToRoadmap</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3483c17932ef6a0e5b74ca012b9f6ea9</anchor>
      <arglist>(const std::string &amp;nameRoadmap, const osgVector3 &amp;posFrom, const osgVector3 &amp;posTo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addNodeToRoadmap</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a2a9f799967014d1d4e83643c8765f185</anchor>
      <arglist>(const std::string &amp;nameRoadmap, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addURDF</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a09618d835a1d2ffdaae875f390a0cc32</anchor>
      <arglist>(const std::string &amp;urdfName, const std::string &amp;urdfPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addURDF</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a4373ae7847805493b6573f8a80dfb67a</anchor>
      <arglist>(const std::string &amp;urdfName, const std::string &amp;urdfPath, const std::string &amp;urdfPackagePath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addUrdfCollision</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a17ffe1b5d958d5103b6aa87379ce0c2c</anchor>
      <arglist>(const std::string &amp;urdfName, const std::string &amp;urdfPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addUrdfCollision</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a4f9a5ca1d8cd011b8e69a07924f4cb15</anchor>
      <arglist>(const std::string &amp;urdfName, const std::string &amp;urdfPath, const std::string &amp;urdfPackagePath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addUrdfObjects</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>af12abd2196b618b0f28bec89f695fa77</anchor>
      <arglist>(const std::string &amp;urdfName, const std::string &amp;urdfPath, bool visual)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addUrdfObjects</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa896b70ce0e1b4b28473a6e64e6867f2</anchor>
      <arglist>(const std::string &amp;urdfName, const std::string &amp;urdfPath, const std::string &amp;urdfPackagePath, bool visual)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createGroup</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a09b2a22f65700c12537b6da9285b840c</anchor>
      <arglist>(const std::string &amp;groupName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addToGroup</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3dd93235ba3bc19936fb7c11ee9e8182</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;groupName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>removeFromGroup</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a480b2f838c405fecd298f2bb8b082b0f</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;groupName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deleteNode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ae10ffadc127fa94dd63d3c69851a8d19</anchor>
      <arglist>(const std::string &amp;nodeName, bool all)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConfiguration</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ac0ec7a33ae95735c76196aecbc248e8e</anchor>
      <arglist>(const std::string &amp;nodeName, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConfigurations</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a58be2a69b25a5a00d4faed801dd1eb01</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nodeName, const std::vector&lt; Configuration &gt; &amp;configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addLandmark</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a725916b4e83292293e0c397db1f6862a</anchor>
      <arglist>(const std::string &amp;nodeName, float size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>deleteLandmark</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a83a227f59c70a3d7a5e2f7f48ad1c9c4</anchor>
      <arglist>(const std::string &amp;nodeName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Configuration</type>
      <name>getStaticTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a0731b27b167e902c6b2e25e3528479e4</anchor>
      <arglist>(const std::string &amp;nodeName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setStaticTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5bf239c89b040dc436f68ea5ea824f60</anchor>
      <arglist>(const std::string &amp;nodeName, const Configuration &amp;transform)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setVisibility</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa9b9da0fdfd2e51a60f8e5df0b07fe6e</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;visibilityMode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setScale</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a9b7e829bae37e5f55bc95137b9534e07</anchor>
      <arglist>(const std::string &amp;nodeName, const osgVector3 &amp;scale)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setScale</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a8fa9c66151f9588d4c567c06b351ebda</anchor>
      <arglist>(const std::string &amp;nodeName, const float &amp;scale)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setScale</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a55b05b403b4b596904474ff89ada37da</anchor>
      <arglist>(const std::string &amp;nodeName, const int &amp;scalePercentage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setColor</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a2a0b9e91351d3502e9344a954654a551</anchor>
      <arglist>(const std::string &amp;nodeName, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setWireFrameMode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a58fb252976ff6198c674b272432bc2fc</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;wireFrameMode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setLightingMode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a0c689d1053d72a9865c9562298ee8318</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;lightingMode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setHighlight</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a74618970b03bd8ffd9c962faa0cbc8f4</anchor>
      <arglist>(const std::string &amp;nodeName, int state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setAlpha</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa4ce193f605cdf222c0aa0611edf8aae</anchor>
      <arglist>(const std::string &amp;nodeName, const float &amp;alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setAlpha</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>afe1c93ab20a2dd6a3a080912f7e876e2</anchor>
      <arglist>(const std::string &amp;nodeName, const int &amp;alphaPercentage)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setCaptureTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a130ca52ee2b76acbc4f5586f88af14db</anchor>
      <arglist>(const std::string &amp;filename, const std::vector&lt; std::string &gt; &amp;nodename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>captureTransformOnRefresh</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a0b77cebfa5e31a526dcde4a4a71d0a34</anchor>
      <arglist>(bool autoCapture)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>captureTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a067f0f5e652bd3d8ce05e58a3dcfc2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>writeBlenderScript</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a49a939d5241930b23b8d53629fff10e4</anchor>
      <arglist>(const std::string &amp;filename, const std::vector&lt; std::string &gt; &amp;nodename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>writeNodeFile</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>af718f82d590e3731ae54fc466ccfec2e</anchor>
      <arglist>(const std::string &amp;nodename, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>writeWindowFile</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a89ecce6b3aafc940785a213e308a4410</anchor>
      <arglist>(const WindowID windowId, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setBackgroundColor1</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a094ce0a34b9879d7e0852b8e3c6fa71b</anchor>
      <arglist>(const WindowID windowId, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setBackgroundColor2</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7a2bdd35747208c8b2f42c547da8acdc</anchor>
      <arglist>(const WindowID windowId, const Color_t &amp;color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Configuration</type>
      <name>getCameraTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a12312e5ebfce59e4df40502d87d7c948</anchor>
      <arglist>(const WindowID windowId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setCameraTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aeff816db4fafbdda5ba8a07c19121169</anchor>
      <arglist>(const WindowID windowId, const Configuration &amp;configuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getPropertyNames</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a6cc0482143af06c95c7dd2906109c470</anchor>
      <arglist>(const std::string &amp;nodeName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; std::string &gt;</type>
      <name>getPropertyTypes</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3aec08df17d1da29adb735327469d1cc</anchor>
      <arglist>(const std::string &amp;nodeName) const </arglist>
    </member>
    <member kind="function">
      <type>Property_t</type>
      <name>getProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ac75c739658932ad7ea6aff8d41366939</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a79557f0442119b07268b8db2f6c6edac</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const Property_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getStringProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a112c0fdec9d61c8bc433d4b7e6eeb044</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStringProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa44b6cd2e3363274c7721700994f7b17</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector2</type>
      <name>getVector2Property</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a9c8911ed6acd16d1dadf93eaf5b6f026</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVector2Property</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad9acaeba5a40469e35668bf9e1380b8f</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const osgVector2 &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector3</type>
      <name>getVector3Property</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa73c96190380aece1b9d3e09bb6168b3</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVector3Property</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ab9ab4d7ea6dcae43b7e62b7630438517</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const osgVector3 &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual osgVector4</type>
      <name>getColorProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ac8d17b1da75c5d214c9dd861e99ef4f3</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setColorProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>acdb358148acafb2752380704ac1d0cb4</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const osgVector4 &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloatProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a9c5b7a462756d78cde3df392d2de6edb</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFloatProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ae2e4f1051744e6fc4436da786969408d</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const float &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBoolProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5a73d21c7d7ef31105e7ece175dc5e63</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBoolProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a969fa283f8af3549f0efe8e48a71c121</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const bool &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIntProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a2dcbb7e4bbbb340a5c2c5a482127ce80</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIntProperty</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3c577adf706c86a6f3b97007c8d620c3</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;propName, const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>WindowManagerPtr_t</type>
      <name>getWindowManager</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5e2d6f53b8262ab6439f121dd3b35f8f</anchor>
      <arglist>(const WindowID wid, bool throwIfDoesntExist=false) const </arglist>
    </member>
    <member kind="function">
      <type>GroupNodePtr_t</type>
      <name>getGroup</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a24cbee26062a0564bda6080150afb4de</anchor>
      <arglist>(const std::string groupName, bool throwIfDoesntExist=false) const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a6b2531f204205eea3b1b9a80114980c2</anchor>
      <arglist>(const std::string &amp;nodeName, bool throwIfDoesntExist=false) const </arglist>
    </member>
    <member kind="function">
      <type>Configuration</type>
      <name>getNodeGlobalTransform</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5defd048016cbf4e007a1f6764509ffe</anchor>
      <arglist>(const std::string nodeName) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowsManagerPtr_t</type>
      <name>create</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a898cbb496f41a4afb861e732328ebcee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WindowIDMap_t</type>
      <name>windowIDmap_</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7da240ef818a37b2fb61bb471839b3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; NodeConfiguration &gt;</type>
      <name>NodeConfigurations_t</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7d3c582e268241ef8f6b47c73b6e39a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WindowsManager</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>afb42f71f3b2b63f83a21475cd6213fdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WindowID</type>
      <name>addWindow</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a64b01293a614b38e5e7ec7b0be3c1d71</anchor>
      <arglist>(std::string winName, WindowManagerPtr_t newWindow)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshConfigs</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a1172546d784f0cee22e567e78881baa5</anchor>
      <arglist>(const NodeConfigurations_t &amp;configs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>getNodes</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7aecc5eeede2a4f1561d354a40111560</anchor>
      <arglist>(const Iterator &amp;begin, const Iterator &amp;end, NodeContainer_t &amp;nodes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>abe6dcec70322a7b4f8a02f4755e944bf</anchor>
      <arglist>(const std::string &amp;nodeName, NodePtr_t node, bool guessParent=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addNode</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa000984ab170d5103cc97e69a3cdbe9e</anchor>
      <arglist>(const std::string &amp;nodeName, NodePtr_t node, GroupNodePtr_t parent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addGroup</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7f7fe93272217f26a48cc819a7a17209</anchor>
      <arglist>(const std::string &amp;groupName, GroupNodePtr_t group, bool guessParent=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addGroup</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad20a5b2e0cf8019c14100dfc0d8612a5</anchor>
      <arglist>(const std::string &amp;groupName, GroupNodePtr_t group, GroupNodePtr_t parent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Mutex</type>
      <name>configListMtx_</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a520be4ef8ddfb7464505b1d01f0c38f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeConfigurations_t</type>
      <name>newNodeConfigurations_</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>adf365077e8744cfb86a1a05b922f0eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>autoCaptureTransform_</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a6547b975e253f62cf5cfcc821abe3481</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::gui::WindowsManager</name>
    <filename>a00074.html</filename>
    <base>gepetto::viewer::WindowsManager</base>
    <member kind="typedef">
      <type>viewer::WindowsManager</type>
      <name>Parent_t</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a6fe99b384fc13d386486dde5e26352f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>createWindow</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a1a65d7e1294e233e70d8d750448f41aa</anchor>
      <arglist>(QString windowName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>asyncRefresh</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a7520be828437ee0edc0d4f165b67ce58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WindowID</type>
      <name>createWindow</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a87d464f54001bf84765861ee7c59659d</anchor>
      <arglist>(const std::string &amp;windowName)</arglist>
    </member>
    <member kind="function">
      <type>WindowID</type>
      <name>createWindow</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aadea5d30b92ca2ab8050febab62c9cad</anchor>
      <arglist>(const std::string &amp;windowName, OSGWidget *widget, osgViewer::Viewer *viewer, osg::GraphicsContext *gc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertNode</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a95847835fff75d7377aeaecd3b9f38f1</anchor>
      <arglist>(const std::string &amp;nodeName, NodePtr_t node)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addToGroup</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a85646518961e140b887164b078499618</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;groupName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeFromGroup</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aa3a707d6c9a4c9de6e17c64da3d6d878</anchor>
      <arglist>(const std::string &amp;nodeName, const std::string &amp;groupName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteNode</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ae63bd742609e896f1ff3d5da249ef055</anchor>
      <arglist>(const std::string &amp;nodeName, bool all)</arglist>
    </member>
    <member kind="function">
      <type>BodyTreeItems_t</type>
      <name>bodyTreeItems</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aac81dfb6a1e77f26f4f323f35e08753a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>captureFrame</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>af67de2a067d9e12c91e89ec4bd612786</anchor>
      <arglist>(const WindowID windowId, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startCapture</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>acee78d4c4567c380532d3c8b49e31143</anchor>
      <arglist>(const WindowID windowId, const std::string &amp;filename, const std::string &amp;extension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopCapture</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a0828780a47400e0b1df8d51b50551918</anchor>
      <arglist>(const WindowID windowId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a9d64d156fa77bc4629e2f97cdae152ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefreshIsSynchronous</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a863f08ae6b72e879d753042011547358</anchor>
      <arglist>(bool synchonous)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WindowsManagerPtr_t</type>
      <name>create</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a23d1adc9d4535014672988fa2a2dd7eb</anchor>
      <arglist>(BodyTreeWidget *bodyTree)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WindowsManager</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ad3fd6fab9a18776332a5159277642ef1</anchor>
      <arglist>(BodyTreeWidget *bodyTree)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addNode</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a3f66928ee51584d0bfd905acf8e53e86</anchor>
      <arglist>(const std::string &amp;nodeName, NodePtr_t node, GroupNodePtr_t parent)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addGroup</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a45b2f570e55824dc864e8f3b77fc7786</anchor>
      <arglist>(const std::string &amp;groupName, GroupNodePtr_t group, GroupNodePtr_t parent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>gepetto::viewer::YamlTransformWriter</name>
    <filename>a00075.html</filename>
    <base>gepetto::viewer::TransformWriter</base>
    <member kind="function">
      <type></type>
      <name>YamlTransformWriter</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a863ca182ae696f3c9cd1cf3952291923</anchor>
      <arglist>(const std::string filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~YamlTransformWriter</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>ac196990b1321a734352c6c03d7bc08ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeTransform</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>ae785df8bd301bbb3bb3556ab98934ffb</anchor>
      <arglist>(const char *objName, const osgVector3 &amp;vec, const osgQuat &amp;quat)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeNewFrame</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>abcedaf42fa330ceb36b45ee80f25e26c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>gepetto</name>
    <filename>a00129.html</filename>
    <namespace>gepetto::gui</namespace>
    <namespace>gepetto::viewer</namespace>
  </compound>
  <compound kind="namespace">
    <name>gepetto::gui</name>
    <filename>a00130.html</filename>
    <class kind="class">gepetto::gui::ActionSearchBar</class>
    <class kind="class">gepetto::gui::BodyTreeItem</class>
    <class kind="class">gepetto::gui::BodyTreeWidget</class>
    <class kind="class">gepetto::gui::ColorMap</class>
    <class kind="class">gepetto::gui::ConfigurationDialog</class>
    <class kind="class">gepetto::gui::ConnectionInterface</class>
    <class kind="class">gepetto::gui::DialogLoadEnvironment</class>
    <class kind="class">gepetto::gui::DialogLoadRobot</class>
    <class kind="class">gepetto::gui::JointModifierInterface</class>
    <class kind="class">gepetto::gui::LedIndicator</class>
    <class kind="class">gepetto::gui::MainWindow</class>
    <class kind="class">gepetto::gui::ModelInterface</class>
    <class kind="class">gepetto::gui::MultiSelection</class>
    <class kind="class">gepetto::gui::NodeAction</class>
    <class kind="class">gepetto::gui::NodeActionBase</class>
    <class kind="class">gepetto::gui::OSGWidget</class>
    <class kind="class">gepetto::gui::PickHandler</class>
    <class kind="class">gepetto::gui::PluginInterface</class>
    <class kind="class">gepetto::gui::PluginManager</class>
    <class kind="class">gepetto::gui::PluginManagerDialog</class>
    <class kind="class">gepetto::gui::PythonWidget</class>
    <class kind="class">gepetto::gui::QtOsgKeyboard</class>
    <class kind="class">gepetto::gui::SafeApplication</class>
    <class kind="class">gepetto::gui::SelectionEvent</class>
    <class kind="class">gepetto::gui::SelectionHandler</class>
    <class kind="class">gepetto::gui::SelectionMode</class>
    <class kind="struct">gepetto::gui::Settings</class>
    <class kind="class">gepetto::gui::ShortcutFactory</class>
    <class kind="class">gepetto::gui::SlotExceptionCatch</class>
    <class kind="class">gepetto::gui::UniqueSelection</class>
    <class kind="class">gepetto::gui::Vector3Dialog</class>
    <class kind="class">gepetto::gui::WindowsManager</class>
    <member kind="typedef">
      <type>std::vector&lt; BodyTreeItem * &gt;</type>
      <name>BodyTreeItems_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>abae76dce338a5eeafdd5cba6d6e433c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::NodePtr_t</type>
      <name>NodePtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a0cf18beb691ad250ee564aeb9daf7bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::GroupNodePtr_t</type>
      <name>GroupNodePtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a62c289c900586993fcfe4ee090b50691</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::Configuration</type>
      <name>Configuration</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>ae618d3e580f932eabc0c416c2d4ec4fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::shared_ptr&lt; WindowsManager &gt;</type>
      <name>WindowsManagerPtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a2fa8d46f1103b355a691ccdd01c99903</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>viewer::WindowManagerPtr_t</type>
      <name>WindowManagerPtr_t</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>ad09bf5d998d0b6e479d8ff6e43794e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WindowsManager::WindowID</type>
      <name>WindowID</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a80f032b5815101ac520f730607f1b63c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>DockKeyShortcutBase</name>
      <anchorfile>a00130.html</anchorfile>
      <anchor>a87790a9a31b590ac12a5c378c5f34ae4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>gepetto::viewer</name>
    <filename>a00131.html</filename>
    <namespace>gepetto::viewer::urdfParser</namespace>
    <class kind="class">gepetto::viewer::BasicTransformWriter</class>
    <class kind="struct">gepetto::viewer::BlenderFrameCapture</class>
    <class kind="class">gepetto::viewer::BlenderGeomWriterVisitor</class>
    <class kind="struct">gepetto::viewer::Configuration</class>
    <class kind="class">gepetto::viewer::EnumProperty</class>
    <class kind="class">gepetto::viewer::GroupNode</class>
    <class kind="class">gepetto::viewer::LeafNodeArrow</class>
    <class kind="class">gepetto::viewer::LeafNodeBox</class>
    <class kind="class">gepetto::viewer::LeafNodeCapsule</class>
    <class kind="class">gepetto::viewer::LeafNodeCollada</class>
    <class kind="class">gepetto::viewer::LeafNodeCone</class>
    <class kind="class">gepetto::viewer::LeafNodeCylinder</class>
    <class kind="class">gepetto::viewer::LeafNodeFace</class>
    <class kind="class">gepetto::viewer::LeafNodeGround</class>
    <class kind="class">gepetto::viewer::LeafNodeLight</class>
    <class kind="class">gepetto::viewer::LeafNodeLine</class>
    <class kind="class">gepetto::viewer::LeafNodeMesh</class>
    <class kind="class">gepetto::viewer::LeafNodeSphere</class>
    <class kind="class">gepetto::viewer::LeafNodeXYZAxis</class>
    <class kind="struct">gepetto::viewer::MetaEnum</class>
    <class kind="class">gepetto::viewer::Node</class>
    <class kind="struct">gepetto::viewer::NodeConfiguration</class>
    <class kind="class">gepetto::viewer::NodeDrawable</class>
    <class kind="class">gepetto::viewer::NodeRod</class>
    <class kind="class">gepetto::viewer::NodeVisitor</class>
    <class kind="class">gepetto::viewer::Properties</class>
    <class kind="class">gepetto::viewer::Property</class>
    <class kind="class">gepetto::viewer::PropertyTpl</class>
    <class kind="class">gepetto::viewer::RoadmapViewer</class>
    <class kind="class">gepetto::viewer::TransformWriter</class>
    <class kind="class">gepetto::viewer::TransformWriterVisitor</class>
    <class kind="class">gepetto::viewer::WindowManager</class>
    <class kind="class">gepetto::viewer::WindowsManager</class>
    <class kind="class">gepetto::viewer::YamlTransformWriter</class>
    <member kind="typedef">
      <type>std::map&lt; std::string, PropertyPtr_t &gt;</type>
      <name>PropertyMap_t</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8dec06a4f28dd79f0d4733ca053803d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; bool &gt;</type>
      <name>BoolProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5ef0961eb3447fd814301b885eeb94fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; int &gt;</type>
      <name>IntProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>ad250b088022ffa3f1452eae1fe67f8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; float &gt;</type>
      <name>FloatProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a1e438936350983a5dea73acce579e104</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; std::string &gt;</type>
      <name>StringProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a66aa120470946bf79f4b4a5bcd315bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; unsigned long &gt;</type>
      <name>UIntProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>aa82660f64d56f3ce51c699b25468e971</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; osgVector2 &gt;</type>
      <name>Vector2Property</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5f2860c17e98f73cda424c9e6c5898e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; osgVector3 &gt;</type>
      <name>Vector3Property</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a3f091255a53e293e195ea5fabf12eec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; osgVector4 &gt;</type>
      <name>Vector4Property</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a25a68d140ced8cc6f4fa2d2a6a1c7a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PropertyTpl&lt; Configuration &gt;</type>
      <name>ConfigurationProperty</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>aacd055a9f80b3def957775c691ceab5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OpenThreads::Mutex</type>
      <name>Mutex</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>af2b8c58183efb47cd567eb59fb57ac03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OpenThreads::ScopedLock&lt; Mutex &gt;</type>
      <name>ScopedLock</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>af531ee51faed7f01013b25977f9ccb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VisibilityMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_ON</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1a46538d3a71a5c7f864cc9b7adafe7ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ALWAYS_ON_TOP</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1afdf34572ae74f16d7222766f648c89a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIBILITY_OFF</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>afe398fd9fe3c387789bbc0f56e84cda1a3a5bb84f6c56cc4b541943be93d08dd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LightingMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a526c3d18c0deaf24aefe9d7a836357bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIGHT_INFLUENCE_ON</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a526c3d18c0deaf24aefe9d7a836357bca530b5c20cec2b9a51ac5a07276df6f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIGHT_INFLUENCE_OFF</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a526c3d18c0deaf24aefe9d7a836357bca8e270965df7abb845804c6b361110435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WireFrameMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILL</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73eae1b971fccf017d1c175e4226940a7cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WIREFRAME</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73ead14b19c229f6def1ff76db89e953bda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FILL_AND_WIREFRAME</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a88024f4dd11267da8c55332fdec0b73ea196211da5a3f3a2834d824aef5ff89ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FaceMode</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4aa964d6b696c3dd7f3d804ed5494047428</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4aa377b963c2c62aa047e2dda2ca8fa142d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE_AND_EDGE</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a8ec013849384a3d45537012030306a4aa60b2fa9b0f3590afa28255d161b4015b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IntersectionBit</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5c93e133f02543dd69d0362513736392a8ccc4970b9c55c8b2796c34034ec33f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NodeBit</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5c93e133f02543dd69d0362513736392a7cdc0cf699d5719b913996e1fb678fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>visibilityModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a5107673c4647b5f66d33d5bae7ebe215</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>wireFrameModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>ad061dcb3cafe56914b90def14a5b76d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>lightingModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a90ff0c118c54177d438566a6fb0cc676</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MetaEnum *</type>
      <name>glImmediateModeEnum</name>
      <anchorfile>a00131.html</anchorfile>
      <anchor>a64b3c8b7a36ea49abae8b42ad87b96a7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>gepetto::viewer::urdfParser</name>
    <filename>a00132.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>getFilename</name>
      <anchorfile>a00132.html</anchorfile>
      <anchor>aae4a14857220a372156795f7e6b6abac</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>GroupNodePtr_t</type>
      <name>parse</name>
      <anchorfile>a00132.html</anchorfile>
      <anchor>a9e2024c944424ebe3bbc1edc663e9319</anchor>
      <arglist>(const std::string &amp;robotName, const std::string &amp;urdf_file, const bool &amp;visual=true, const bool &amp;linkFrame=true)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>osg</name>
    <filename>a00133.html</filename>
    <member kind="typedef">
      <type>::osg::ref_ptr&lt; GraphicsContext::Traits &gt;</type>
      <name>TraitsRefPtr</name>
      <anchorfile>a00133.html</anchorfile>
      <anchor>ab8110fb6e19cb79a258c30f4f75343d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>osgGA</name>
    <filename>a00134.html</filename>
    <class kind="class">osgGA::KeyboardManipulator</class>
    <member kind="enumeration">
      <type></type>
      <name>KeyBinding</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_forward</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a18e6c4e569e5b94ad90154e5eee5a962</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_backward</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a2e5cf552fd6c2f24b1014963162d0aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_right</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895af4cbb58ecfe567d418bdce9d5c75c2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_left</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895ad48fd4dd20a612e15f57d80f0d16b97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_roll_right</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a1d5098090b2aae8153c5b72da22dc391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_roll_left</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895acb2b8ccc3065b4ba0b5d4cea112fe90f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_up</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a2afaa03124f2ea68057e18ac872f94d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>key_down</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a48f3d42c9c904cde447e511c4929b895a5437b7c371175a0dd6a91dd5554a7437</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>keyLayout</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAYOUT_unknown</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890ca20c6b2636cab0394a448e1c51017ccbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAYOUT_azerty</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890ca1fe0a0fc67451f42a35a804ea70b161a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAYOUT_qwerty</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a5d28c646a540c36e1ec74240e401890caf8de243cd1bdd8e9bdf0b6da021fdb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>startSpeed_</name>
      <anchorfile>a00134.html</anchorfile>
      <anchor>a2e81c7b668b4cae6fbf49a15299534ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>osgViewer</name>
    <filename>a00135.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Ui</name>
    <filename>a00137.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">gepetto_viewer_sec_intro</docanchor>
  </compound>
</tagfile>
