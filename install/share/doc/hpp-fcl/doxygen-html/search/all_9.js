var searchData=
[
  ['distance_5ffunc_5fmatrix_2eh',['distance_func_matrix.h',['../a00133.html',1,'']]],
  ['init',['init',['../a00113.html#a699d82c16f82f5394cd275943a2ea703',1,'hpp::fcl::Variance3f']]],
  ['initialize',['initialize',['../a00043.html#adb3509bbe171c676b5bbf705145cb297',1,'hpp::fcl::details::GJK::initialize()'],['../a00042.html#ab54a49a9c1c6a060d3363700cea41af1',1,'hpp::fcl::details::EPA::initialize()'],['../a00144.html#a15f87e0645d24279eea615474f487ea2',1,'hpp::fcl::initialize(ShapeCollisionTraversalNode&lt; S1, S2, NarrowPhaseSolver &gt; &amp;node, const S1 &amp;shape1, const Transform3f &amp;tf1, const S2 &amp;shape2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a40a15d7a08da7bf388b5e6662f843170',1,'hpp::fcl::initialize(MeshShapeCollisionTraversalNode&lt; BV, S, NarrowPhaseSolver &gt; &amp;node, BVHModel&lt; BV &gt; &amp;model1, Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result, bool use_refit=false, bool refit_bottomup=false)'],['../a00144.html#ab829995f2ac5e7fca9727b3c4cfa760a',1,'hpp::fcl::initialize(ShapeMeshCollisionTraversalNode&lt; S, BV, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, BVHModel&lt; BV &gt; &amp;model2, Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result, bool use_refit=false, bool refit_bottomup=false)'],['../a00144.html#a76177c54a87a7d0e83359e9f31fc16ef',1,'hpp::fcl::initialize(MeshShapeCollisionTraversalNodeOBB&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; OBB &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#ac758ce4662fb8364bf7e5bd9c3365d50',1,'hpp::fcl::initialize(MeshShapeCollisionTraversalNodeRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; RSS &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a63e351f2bf1e9b768169f678358c9e6e',1,'hpp::fcl::initialize(MeshShapeCollisionTraversalNodekIOS&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; kIOS &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#aaffeba23ec17f345de8f1d65d9817cbf',1,'hpp::fcl::initialize(MeshShapeCollisionTraversalNodeOBBRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; OBBRSS &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a33c055390acac1666f48afa7384360e8',1,'hpp::fcl::initialize(ShapeMeshCollisionTraversalNodeOBB&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; OBB &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a522eb4cc3a55a9d9d5038433265a8452',1,'hpp::fcl::initialize(ShapeMeshCollisionTraversalNodeRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; RSS &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a45db6776afcb61d69a933b72cd6f6caf',1,'hpp::fcl::initialize(ShapeMeshCollisionTraversalNodekIOS&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; kIOS &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a03606351a7c41043007a25e1e47658c3',1,'hpp::fcl::initialize(ShapeMeshCollisionTraversalNodeOBBRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; OBBRSS &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, CollisionResult &amp;result)'],['../a00144.html#a08cdecb8d9d2075073ce190a554e44c2',1,'hpp::fcl::initialize(MeshCollisionTraversalNode&lt; BV &gt; &amp;node, BVHModel&lt; BV &gt; &amp;model1, Transform3f &amp;tf1, BVHModel&lt; BV &gt; &amp;model2, Transform3f &amp;tf2, CollisionResult &amp;result, bool use_refit=false, bool refit_bottomup=false)'],['../a00144.html#a84b88de47509b9c313b105c2da8dff2c',1,'hpp::fcl::initialize(MeshCollisionTraversalNodeOBB &amp;node, const BVHModel&lt; OBB &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; OBB &gt; &amp;model2, const Transform3f &amp;tf2, CollisionResult &amp;result)'],['../a00144.html#a4a7f812d639694fa6dbe11bfe9714192',1,'hpp::fcl::initialize(MeshCollisionTraversalNodeRSS &amp;node, const BVHModel&lt; RSS &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; RSS &gt; &amp;model2, const Transform3f &amp;tf2, CollisionResult &amp;result)'],['../a00144.html#a05174836b82ea15bc277146d75497816',1,'hpp::fcl::initialize(MeshCollisionTraversalNodeOBBRSS &amp;node, const BVHModel&lt; OBBRSS &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; OBBRSS &gt; &amp;model2, const Transform3f &amp;tf2, CollisionResult &amp;result)'],['../a00144.html#ad46a88ef06a6a02062ab16ab09b70dab',1,'hpp::fcl::initialize(MeshCollisionTraversalNodekIOS &amp;node, const BVHModel&lt; kIOS &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; kIOS &gt; &amp;model2, const Transform3f &amp;tf2, CollisionResult &amp;result)'],['../a00144.html#ad949bfdcee9741981a4c7ed8b8c1c9a5',1,'hpp::fcl::initialize(ShapeDistanceTraversalNode&lt; S1, S2, NarrowPhaseSolver &gt; &amp;node, const S1 &amp;shape1, const Transform3f &amp;tf1, const S2 &amp;shape2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#a2078670bca24b2979c0eb6bf8837cab4',1,'hpp::fcl::initialize(MeshDistanceTraversalNode&lt; BV &gt; &amp;node, BVHModel&lt; BV &gt; &amp;model1, Transform3f &amp;tf1, BVHModel&lt; BV &gt; &amp;model2, Transform3f &amp;tf2, const DistanceRequest &amp;request, DistanceResult &amp;result, bool use_refit=false, bool refit_bottomup=false)'],['../a00144.html#a20cd04c45435db3ce27b681825478b74',1,'hpp::fcl::initialize(MeshDistanceTraversalNodeRSS &amp;node, const BVHModel&lt; RSS &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; RSS &gt; &amp;model2, const Transform3f &amp;tf2, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#af8567469de1932c375b904d482630fdc',1,'hpp::fcl::initialize(MeshDistanceTraversalNodekIOS &amp;node, const BVHModel&lt; kIOS &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; kIOS &gt; &amp;model2, const Transform3f &amp;tf2, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#a7053de0f57a197081254d43c7bdea599',1,'hpp::fcl::initialize(MeshDistanceTraversalNodeOBBRSS &amp;node, const BVHModel&lt; OBBRSS &gt; &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; OBBRSS &gt; &amp;model2, const Transform3f &amp;tf2, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#af050284fcc6e54d1308309efbdd020cd',1,'hpp::fcl::initialize(MeshShapeDistanceTraversalNode&lt; BV, S, NarrowPhaseSolver &gt; &amp;node, BVHModel&lt; BV &gt; &amp;model1, Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result, bool use_refit=false, bool refit_bottomup=false)'],['../a00144.html#ae359db8caee004d125ece3aebb118b25',1,'hpp::fcl::initialize(ShapeMeshDistanceTraversalNode&lt; S, BV, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, BVHModel&lt; BV &gt; &amp;model2, Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result, bool use_refit=false, bool refit_bottomup=false)'],['../a00144.html#a676f8d12f5e37e1385f2a3fecaa7c0d3',1,'hpp::fcl::initialize(MeshShapeDistanceTraversalNodeRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; RSS &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#a2c0ded2c4101bfd44d9a0a4c18732749',1,'hpp::fcl::initialize(MeshShapeDistanceTraversalNodekIOS&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; kIOS &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#af4c98516479a14bf6744c4ffa3067189',1,'hpp::fcl::initialize(MeshShapeDistanceTraversalNodeOBBRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const BVHModel&lt; OBBRSS &gt; &amp;model1, const Transform3f &amp;tf1, const S &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#a330a76c89cce5ceb77f8336f48280160',1,'hpp::fcl::initialize(ShapeMeshDistanceTraversalNodeRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; RSS &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#af66410d5dff99760cf28b549726808c0',1,'hpp::fcl::initialize(ShapeMeshDistanceTraversalNodekIOS&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; kIOS &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)'],['../a00144.html#a7fd5d0c921f4d55c5ae480b6f5e8bf8e',1,'hpp::fcl::initialize(ShapeMeshDistanceTraversalNodeOBBRSS&lt; S, NarrowPhaseSolver &gt; &amp;node, const S &amp;model1, const Transform3f &amp;tf1, const BVHModel&lt; OBBRSS &gt; &amp;model2, const Transform3f &amp;tf2, const NarrowPhaseSolver *nsolver, const DistanceRequest &amp;request, DistanceResult &amp;result)']]],
  ['inside',['Inside',['../a00043.html#a5791ce84bd0ff37888b7c1e1b3dda73caa8e4aaef15985f9ba848d16e44c55d5a',1,'hpp::fcl::details::GJK::Inside()'],['../a00047.html#a982804cbb44d228d4932104f7a81194a',1,'hpp::fcl::KDOP::inside()']]],
  ['instance',['Instance',['../a00080.html#a55f2f61dd9aff34ac2524a78a67a2e43',1,'hpp::fcl::tools::Profiler']]],
  ['intersect',['Intersect',['../a00046.html',1,'hpp::fcl']]],
  ['intersect_2eh',['intersect.h',['../a00141.html',1,'']]],
  ['intersectrectquad2',['intersectRectQuad2',['../a00166.html#a1b2be54c2293b4fd0c821fa9cb458a80',1,'hpp::fcl::details']]],
  ['invalidhull',['InvalidHull',['../a00042.html#aa62a89b413865b1e8211d16307cdbc2faea477dc4785adb6286610756d47bd2a9',1,'hpp::fcl::details::EPA']]],
  ['inverse',['inverse',['../a00107.html#af79406519ddcfc7728871d06148ad8f2',1,'hpp::fcl::Transform3f::inverse()'],['../a00144.html#aba763c548a5f4a9856d166f68c10169a',1,'hpp::fcl::inverse()']]],
  ['inversetimes',['inverseTimes',['../a00107.html#a3ead83b2fc778e11b4defb359b8bba12',1,'hpp::fcl::Transform3f']]],
  ['invertresults',['invertResults',['../a00028.html#ac194dfff179a5026c233c9d4489ca6d4',1,'hpp::fcl::CollisionResult']]],
  ['iscollision',['isCollision',['../a00028.html#adc912280bd17ea80d2d4660ce67b0fc0',1,'hpp::fcl::CollisionResult']]],
  ['isequal',['isEqual',['../a00144.html#a7673db13abffc3ce36aeacc7a8476467',1,'hpp::fcl']]],
  ['isfirstnodeleaf',['isFirstNodeLeaf',['../a00108.html#aeb4a28a6c863f52e29a0c0657907c6cb',1,'hpp::fcl::TraversalNodeBase::isFirstNodeLeaf()'],['../a00016.html#a4d9828aed9aaac054e14dd3c13befc76',1,'hpp::fcl::BVHShapeCollisionTraversalNode::isFirstNodeLeaf()'],['../a00017.html#a9022a261f7f600ba65b14228273b6ff7',1,'hpp::fcl::BVHShapeDistanceTraversalNode::isFirstNodeLeaf()'],['../a00012.html#a66b65589da3b710d1149df087130fca1',1,'hpp::fcl::BVHCollisionTraversalNode::isFirstNodeLeaf()'],['../a00013.html#af51ee8350443cb0295be41f5ba444ca3',1,'hpp::fcl::BVHDistanceTraversalNode::isFirstNodeLeaf()']]],
  ['isfree',['isFree',['../a00025.html#af447798df04ebfdf6b085127c37e5c38',1,'hpp::fcl::CollisionGeometry']]],
  ['isidentity',['isIdentity',['../a00107.html#a400e08713893ddddc3abe23248b24f77',1,'hpp::fcl::Transform3f']]],
  ['isidentitytransform',['isIdentityTransform',['../a00026.html#a488160dc532e43a59a8c143a9fc69b73',1,'hpp::fcl::CollisionObject']]],
  ['isleaf',['isLeaf',['../a00019.html#abed3f11bffa30011c08041ad8aec37e7',1,'hpp::fcl::BVNodeBase']]],
  ['isnodefree',['isNodeFree',['../a00070.html#a813b118ca9795e79ddffa589bf5c799e',1,'hpp::fcl::OcTree']]],
  ['isnodeoccupied',['isNodeOccupied',['../a00070.html#a566e319e2c71f6218433776f1e4a951f',1,'hpp::fcl::OcTree']]],
  ['isnodeuncertain',['isNodeUncertain',['../a00070.html#a1c42543635c3cbda7db0963628c2dd0f',1,'hpp::fcl::OcTree']]],
  ['isoccupied',['isOccupied',['../a00025.html#abca079fe0fd66a0563d46f5a22e58389',1,'hpp::fcl::CollisionGeometry']]],
  ['isquatidentity',['isQuatIdentity',['../a00144.html#a14ac5cbd4fdc04b67044bbc095f60378',1,'hpp::fcl']]],
  ['issatisfied',['isSatisfied',['../a00027.html#a2586f8ff4d9984f28d8e36ca785d87d0',1,'hpp::fcl::CollisionRequest::isSatisfied()'],['../a00036.html#a9b507ac0d0dab29239a88cd0f2807336',1,'hpp::fcl::DistanceRequest::isSatisfied()']]],
  ['issecondnodeleaf',['isSecondNodeLeaf',['../a00108.html#a39046c96597f2a13fa27e16622d16e15',1,'hpp::fcl::TraversalNodeBase::isSecondNodeLeaf()'],['../a00089.html#a4ecc755be7abac7e6d37f9a8362811bc',1,'hpp::fcl::ShapeBVHCollisionTraversalNode::isSecondNodeLeaf()'],['../a00090.html#a6e382bcf0932f20045143cb640d0b92e',1,'hpp::fcl::ShapeBVHDistanceTraversalNode::isSecondNodeLeaf()'],['../a00012.html#aca9be6a4a4ec3084228a1efe9aa84469',1,'hpp::fcl::BVHCollisionTraversalNode::isSecondNodeLeaf()'],['../a00013.html#a477effaac8ec6ff751fce647ecd770b8',1,'hpp::fcl::BVHDistanceTraversalNode::isSecondNodeLeaf()']]],
  ['isuncertain',['isUncertain',['../a00025.html#a4f8c9ca7857288529372b7cef931a47d',1,'hpp::fcl::CollisionGeometry']]],
  ['obb_2eh',['OBB.h',['../a00148.html',1,'']]]
];
