<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>body.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00088</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::Body</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
  </compound>
  <compound kind="file">
    <name>cartesian-product.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/liegroup/</path>
    <filename>a00089</filename>
    <class kind="struct">hpp::pinocchio::liegroup::CartesianProductOperation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>hpp::pinocchio::liegroup</namespace>
  </compound>
  <compound kind="file">
    <name>center-of-mass-computation.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00090</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <includes id="a00095" name="device.hh" local="no" imported="no">hpp/pinocchio/device.hh</includes>
    <class kind="class">hpp::pinocchio::CenterOfMassComputation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
  </compound>
  <compound kind="file">
    <name>collision-object.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00091</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::CollisionObject</class>
    <namespace>pinocchio</namespace>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="typedef">
      <type>::pinocchio::GeometryObject</type>
      <name>GeometryObject</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6189a5c3bff1342cdd03111f89ff13b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00092</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="function">
      <type>void</type>
      <name>saturate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab22d4bd6671adae9b1bf18fee7352617</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationOut_t configuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saturate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abd2d65b52cf46a4fe0f184d3fd1d1ed7</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationOut_t configuration, ArrayXb &amp;saturation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0b1da5beeaa46163e6ea321b0cbb851e</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t configuration, vectorIn_t velocity, ConfigurationOut_t result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a865fc43a0997d436e75dc36f8120bd94</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q0, ConfigurationIn_t q1, const value_type &amp;u, ConfigurationOut_t result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af8919bdb93c82a1ce4a224df10d5f0ee</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q1, ConfigurationIn_t q2, vectorOut_t result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isApprox</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae0208a4be9d1d4cfc28491ec807ed43c</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q1, ConfigurationIn_t q2, value_type eps)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>distance</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abf513e72cfd566ca8be6b5799406d2a8</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q1, ConfigurationIn_t q2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6f84986836e0be19212fd54b6d5bab27</anchor>
      <arglist>(const DevicePtr_t &amp;robot, Configuration_t &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a30b3d3de83130e19f2214b83a575e38b</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationOut_t q)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a3afa113716373036e2f219147875b7b9</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q, const value_type &amp;eps)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>displayConfig</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8a13cf488e2899641127b118e73b9f0d</anchor>
      <arglist>(ConfigurationIn_t q, int precision=20)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>display</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a868c7e51b15278d6cf6ffe41128afb57</anchor>
      <arglist>(std::ostream &amp;os, const SE3 &amp;m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>device-data.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00093</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="struct">hpp::pinocchio::DeviceData</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Computation_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JOINT_POSITION</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a7ee040e0b85a57ee4a8f672b5be02696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JACOBIAN</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a21c244a28b7fa61e0d96b7ecfd926ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VELOCITY</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8aa6229d1e8038ff8255e28e0b2e1dd43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCELERATION</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a9e22bdd0531f34e594d9d24f253f8193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COM</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8aff44278a372c294397b26cae904796e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPUTE_ALL</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a08c3bb76d2afc23825123f6a3d46061f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>device-sync.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00094</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <includes id="a00093" name="device-data.hh" local="no" imported="no">hpp/pinocchio/device-data.hh</includes>
    <class kind="class">hpp::pinocchio::AbstractDevice</class>
    <class kind="class">hpp::pinocchio::DeviceSync</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
  </compound>
  <compound kind="file">
    <name>device.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00095</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <includes id="a00097" name="frame.hh" local="no" imported="no">hpp/pinocchio/frame.hh</includes>
    <includes id="a00108" name="pool.hh" local="no" imported="no">hpp/pinocchio/pool.hh</includes>
    <includes id="a00096" name="extra-config-space.hh" local="no" imported="no">hpp/pinocchio/extra-config-space.hh</includes>
    <includes id="a00093" name="device-data.hh" local="no" imported="no">hpp/pinocchio/device-data.hh</includes>
    <includes id="a00094" name="device-sync.hh" local="no" imported="no">hpp/pinocchio/device-sync.hh</includes>
    <class kind="class">hpp::pinocchio::Device</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a60d80d65b074caa66597342b43dc547e</anchor>
      <arglist>(std::ostream &amp;os, const hpp::pinocchio::Device &amp;device)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>extra-config-space.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00096</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::ExtraConfigSpace</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
  </compound>
  <compound kind="file">
    <name>frame.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00097</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::Frame</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac50b48c3dee721428ce5e129d77b7e85</anchor>
      <arglist>(std::ostream &amp;os, const Frame &amp;frame)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fwd.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00098</filename>
    <class kind="struct">hpp::pinocchio::JointCollectionTpl</class>
    <class kind="class">hpp::pinocchio::LiegroupElementConstBase</class>
    <class kind="class">hpp::pinocchio::LiegroupElementBase</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa426f9429540efdd3ab6cc5fd511e23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointCollectionTpl&lt; value_type, 0 &gt;</type>
      <name>JointCollection</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a76fd5365395d8a10d04c6a3186950b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointIndex</type>
      <name>JointIndex</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab22b0231fd806a40085bd730c9ae5c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::FrameIndex</type>
      <name>FrameIndex</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a569c27d7b203ddedf5930c705c19e7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::GeomIndex</type>
      <name>GeomIndex</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a741f82e6a87dc298139857db83dd5d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::ModelTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>Model</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a48c00e9f5089255f081b5be7762f66b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::DataTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>Data</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab1d48276beae89ddc8d8ad6ca4aa2ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::GeometryModel</type>
      <name>GeomModel</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab8e8391c07630881c6a3f2d659f25e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::GeometryData</type>
      <name>GeomData</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a52f98656dc3f804979ea903b2279e450</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::SE3</type>
      <name>Transform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a75ac2494575b0ac59c362d5317e846d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::SE3</type>
      <name>SE3</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af5c64e16d8930c21a3a02a9d7d23dc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>JointModel</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8b10d48521fd3171603ffebe8c973497</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Array&lt; bool, Eigen::Dynamic, 1 &gt;</type>
      <name>ArrayXb</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abd9025139f87d11ddc921e88f2094333</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, 1 &gt;</type>
      <name>vector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a558e210b43507ee7263936bf04d2c451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa4c05e8989d13ccf9f2d786b50142888</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; const Configuration_t &gt;</type>
      <name>ConfigurationIn_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>afb18151a08fe581d2bdf0729bb2c4355</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; Configuration_t &gt;</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa00cb75e2e76c2eab2476f39ce11a5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Configuration_t &gt;</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aabe2d6feacf16361fe546169e50d0312</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; const vector_t &gt;</type>
      <name>vectorIn_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae32395f36e00ecdfe999cabf521bfd10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; vector_t &gt;</type>
      <name>vectorOut_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5b9f3b29e7c77355e768376534888073</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>matrix_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6b2c2da0f5f615aee776418e7116a342</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; matrix_t &gt;</type>
      <name>matrixOut_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a2ca37707275b3ae48d157ec7643776a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>matrix_t::Index</type>
      <name>size_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7f8115ade831bec239fe712157fe75ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 3, 3 &gt;</type>
      <name>matrix3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab3941ba5047c4a365f885005f3fdc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 3, 1 &gt;</type>
      <name>vector3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6a004c6a1b49358be8a2e548adb50609</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 4, 1 &gt;</type>
      <name>vector4_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af8de7a296cd6d0eddf146b8fe9f08a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 6, Eigen::Dynamic &gt;</type>
      <name>JointJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8a6f14708cfa4fba5cae77c0b9ae6b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 3, Eigen::Dynamic &gt;</type>
      <name>ComJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac33531d00895ee2c10e791ca710baec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Block&lt; JointJacobian_t, 3, Eigen::Dynamic &gt;</type>
      <name>HalfJointJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a00efdfc22b6c75ab45bab4c091073667</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointVector</type>
      <name>JointVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abb4673c34725e28d10a8de506c1844df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector</type>
      <name>ObjectVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a40ae099d0b98aba6ca96e9d061fdd15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Body &gt;</type>
      <name>BodyPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a24944af2b196b036053f3d780460b96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Body &gt;</type>
      <name>BodyConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a938099c84b52874a0a1cc9eaf2423703</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::CollisionObject</type>
      <name>FclCollisionObject</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a4e45dbad309c3acca243931ce1615539</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::CollisionObject *</type>
      <name>FclCollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa7c347612904861eb9142f935ff8802c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const fcl::CollisionObject *</type>
      <name>FclConstCollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab8c4bda69d23427a159cc2e5539a7850</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CollisionObject &gt;</type>
      <name>CollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aaa99e3ee64d84835f6a772438b2c79c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const CollisionObject &gt;</type>
      <name>CollisionObjectConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aaffaab40f93160edba72bc14926252fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Device &gt;</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a373a8f537ca24a05a7c3a24e7cfc4b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Device &gt;</type>
      <name>DeviceConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7917dbfeff67c8ef9def031fea1f3182</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; fcl::DistanceResult &gt;</type>
      <name>DistanceResults_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0d7c28a5d747bdfb48f04a86f16bd77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; HumanoidRobot &gt;</type>
      <name>HumanoidRobotPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab3c6d00070946fcfee4e5685aa1af102</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CenterOfMassComputation &gt;</type>
      <name>CenterOfMassComputationPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aac526223a037508ea6317d36384ff1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Joint &gt;</type>
      <name>JointPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a11572292391e7bafdbca81756e27c5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Joint &gt;</type>
      <name>JointConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adc158b3cbced5ba72a4ff06667a20553</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Gripper &gt;</type>
      <name>GripperPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a833b69276d572f557c907ad37549267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa93ce71458060b01aa12d008d8ca57bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Model &gt;</type>
      <name>ModelPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a1d66a4d5f694def1dc9ab230c71f7de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Model &gt;</type>
      <name>ModelConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6608150aa2386b96aea58066f3fca6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Data &gt;</type>
      <name>DataPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a85bd0e251051197a674a72c63ee4b9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Data &gt;</type>
      <name>DataConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa0a301fe7c04ecfcc58434dea84d4dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GeomModel &gt;</type>
      <name>GeomModelPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7a7e637eb3ee6336cf1d2b2aecd6af16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const GeomModel &gt;</type>
      <name>GeomModelConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af2656e05b77de1dfb949751c7d6806e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GeomData &gt;</type>
      <name>GeomDataPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac4498e7fd2070f8ce8f50dd91791b46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const GeomData &gt;</type>
      <name>GeomDataConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a874f93f116174e110207be52d53bfae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LiegroupElementConstBase&lt; vectorIn_t &gt;</type>
      <name>LiegroupElementConstRef</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a556ca8318de249b9c6ebe433baef8003</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LiegroupElementBase&lt; vector_t &gt;</type>
      <name>LiegroupElement</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a07e14f581eaea43ddf1269b9e0a971a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LiegroupElementBase&lt; vectorOut_t &gt;</type>
      <name>LiegroupElementRef</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6c1f2e7b398308b41dbaa994535c49d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LiegroupSpace &gt;</type>
      <name>LiegroupSpacePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a46bb7a01dbda0c2aca6071ec3d5441b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const LiegroupSpace &gt;</type>
      <name>LiegroupSpaceConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a3477ffa8deb02bd32abb7919d8c47542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Request_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a27096aad315daca20343ce6639b0d3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLLISION</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a27096aad315daca20343ce6639b0d3dda402eae90d68f82b0aff814d9d9ad65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISTANCE</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a27096aad315daca20343ce6639b0d3dda7fa5b0a3520ba495e4b31bd5f9dcf20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InOutType</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a731d7d3bb769d876d87d08693d7fbfb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INNER</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a731d7d3bb769d876d87d08693d7fbfb6a4057b519c085b1dc78303c3b1e989651</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OUTER</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a731d7d3bb769d876d87d08693d7fbfb6a250cb185a141793637d20a5d5022a51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab56a452492902f71cc8f46a636e6756f</anchor>
      <arglist>(Body)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aeef9505c1be96390e43320d54cdab964</anchor>
      <arglist>(CollisionObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac1750214f2b3eab427f9ed8e09c03b14</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abc611d88cb0dc0f38486e7775737149f</anchor>
      <arglist>(HumanoidRobot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a94a6544290a43d2e835cf339f7b19891</anchor>
      <arglist>(Joint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae26b75d26ec9dcba169f362f9aae410f</anchor>
      <arglist>(JointConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6b1375325e661d9a06b81493ae5e66b5</anchor>
      <arglist>(Gripper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a278ab501ed7a7cfae1359394810387df</anchor>
      <arglist>(CenterOfMassComputation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae89f05ac47d14e1d43f069288df18766</anchor>
      <arglist>(LiegroupSpace)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>gripper.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00099</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::Gripper</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a43156102f5d02d460fe8e6bf4c6ebea1</anchor>
      <arglist>(std::ostream &amp;os, const Gripper &amp;gripper)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>humanoid-robot.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00100</filename>
    <includes id="a00095" name="device.hh" local="no" imported="no">hpp/pinocchio/device.hh</includes>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::HumanoidRobot</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
  </compound>
  <compound kind="file">
    <name>joint-collection.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00101</filename>
    <class kind="struct">hpp::pinocchio::JointCollectionTpl</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="typedef">
      <type>JointCollection::JointModelVariant</type>
      <name>JointModelVariant</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a030ca3cf9eade939a699e48f6576bf01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointCollection::JointDataVariant</type>
      <name>JointDataVariant</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a11edb2fd07973f067798d40be560e3a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>joint.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00102</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::Joint</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a56bfe0b8a6f7ce4a97671eb9a2e2dfa1</anchor>
      <arglist>(std::ostream &amp;os, const Joint &amp;joint)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>liegroup-element.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00103</filename>
    <includes id="a00104" name="liegroup-space.hh" local="no" imported="no">hpp/pinocchio/liegroup-space.hh</includes>
    <class kind="class">hpp::pinocchio::LiegroupElementConstBase</class>
    <class kind="class">hpp::pinocchio::LiegroupElementBase</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="function">
      <type>LiegroupElement</type>
      <name>operator+</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga6a1f6c48efb8464c8fb1dafda68c2247</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type &gt; &amp;e, vectorIn_t v)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>operator-</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga051ed65b357445e75e574e195e5171ed</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type1 &gt; &amp;e1, const LiegroupElementConstBase&lt; vector_type2 &gt; &amp;e2)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>log</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aeb6537f6f79a9926b6dc9f112677069b</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type &gt; &amp;lge)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aab80ff04ad9750360aedca7dd34720d3</anchor>
      <arglist>(std::ostream &amp;os, const LiegroupElementConstBase&lt; vector_type &gt; &amp;e)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>liegroup-space.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00104</filename>
    <includes id="a00105" name="liegroup.hh" local="no" imported="no">hpp/pinocchio/liegroup.hh</includes>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="class">hpp::pinocchio::LiegroupSpace</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>boost</namespace>
    <member kind="typedef">
      <type>ABoostVariant</type>
      <name>LiegroupType</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gafada9054c604aff6bd17ced21227db73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DerivativeProduct</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga8a8d5eb6e042250da9a00310a70be5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DerivativeTimesInput</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gga8a8d5eb6e042250da9a00310a70be5c1aac1fa1150e10ffdeacd28f5228a7842d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InputTimesDerivative</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gga8a8d5eb6e042250da9a00310a70be5c1a360ce69190b39422d1ec92bbac754b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga67ff3e9330883af5e57033c527b47e5a</anchor>
      <arglist>(std::ostream &amp;os, const LiegroupSpace &amp;space)</arglist>
    </member>
    <member kind="function">
      <type>hpp::pinocchio::LiegroupSpacePtr_t</type>
      <name>operator*</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga49dc3c7a215d4c2b94170c618b1b405a</anchor>
      <arglist>(const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp1, const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp2)</arglist>
    </member>
    <member kind="function">
      <type>hpp::pinocchio::LiegroupSpacePtr_t</type>
      <name>operator^</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga8a52399795d8e83ecff28345fe4785c7</anchor>
      <arglist>(const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp, hpp::pinocchio::size_type n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>liegroup.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00105</filename>
    <includes id="a00114" name="vector-space.hh" local="no" imported="no">hpp/pinocchio/liegroup/vector-space.hh</includes>
    <includes id="a00089" name="cartesian-product.hh" local="no" imported="no">hpp/pinocchio/liegroup/cartesian-product.hh</includes>
    <includes id="a00111" name="special-orthogonal.hh" local="no" imported="no">hpp/pinocchio/liegroup/special-orthogonal.hh</includes>
    <includes id="a00110" name="special-euclidean.hh" local="no" imported="no">hpp/pinocchio/liegroup/special-euclidean.hh</includes>
    <class kind="struct">hpp::pinocchio::RnxSOnLieGroupMap</class>
    <class kind="struct">hpp::pinocchio::RnxSOnLieGroupMap::operation</class>
    <class kind="struct">hpp::pinocchio::DefaultLieGroupMap</class>
    <class kind="struct">hpp::pinocchio::DefaultLieGroupMap::operation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <member kind="typedef">
      <type>::pinocchio::JointModelCompositeTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>JointModelComposite</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a43943312d07fc91bac15c8085d16bc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_PINOCCHIO_DEPRECATED RnxSOnLieGroupMap</type>
      <name>LieGroupTpl</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a78e4904ece9022b70a6664619fe2d1f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main-page.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/doc/</path>
    <filename>a00107</filename>
  </compound>
  <compound kind="file">
    <name>pool.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00108</filename>
    <class kind="class">hpp::pinocchio::Pool</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
  </compound>
  <compound kind="file">
    <name>simple-device.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00109</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <includes id="a00095" name="device.hh" local="no" imported="no">hpp/pinocchio/device.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>hpp::pinocchio::unittest</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TestDeviceType</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HumanoidRomeo</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a73733072821fb6b601715d9c8d140c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HumanoidSimple</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a4f6de05c5e5477d4f2940d27062c6dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CarLike</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a87fa1e9bf20142ad9dba1e9e9acdb687</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManipulatorArm2</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a23cf281184f6e2736508a09682a9606d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>humanoidSimple</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0a66ca33384ceddc77bc8b5d38a06668</anchor>
      <arglist>(const std::string &amp;name=&quot;humanoidSimple&quot;, bool usingFF=true, Computation_t compFlags=(Computation_t)(JOINT_POSITION|JACOBIAN))</arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>humanoidSimple</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9192101bf3ef336d278074160e8180b1</anchor>
      <arglist>(const std::string &amp;name=&quot;humanoidSimple&quot;, Computation_t compFlags=(Computation_t)(JOINT_POSITION|JACOBIAN))</arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>makeDevice</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>a44a35645fec9fcab7566f55f5f32b1a9</anchor>
      <arglist>(TestDeviceType type, const std::string &amp;prefix=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>special-euclidean.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/liegroup/</path>
    <filename>a00110</filename>
    <class kind="struct">hpp::pinocchio::liegroup::SpecialEuclideanOperation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>hpp::pinocchio::liegroup</namespace>
  </compound>
  <compound kind="file">
    <name>special-orthogonal.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/liegroup/</path>
    <filename>a00111</filename>
    <class kind="struct">hpp::pinocchio::liegroup::SpecialOrthogonalOperation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>hpp::pinocchio::liegroup</namespace>
  </compound>
  <compound kind="file">
    <name>urdf/util.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/urdf/</path>
    <filename>a00112</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>hpp::pinocchio::urdf</namespace>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a3ab3df304a2e43ceb68a3a990e1d2716</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;modelName, const std::string &amp;urdfSuffix, const std::string &amp;srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>aeda0b327aab539d8c557801e24ce0bc2</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;modelName, const std::string &amp;urdfSuffix, const std::string &amp;srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupHumanoidRobot</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a6ffe676b7974022964c7b4bb650b8bbd</anchor>
      <arglist>(const HumanoidRobotPtr_t &amp;robot, const std::string &amp;prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadUrdfModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a12c9a8c0c1680393b7bb81d8e55bd724</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadUrdfModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a76a15a5422a72851b47782fdeb46f43a</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a95b527edb96e8660c044f69c34887fbd</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootType, const std::string &amp;urdfPath, const std::string &amp;srdfPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadModelFromString</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>aa8a54fecc1f41550e6fe822edbb35d24</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootType, const std::string &amp;urdfString, const std::string &amp;srdfString)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>util.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/</path>
    <filename>a00113</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="struct">hpp::prettyPrint</class>
    <namespace>hpp</namespace>
    <member kind="enumvalue">
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>setpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaf0a4b5cf356013ff921516719a6b9cf0</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>unsetpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9ebdb5b7e4ea691aa1cc921cacd64b28</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, PrettyOutput &gt;</type>
      <name>pretty_print</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaa29fa2d7b51bc30954dd1e77c1163eca</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, CondensedOutput &gt;</type>
      <name>condensed</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga88b06fbd68a50ab03ddc565e58e9817e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, OneLineOutput &gt;</type>
      <name>one_line</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9a8cb47183de8943e9e57cb92659d5aa</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector-space.hh</name>
    <path>/local/devel/hpp/src/hpp-pinocchio/include/hpp/pinocchio/liegroup/</path>
    <filename>a00114</filename>
    <includes id="a00098" name="fwd.hh" local="no" imported="no">hpp/pinocchio/fwd.hh</includes>
    <class kind="struct">hpp::pinocchio::liegroup::VectorSpaceOperation</class>
    <class kind="struct">pinocchio::traits&lt; hpp::pinocchio::liegroup::VectorSpaceOperation&lt; Size, rot &gt; &gt;</class>
    <namespace>hpp</namespace>
    <namespace>hpp::pinocchio</namespace>
    <namespace>hpp::pinocchio::liegroup</namespace>
    <namespace>pinocchio</namespace>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::AbstractDevice</name>
    <filename>a00061.html</filename>
    <member kind="function">
      <type>ModelConstPtr_t</type>
      <name>modelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a4e2034bc1042cad819e7e0e24314696d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ModelPtr_t</type>
      <name>modelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aee48e5b8355e2a37a429b2ddebc1643b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Model &amp;</type>
      <name>model</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>af9780518e69dd4e1a197432c3197ae4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Model &amp;</type>
      <name>model</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a17507dc50a25324905064cd8d2d22dda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeomModelConstPtr_t</type>
      <name>geomModelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a525024cbf737428c0c02ae555f1d87a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomModelPtr_t</type>
      <name>geomModelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ac5b830fa658726fe233b26b652230a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GeomModel &amp;</type>
      <name>geomModel</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>afc657b49016aa0f041ca0ee3105fe4ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomModel &amp;</type>
      <name>geomModel</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ac1dcc18b1236deccd95c7e59ffc5e6d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataConstPtr_t</type>
      <name>dataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a5a2ff99dc635813a1680b55008c0e660</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataPtr_t</type>
      <name>dataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a9f822c9641ab78503c985986294cbd97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Data &amp;</type>
      <name>data</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a5baa0014557e11d2da20155a616ba98d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Data &amp;</type>
      <name>data</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ab1631ef1adbae999ba567498b310b2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeomDataConstPtr_t</type>
      <name>geomDataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aeb70512754080d41a6e2e07c8534b8a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomDataPtr_t</type>
      <name>geomDataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a2c34833d4090d324d4de7b7e74c53372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GeomData &amp;</type>
      <name>geomData</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a6b4756afdd3c564ed13bdd970756bde7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomData &amp;</type>
      <name>geomData</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aa8108348ded6bd2da2dfd5639300fb5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Configuration_t &amp;</type>
      <name>currentConfiguration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a5eb8db1a65d3b9bba963ec7f16665e9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>currentConfiguration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a25ea470b43eec8b868c439fb3a164c87</anchor>
      <arglist>(ConfigurationIn_t configuration)</arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>currentVelocity</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a37e5a92bbd60a145113393545659eea3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>currentVelocity</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ab6ad37fc08f7050f76fc1bec73e97a30</anchor>
      <arglist>(vectorIn_t velocity)</arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>currentAcceleration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a6ef791115a71852c449541b2eca24df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>currentAcceleration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>af4911b3cef044aa0a5d2c79c382466db</anchor>
      <arglist>(vectorIn_t acceleration)</arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>mass</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a26c470d6861d49ddfdea16dc6aab8aec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const vector3_t &amp;</type>
      <name>positionCenterOfMass</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a623e04dbc5b89befe408536cd4432a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ComJacobian_t &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a416827292ea32f64b9bb2a3a97260f5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>controlComputation</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aedcd7618ba144dfa0a5d1e998e7d23fb</anchor>
      <arglist>(const Computation_t &amp;flag)</arglist>
    </member>
    <member kind="function">
      <type>Computation_t</type>
      <name>computationFlag</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>add628e3e980c40c74f69d0b227d87304</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematics</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a312af4e2ed9b48860338d304d031c20c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFramesForwardKinematics</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a113792eb2a0d5e48ed597c02e89fe91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a3df17a015e935faa5d7d5700f952caa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractDevice</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a0d45020f515fd14df7f6c8c9aba0d67d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractDevice</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a90dc921b27c75fcd5a27d23f598a6d48</anchor>
      <arglist>(const ModelPtr_t &amp;m, const GeomModelPtr_t &amp;gm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual DeviceData &amp;</type>
      <name>d</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a728d69ff106f0d6123f7ab01d3d98238</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual DeviceData const &amp;</type>
      <name>d</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a9bd9ebbe6fbb75007ac3501878970eed</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ModelPtr_t</type>
      <name>model_</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a0a8517f966a161ae85408cf59b709c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GeomModelPtr_t</type>
      <name>geomModel_</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ae531df08b686d90fb9c2310d609667f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ModelConstPtr_t</type>
      <name>modelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a4e2034bc1042cad819e7e0e24314696d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ModelPtr_t</type>
      <name>modelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aee48e5b8355e2a37a429b2ddebc1643b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Model &amp;</type>
      <name>model</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>af9780518e69dd4e1a197432c3197ae4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Model &amp;</type>
      <name>model</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a17507dc50a25324905064cd8d2d22dda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeomModelConstPtr_t</type>
      <name>geomModelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a525024cbf737428c0c02ae555f1d87a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomModelPtr_t</type>
      <name>geomModelPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ac5b830fa658726fe233b26b652230a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GeomModel &amp;</type>
      <name>geomModel</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>afc657b49016aa0f041ca0ee3105fe4ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomModel &amp;</type>
      <name>geomModel</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ac1dcc18b1236deccd95c7e59ffc5e6d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DataConstPtr_t</type>
      <name>dataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a5a2ff99dc635813a1680b55008c0e660</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DataPtr_t</type>
      <name>dataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a9f822c9641ab78503c985986294cbd97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Data &amp;</type>
      <name>data</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a5baa0014557e11d2da20155a616ba98d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Data &amp;</type>
      <name>data</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ab1631ef1adbae999ba567498b310b2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeomDataConstPtr_t</type>
      <name>geomDataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aeb70512754080d41a6e2e07c8534b8a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomDataPtr_t</type>
      <name>geomDataPtr</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a2c34833d4090d324d4de7b7e74c53372</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GeomData &amp;</type>
      <name>geomData</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a6b4756afdd3c564ed13bdd970756bde7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeomData &amp;</type>
      <name>geomData</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aa8108348ded6bd2da2dfd5639300fb5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Configuration_t &amp;</type>
      <name>currentConfiguration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a5eb8db1a65d3b9bba963ec7f16665e9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>currentConfiguration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a25ea470b43eec8b868c439fb3a164c87</anchor>
      <arglist>(ConfigurationIn_t configuration)</arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>currentVelocity</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a37e5a92bbd60a145113393545659eea3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>currentVelocity</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ab6ad37fc08f7050f76fc1bec73e97a30</anchor>
      <arglist>(vectorIn_t velocity)</arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>currentAcceleration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a6ef791115a71852c449541b2eca24df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>currentAcceleration</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>af4911b3cef044aa0a5d2c79c382466db</anchor>
      <arglist>(vectorIn_t acceleration)</arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>mass</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a26c470d6861d49ddfdea16dc6aab8aec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const vector3_t &amp;</type>
      <name>positionCenterOfMass</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a623e04dbc5b89befe408536cd4432a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ComJacobian_t &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a416827292ea32f64b9bb2a3a97260f5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>controlComputation</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aedcd7618ba144dfa0a5d1e998e7d23fb</anchor>
      <arglist>(const Computation_t &amp;flag)</arglist>
    </member>
    <member kind="function">
      <type>Computation_t</type>
      <name>computationFlag</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>add628e3e980c40c74f69d0b227d87304</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematics</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a312af4e2ed9b48860338d304d031c20c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFramesForwardKinematics</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a113792eb2a0d5e48ed597c02e89fe91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a3df17a015e935faa5d7d5700f952caa5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::Body</name>
    <filename>a00062.html</filename>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>joint</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a6f59598829bcbb5a1bbc2b6aad22cf55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Body</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a335b15be850c7d32b930db2e64076a69</anchor>
      <arglist>(DeviceWkPtr_t device, JointIndex joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Body</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a5c55bb78992117fdd7c4f7aca3d9401f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ab900e566ac0d7dcc0649076b59ad4094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbInnerObjects</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a9b53f72c3258b840ff236819fd9c39cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionObjectPtr_t</type>
      <name>innerObjectAt</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>aafcef8f49f309fd17c5a10452cd122e2</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>radius</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ab229da91c2035ff4d1e8026d685bbebe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbOuterObjects</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a5699f79cbaef248e42cd58a25e49b466</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionObjectPtr_t</type>
      <name>outerObjectAt</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>af1a3828d1c5729dc5e5a373909caa976</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>const vector3_t &amp;</type>
      <name>localCenterOfMass</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>aae2003f1775ac79f97d7b8889459be97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>matrix3_t</type>
      <name>inertiaMatrix</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a55d442140bdf4c7bb8bcb2f69ce30fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>mass</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad326d2930378f4f005e5260b8cb9e9dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Body</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a335b15be850c7d32b930db2e64076a69</anchor>
      <arglist>(DeviceWkPtr_t device, JointIndex joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Body</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a5c55bb78992117fdd7c4f7aca3d9401f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ab900e566ac0d7dcc0649076b59ad4094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbInnerObjects</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a9b53f72c3258b840ff236819fd9c39cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionObjectPtr_t</type>
      <name>innerObjectAt</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>aafcef8f49f309fd17c5a10452cd122e2</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>radius</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ab229da91c2035ff4d1e8026d685bbebe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbOuterObjects</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a5699f79cbaef248e42cd58a25e49b466</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionObjectPtr_t</type>
      <name>outerObjectAt</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>af1a3828d1c5729dc5e5a373909caa976</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>const vector3_t &amp;</type>
      <name>localCenterOfMass</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>aae2003f1775ac79f97d7b8889459be97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>matrix3_t</type>
      <name>inertiaMatrix</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a55d442140bdf4c7bb8bcb2f69ce30fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>mass</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ad326d2930378f4f005e5260b8cb9e9dd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::liegroup::CartesianProductOperation</name>
    <filename>a00063.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>CartesianProductOperation&lt; LieGroup1, LieGroup2 &gt;</base>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a76d54930aa33ca0097fbdd2f119ff2d2a594b9139c7adfc46fc2ded6b44555c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a76d54930aa33ca0097fbdd2f119ff2d2a8499113f159ec2f468a9b65834706f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a76d54930aa33ca0097fbdd2f119ff2d2a35d2ac1d41537990421a5c33b96723b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::CartesianProductOperation&lt; LieGroup1, LieGroup2 &gt;</type>
      <name>Base</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>afd195f8efdf595a5740a30b582ec0a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a76d54930aa33ca0097fbdd2f119ff2d2a594b9139c7adfc46fc2ded6b44555c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a76d54930aa33ca0097fbdd2f119ff2d2a8499113f159ec2f468a9b65834706f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a76d54930aa33ca0097fbdd2f119ff2d2a35d2ac1d41537990421a5c33b96723b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>ade26502fdd30e599baec7ac705773f96</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a278e06c14fa685883706768f80d4ebe6</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const typename ConfigL_t::Scalar &amp;w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBound</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a1bd971cbd9caf3a3beecd2c9d8d6639b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;bound, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getRotationSubJacobian</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a1cd923b1148f098b702563d6e3428212</anchor>
      <arglist>(const Eigen::MatrixBase&lt; JacobianIn_t &gt; &amp;Jin, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;Jout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNormalized</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>ad2abcd7b12f394e9adb97a80dc2bad29</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const value_type &amp;eps)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::CenterOfMassComputation</name>
    <filename>a00064.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>JointRootIndexes_t</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>aa99e464a030a8f1ce987d15ca521954c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a04424b02d612b15005daa417ece9547e</anchor>
      <arglist>(const JointPtr_t &amp;rootOfSubtree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a22c2d6d14cfcb8cd0c95b0e06d563dae</anchor>
      <arglist>(const Computation_t &amp;flag=COMPUTE_ALL)</arglist>
    </member>
    <member kind="function">
      <type>const vector3_t &amp;</type>
      <name>com</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a47c0c62170fcb22c9eb13d08ec5e0399</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>mass</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>ad4b955083757418dfd17b9210fe2380b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ComJacobian_t &amp;</type>
      <name>jacobian</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a9342a9e02ec04a4812d74259932b28e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const JointRootIndexes_t &amp;</type>
      <name>roots</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>afcb7901d9266882e2624ee37f65db619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CenterOfMassComputation</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a70c26cb668f2900af08e196869a13647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CenterOfMassComputationPtr_t</type>
      <name>create</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>ad2608ea71b58674b60f9d2a4df4dc2d3</anchor>
      <arglist>(const DevicePtr_t &amp;device)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CenterOfMassComputation</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a597c1d48562a54b73deae4c45e950432</anchor>
      <arglist>(const DevicePtr_t &amp;device)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::CollisionObject</name>
    <filename>a00065.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; GeomIndex &gt;</type>
      <name>GeomIndexList</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>af9f338c6354e7cca573740569a5aee14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; JointIndex, GeomIndexList &gt;</type>
      <name>ObjectVec_t</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a61f6fe438e2acbcd69662000e3d82893</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollisionObject</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a047f4d2d6349f51346c237af3dc4403a</anchor>
      <arglist>(DevicePtr_t device, const GeomIndex geom)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollisionObject</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a43dad0172aabbfce8bb7bad6dc08d1c3</anchor>
      <arglist>(GeomModelPtr_t geomModel, GeomDataPtr_t geomData, const GeomIndex geom)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a6590148f6069544b42c16400db5e7b0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GeometryObject &amp;</type>
      <name>pinocchio</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>adc1cee66c7c689754dfbe021c0256824</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GeometryObject &amp;</type>
      <name>pinocchio</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ae309bf8cc1e3e47d0c10b652d9d01388</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FclConstCollisionObjectPtr_t</type>
      <name>fcl</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a961771d3cccd95880108e891b9fc0ce3</anchor>
      <arglist>(const GeomData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>FclCollisionObjectPtr_t</type>
      <name>fcl</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a7b372fa84e35d57d350bc50a4458f205</anchor>
      <arglist>(GeomData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>FclConstCollisionObjectPtr_t</type>
      <name>fcl</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>aadcdae09d471d214db7fefa51ddf909c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FclCollisionObjectPtr_t</type>
      <name>fcl</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ae0f7671a660724b8aca9d41187687bd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FclCollisionObjectPtr_t</type>
      <name>fcl</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a76c6856f74b7d159f3fccd03e5b85dd9</anchor>
      <arglist>(DeviceData &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>const JointIndex &amp;</type>
      <name>jointIndex</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ace263d4eb768d1995b7e5129e850551b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>joint</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a4bacbc278625ae34177865b84d6df63a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JointConstPtr_t</type>
      <name>joint</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a7b6cac0df5fc4daa9512de83aee5c92f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>positionInJointFrame</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>afbdef97fb5e5187b6c689064e321c245</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const fcl::Transform3f &amp;</type>
      <name>getFclTransform</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ad76a282abcc2f2de8108564bbc2ce174</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>getTransform</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a8d81ffe03dad558b9bbd5908988cccd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>getTransform</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>a0cbc7b9ce4211023720e35b41f14f95f</anchor>
      <arglist>(DeviceData &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>const GeomIndex &amp;</type>
      <name>indexInModel</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>acb967211c8cf5daf4a978059adc7d3b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ae15a21c43598270f9165d45e73e5adfe</anchor>
      <arglist>(const Transform3f &amp;position)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>selfAssert</name>
      <anchorfile>a00065.html</anchorfile>
      <anchor>ac33e03b1f663664bcef5b1a4dd198f20</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::DefaultLieGroupMap</name>
    <filename>a00066.html</filename>
    <class kind="struct">hpp::pinocchio::DefaultLieGroupMap::operation</class>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::Device</name>
    <filename>a00067.html</filename>
    <base>hpp::pinocchio::AbstractDevice</base>
    <member kind="typedef">
      <type>std::pair&lt; JointPtr_t, JointPtr_t &gt;</type>
      <name>CollisionPair_t</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a84dcb81edbbff01234a7a3d1b014be95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; CollisionPair_t &gt;</type>
      <name>CollisionPairs_t</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a6bc5c8e4fb0351e19a7ce1aeddcbe14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>abef0e25d94e5ce4374312cc9b2bcc9a5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>fcl::AABB</type>
      <name>computeAABB</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a850a31296dc4748cafe308e3cafc8e80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>controlComputation</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a72a3cf5612174af264e81a627d1e50ed</anchor>
      <arglist>(const Computation_t &amp;flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a693d1ad1662c45890678f490077c7825</anchor>
      <arglist>(ModelPtr_t modelPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeomModel</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a7063c3fa11fcefa94f4ed20c497fec83</anchor>
      <arglist>(GeomModelPtr_t geomModelPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a4d3ad217677b278bc103f0e2708ced8b</anchor>
      <arglist>(DataPtr_t dataPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a7f36e9850be2707352fd2ed542ab4164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeomData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad0f6973af7e2d0fc831c0980b518734c</anchor>
      <arglist>(GeomDataPtr_t geomDataPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createGeomData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a1b87061f021376e65c6b56f43977a5c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>rootJoint</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad46a0f506f830b2f0c8881b2c8d0f73e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Frame</type>
      <name>rootFrame</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a36fda52a89c677af068e351355334c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbJoints</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aa30d976789690d65ea2412bbefd3e789</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>jointAt</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad8c85789b588f40a27b2ea5c3b05b128</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointAtConfigRank</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a56a494fee69ac94542965f43177a36e6</anchor>
      <arglist>(const size_type &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointAtVelocityRank</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a1e04e46f93d5934b5a66d6962c551456</anchor>
      <arglist>(const size_type &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointByName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a689f1540462295b13c3b1bf283d97777</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointByBodyName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a0130364141dc3dcda5e2dff8364d4096</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>Frame</type>
      <name>getFrameByName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab0400735c41a2fb275f07f37a9c5005a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>configSize</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac5a47d67bc63da1d1f7c8ddab8490412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>numberDof</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aaa5a3e2ca774e013575f01489269a691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LiegroupSpacePtr_t &amp;</type>
      <name>configSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a42d379b720ae8f0a285f4a241d4faaf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupSpacePtr_t</type>
      <name>RnxSOnConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ae1416537defda5ad3990a1cb862368e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration_t</type>
      <name>neutralConfiguration</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad56d75a42b7fe3167c7e02dd69608a1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ExtraConfigSpace &amp;</type>
      <name>extraConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a791449a1793fed99a9e897a1df5304e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ExtraConfigSpace &amp;</type>
      <name>extraConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a1308b71a1045dd6b04bcbef6af4fdfb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDimensionExtraConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab5e57e6a4ff5e79c147231e6a7cbe921</anchor>
      <arglist>(const size_type &amp;dimension)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGripper</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a3a15d5d9d779c6e0667203a7cc24250d</anchor>
      <arglist>(const GripperPtr_t &amp;gripper)</arglist>
    </member>
    <member kind="function">
      <type>Grippers_t &amp;</type>
      <name>grippers</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a2c10e9a90b5d4830fface512f0e7c1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Grippers_t &amp;</type>
      <name>grippers</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a491cfa25bf23c53ccfe64456aff0ead5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyPtr_t</type>
      <name>obstacles</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a27d1a5f96bcfdf7f6aa4feb9f7adf290</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbObjects</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a63d8e9abbac1fa4c61014e8e33a98d5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionObjectPtr_t</type>
      <name>objectAt</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>af6e89509ec31587044bee65a6f0330f2</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collisionTest</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac7e2101b4b346768c1ec735074c9560f</anchor>
      <arglist>(const bool stopAtFirstCollision=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDistances</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a0a8676bb0f934d4ec104d2d16793b04a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DistanceResults_t &amp;</type>
      <name>distanceResults</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a6bb78422d30e8624787de2f562a0a212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>numberDeviceData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac51b717d3832e16781a04de5badde79d</anchor>
      <arglist>(const size_type &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>numberDeviceData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a571b3f007df347ee8c69c24d2ef1e902</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Device</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>af3de065832edb5a227a7f0428e04e0b0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a53d03bf7914a24165cee4d5f3ee95dea</anchor>
      <arglist>(const DeviceWkPtr_t &amp;weakPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCopy</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ae8f98a54ef3984786da6e08abfe2affe</anchor>
      <arglist>(const DeviceWkPtr_t &amp;weakPtr, const Device &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Device</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ae5c612745ffecbd428c4b6a1578a1a27</anchor>
      <arglist>(const Device &amp;device)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DeviceData &amp;</type>
      <name>d</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a2f0c624fa0e783c88ad1d09f6294c694</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DeviceData const &amp;</type>
      <name>d</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a23094a2598888861f77c7a2d36c0dc4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a2932b1c1e60c009fb9da119f1f27bd8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DeviceData</type>
      <name>d_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a6b040c96847a50a7edfd76cee4d1dce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac6ad3d7cd05920461443f5449775487e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Grippers_t</type>
      <name>grippers_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac257f710dfa48391d453fc58b4d88be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LiegroupSpacePtr_t</type>
      <name>configSpace_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a842d5648f66ccfcc2c1e10203675b80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ExtraConfigSpace</type>
      <name>extraConfigSpace_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a6144346cb2541791715b697b81076e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DeviceWkPtr_t</type>
      <name>weakPtr_</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aa42c68e44bb7862b52f69cb1149702a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Frame</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aee3a66b0ddf3b769f015c89b610db0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceSync</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a8c6cbc340b04aad14dce7e58ee1a3eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CollisionObject</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a9fac80507ff379cee7d4e1f254400b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Device</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ae849cc3a078349c663ed2678a776512c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DevicePtr_t</type>
      <name>clone</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ace6b3f9016d5c0c7ae5af214d342a025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>cloneConst</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a4092a97cc84c6d786623e9aa655fba43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aa7d3bad03d7aa5429a7a08a5df353418</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DevicePtr_t</type>
      <name>create</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>adfc6fa1cbafd56f33b630db605c54073</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DevicePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab2e659cdc11566081392de89973cb189</anchor>
      <arglist>(const DevicePtr_t &amp;device)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DevicePtr_t</type>
      <name>createCopyConst</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ace766dd61e57542b613388186346ff28</anchor>
      <arglist>(const DeviceConstPtr_t &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a693d1ad1662c45890678f490077c7825</anchor>
      <arglist>(ModelPtr_t modelPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeomModel</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a7063c3fa11fcefa94f4ed20c497fec83</anchor>
      <arglist>(GeomModelPtr_t geomModelPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a4d3ad217677b278bc103f0e2708ced8b</anchor>
      <arglist>(DataPtr_t dataPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a7f36e9850be2707352fd2ed542ab4164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeomData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad0f6973af7e2d0fc831c0980b518734c</anchor>
      <arglist>(GeomDataPtr_t geomDataPtr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createGeomData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a1b87061f021376e65c6b56f43977a5c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>rootJoint</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad46a0f506f830b2f0c8881b2c8d0f73e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Frame</type>
      <name>rootFrame</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a36fda52a89c677af068e351355334c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbJoints</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aa30d976789690d65ea2412bbefd3e789</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>jointAt</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad8c85789b588f40a27b2ea5c3b05b128</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointAtConfigRank</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a56a494fee69ac94542965f43177a36e6</anchor>
      <arglist>(const size_type &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointAtVelocityRank</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a1e04e46f93d5934b5a66d6962c551456</anchor>
      <arglist>(const size_type &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointByName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a689f1540462295b13c3b1bf283d97777</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>getJointByBodyName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a0130364141dc3dcda5e2dff8364d4096</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>Frame</type>
      <name>getFrameByName</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab0400735c41a2fb275f07f37a9c5005a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>configSize</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac5a47d67bc63da1d1f7c8ddab8490412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>numberDof</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>aaa5a3e2ca774e013575f01489269a691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LiegroupSpacePtr_t &amp;</type>
      <name>configSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a42d379b720ae8f0a285f4a241d4faaf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupSpacePtr_t</type>
      <name>RnxSOnConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ae1416537defda5ad3990a1cb862368e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Configuration_t</type>
      <name>neutralConfiguration</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ad56d75a42b7fe3167c7e02dd69608a1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ExtraConfigSpace &amp;</type>
      <name>extraConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a791449a1793fed99a9e897a1df5304e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ExtraConfigSpace &amp;</type>
      <name>extraConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a1308b71a1045dd6b04bcbef6af4fdfb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDimensionExtraConfigSpace</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ab5e57e6a4ff5e79c147231e6a7cbe921</anchor>
      <arglist>(const size_type &amp;dimension)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGripper</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a3a15d5d9d779c6e0667203a7cc24250d</anchor>
      <arglist>(const GripperPtr_t &amp;gripper)</arglist>
    </member>
    <member kind="function">
      <type>Grippers_t &amp;</type>
      <name>grippers</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a2c10e9a90b5d4830fface512f0e7c1cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Grippers_t &amp;</type>
      <name>grippers</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a491cfa25bf23c53ccfe64456aff0ead5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyPtr_t</type>
      <name>obstacles</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a27d1a5f96bcfdf7f6aa4feb9f7adf290</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nbObjects</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a63d8e9abbac1fa4c61014e8e33a98d5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CollisionObjectPtr_t</type>
      <name>objectAt</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>af6e89509ec31587044bee65a6f0330f2</anchor>
      <arglist>(const size_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collisionTest</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac7e2101b4b346768c1ec735074c9560f</anchor>
      <arglist>(const bool stopAtFirstCollision=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDistances</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a0a8676bb0f934d4ec104d2d16793b04a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const DistanceResults_t &amp;</type>
      <name>distanceResults</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a6bb78422d30e8624787de2f562a0a212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>numberDeviceData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>ac51b717d3832e16781a04de5badde79d</anchor>
      <arglist>(const size_type &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>numberDeviceData</name>
      <anchorfile>a00067.html</anchorfile>
      <anchor>a571b3f007df347ee8c69c24d2ef1e902</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::DeviceData</name>
    <filename>a00068.html</filename>
    <member kind="function">
      <type></type>
      <name>DeviceData</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a468509a6a61c71242d2532f244d78bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeviceData</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>acec53abe3873c9524158975da97b1bbe</anchor>
      <arglist>(const DeviceData &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidate</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ae0d5e45118d67655021da35212a4ae1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematics</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a718e070474530b8f635626d597bb4a54</anchor>
      <arglist>(const ModelPtr_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFramesForwardKinematics</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a579ff9a72ec9f4e79ef0947b1075bb92</anchor>
      <arglist>(const ModelPtr_t &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aa68c1e33ef5cf6b12dbfb154778db8d0</anchor>
      <arglist>(const ModelPtr_t &amp;m, const GeomModelPtr_t &amp;gm)</arglist>
    </member>
    <member kind="variable">
      <type>DataPtr_t</type>
      <name>data_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9b14ffdc3dbcfcfe7c8f8b9bfcb7c8d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GeomDataPtr_t</type>
      <name>geomData_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8fe14c824cd54b562cc6c4a017bfc0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Configuration_t</type>
      <name>currentConfiguration_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>af579c09705d6bc5f99f308303532afdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_t</type>
      <name>currentVelocity_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a83644db34dad8bb65314a99b504af313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_t</type>
      <name>currentAcceleration_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aa8bc7428e224f8ded3ae88e86b358615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>upToDate_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>af743dab950f281451333afecc781cd92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>frameUpToDate_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab0f4c1f5520d1ef870f6a7f10df36c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>geomUpToDate_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad4fafb1ce6634f6955c1412b1d2377fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Computation_t</type>
      <name>computationFlag_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a4afd58f98282e3803fb3a4fb2fb8a79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeviceWkPtr_t</type>
      <name>devicePtr_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>adc2f42054b0eb9a37e3ced59fc034261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Configuration_t</type>
      <name>modelConf_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a366a8d5c421dc0e4b12f3a8e7d55aa94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; JointJacobian_t &gt;</type>
      <name>jointJacobians_</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ac6eb15ff12c62976fa2e654ebe81aca1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::DeviceSync</name>
    <filename>a00069.html</filename>
    <base>hpp::pinocchio::AbstractDevice</base>
    <member kind="function">
      <type></type>
      <name>DeviceSync</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a81f7faa0ca7b5a29a1dfa980de21dd43</anchor>
      <arglist>(const DevicePtr_t &amp;d, bool lock=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DeviceSync</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>afb88caf0ef323bcf830d0c4ac9f8d29a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DeviceData &amp;</type>
      <name>d</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aaa16bf9d67876dd2cf4a9b1948199c01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DeviceData const &amp;</type>
      <name>d</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aa613876afae7d40658246a32a9120c9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>acbf360ce64e89937b99f4fb89f3d5d9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocked</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a7edc03928790faa0cb834f94bc81f72e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>afe54e216a18f9ad2e61d59c02adf0ee1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::ExtraConfigSpace</name>
    <filename>a00070.html</filename>
    <member kind="function">
      <type></type>
      <name>ExtraConfigSpace</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>aa7eaf66c1eed409a7b47bb0fa0fde87a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type &amp;</type>
      <name>lower</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a8f65e31fbd89253223862fdfd3c2f2a9</anchor>
      <arglist>(const size_type &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>value_type &amp;</type>
      <name>upper</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>ac8ba20b2aae13b061f1ef8203843d662</anchor>
      <arglist>(const size_type &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>lower</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a4df86ca2a695787345ee9ad078ee77e5</anchor>
      <arglist>(const size_type &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>upper</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a61570b20d4123e8b2142fef2c9284fe8</anchor>
      <arglist>(const size_type &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>lower</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>aef4bb0ca2d91ae241a3966a44a68932b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>upper</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a0069b8b1a550cc2458ef0fe6065c144f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>dimension</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a16b508d5b8fb21208a7d15bcfb4fb5d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Device</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a520fa05e0bf58785da428f7a0241eee2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::Frame</name>
    <filename>a00071.html</filename>
    <member kind="function">
      <type>DeviceConstPtr_t</type>
      <name>robot</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a356e01a165642ca3fec6df564dadf8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>robot</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a5011eafb06c557544324f4f7992d9030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>display</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>ae443e8aa0164349bc43d674904dcd17f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a523b4161a5cf5f6fe61ff1527e6a8f0c</anchor>
      <arglist>(DeviceWkPtr_t device, FrameIndex indexInFrameList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Frame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>af09b1edfb18d54f6dfdc16559b94a979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>aa003c5a4448b84f4859c2149bdc96bdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>currentTransformation</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a431ed2692f5c1dae5d2914af0303ba94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>currentTransformation</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a46a968e6933818e34382a71305d2470c</anchor>
      <arglist>(const DeviceData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t</type>
      <name>jacobian</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a5602d6dd98a02b9091413183b3d707ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t</type>
      <name>jacobian</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a76f1ce3e62c21b1b6b20a828e65e802c</anchor>
      <arglist>(const DeviceData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFixed</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a4d8046e1a2296946231d3af207990ab8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>joint</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a685b39804fe784043a052d0dc392bc1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Frame</type>
      <name>parentFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a85041a837b56a67cc191171149679b37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRootFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a5f080993446bd6fbf3079e3aacc28fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; FrameIndex &gt; &amp;</type>
      <name>children</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a15de7340258f08daa2b4dc9e817b0711</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>positionInParentJoint</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a010b92bec1b4733f602131d369c689af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>positionInParentFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a36c604f3cd17d92b0e1889158c004a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>positionInParentFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a32ab2a31fc25ccc5eccc9c243675f3cb</anchor>
      <arglist>(const Transform3f &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const FrameIndex &amp;</type>
      <name>index</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a2fabfe558089d87227802a7aee15113d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ::pinocchio::Frame &amp;</type>
      <name>pinocchio</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a7268dfb35194202791885229a3638155</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a523b4161a5cf5f6fe61ff1527e6a8f0c</anchor>
      <arglist>(DeviceWkPtr_t device, FrameIndex indexInFrameList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Frame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>af09b1edfb18d54f6dfdc16559b94a979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>aa003c5a4448b84f4859c2149bdc96bdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>currentTransformation</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a431ed2692f5c1dae5d2914af0303ba94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>currentTransformation</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a46a968e6933818e34382a71305d2470c</anchor>
      <arglist>(const DeviceData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t</type>
      <name>jacobian</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a5602d6dd98a02b9091413183b3d707ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t</type>
      <name>jacobian</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a76f1ce3e62c21b1b6b20a828e65e802c</anchor>
      <arglist>(const DeviceData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFixed</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a4d8046e1a2296946231d3af207990ab8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>joint</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a685b39804fe784043a052d0dc392bc1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Frame</type>
      <name>parentFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a85041a837b56a67cc191171149679b37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRootFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a5f080993446bd6fbf3079e3aacc28fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; FrameIndex &gt; &amp;</type>
      <name>children</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a15de7340258f08daa2b4dc9e817b0711</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>positionInParentJoint</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a010b92bec1b4733f602131d369c689af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>positionInParentFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a36c604f3cd17d92b0e1889158c004a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>positionInParentFrame</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a32ab2a31fc25ccc5eccc9c243675f3cb</anchor>
      <arglist>(const Transform3f &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const FrameIndex &amp;</type>
      <name>index</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a2fabfe558089d87227802a7aee15113d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ::pinocchio::Frame &amp;</type>
      <name>pinocchio</name>
      <anchorfile>a00071.html</anchorfile>
      <anchor>a7268dfb35194202791885229a3638155</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::Gripper</name>
    <filename>a00072.html</filename>
    <member kind="function">
      <type>const JointPtr_t &amp;</type>
      <name>joint</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>abd4a8df2ef3ce867bfa55024775257e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const FrameIndex &amp;</type>
      <name>frameId</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a725a7c827eb1127ef77ccbe04d2cd1a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>objectPositionInJoint</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>afc276d9cab2dfd157730fb8af2be1e7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a69638b261af4f724cf9983c566b0549b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>clearance</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ae6aa6592a1ab45e3eaac5c0314466c5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearance</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a81f5d7757441367de933c6b92040e566</anchor>
      <arglist>(const value_type &amp;clearance)</arglist>
    </member>
    <member kind="function">
      <type>GripperPtr_t</type>
      <name>clone</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a91ce770a63e7e1d23250594ff0e99e2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>abb084fd22ed0a87ec697899f1358c582</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GripperPtr_t</type>
      <name>create</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a074e3b9f3d42b95247dc0c095cc741e3</anchor>
      <arglist>(const std::string &amp;name, const DeviceWkPtr_t &amp;device)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GripperPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>aa1df48ad0694d86282101ac1467563f6</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const DeviceWkPtr_t &amp;otherDevice)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Gripper</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a29350e69543c5cba28556ef1db59432e</anchor>
      <arglist>(const std::string &amp;name, const DeviceWkPtr_t &amp;device)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>af27f5bb5ebb4aec8ab648e323722e4a3</anchor>
      <arglist>(GripperWkPtr_t weakPtr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::HumanoidRobot</name>
    <filename>a00073.html</filename>
    <base>hpp::pinocchio::Device</base>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>waist</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aa19fca7b9850c51ff225906d2f6f54d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waist</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a174c7d48cf3191321546da7a75d85c27</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>chest</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ae0ad2711ab40db3811ad8d96cd9895a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chest</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>afd083fe608743fcb6884dba7c46afb47</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>leftWrist</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a2f102fbc0aab858a23f9f056727e18b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftWrist</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ab9026cbecbb18d9bbb8ca31474100cb8</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>rightWrist</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aab65b2d269d13b097046ae3148d66bbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightWrist</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7b057ca511d248b6b915300038b2c1c0</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>leftAnkle</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a17a7b601143318af80f781ae54a3d9d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftAnkle</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a566f3dcad266a55a248f83b76d1f18bb</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>rightAnkle</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a3ea369e112b3d02e57e2f10149540b9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightAnkle</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ad09ee0b57e0a93459ddb1581adf93057</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>gazeJoint</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a7fc9ffc92524e9bc8039cacf1494bb1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gazeJoint</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ac6d57cb903db9c2a200b8ecd183c8590</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gaze</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a9d7c741ecab9d9ac8c5a0d6c9b3f61d5</anchor>
      <arglist>(const vector3_t &amp;origin, const vector3_t &amp;dir)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HumanoidRobot</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ab9d2b1a77aa36f038207b6aac9633053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DevicePtr_t</type>
      <name>clone</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a755bc3cdfc981bb54202c1775e365e4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HumanoidRobotPtr_t</type>
      <name>create</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ae85bc1fca4b0b640cd0e24d9703728bb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HumanoidRobot</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>aecf75694653cd31727cd1322ed284640</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HumanoidRobot</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ac998917e7ccecec537cb4efa7924ab41</anchor>
      <arglist>(const HumanoidRobot &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a5b99dda77f28bed1a7cfd422411d303f</anchor>
      <arglist>(const HumanoidRobotWkPtr_t &amp;weakPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCopy</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a6847f85cd5032f622635d3995818cde9</anchor>
      <arglist>(const HumanoidRobotWkPtr_t &amp;weakPtr, const HumanoidRobot &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HumanoidRobot</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>ab9d2b1a77aa36f038207b6aac9633053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DevicePtr_t</type>
      <name>clone</name>
      <anchorfile>a00073.html</anchorfile>
      <anchor>a755bc3cdfc981bb54202c1775e365e4d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::Joint</name>
    <filename>a00074.html</filename>
    <member kind="function">
      <type>DeviceConstPtr_t</type>
      <name>robot</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a3ec1b6739d9e8cabd0591551edf37688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>robot</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a3dbd88b6b58680e8a7e2abef893b761d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>display</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a2b258ff1be3c0a91479662e0743968cb</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupSpacePtr_t</type>
      <name>configurationSpace</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a69369f95f33ac8f018974c1836a6fc6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupSpacePtr_t</type>
      <name>RnxSOnConfigurationSpace</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a21463b9e892b15c53f67e01ab047fbca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>abe6ef5031cef9058d8cf522f71f6628e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>currentTransformation</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a13e481232c0a61aa2a3a66a59a0074c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>currentTransformation</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a4da2d18e65bc11049f4e5602ac5389ac</anchor>
      <arglist>(const DeviceData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>numberDof</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>abe2f26df2983c3979802319354d21a16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>configSize</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a614b9038c5cb61748d4a0346783fe726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>rankInConfiguration</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a45745d415b80cb699418bc686933f80a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>rankInVelocity</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a6cc3ff8f02dc0b930bd76ee5d1c47cc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>parentJoint</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a553c0c2a2a4320e68a1d21f72c6f671b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>numberChildJoints</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>afb01d6a12a0e0c293826393c943ad878</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>childJoint</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aa261c14b751767b59f45d66e457ae7ce</anchor>
      <arglist>(std::size_t rank) const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>positionInParentFrame</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aec1adf9de3a2d38a5813de19af588231</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isBounded</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a06e2fd513733000df33343b78905209e</anchor>
      <arglist>(size_type rank, bool bounded)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBounded</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a0f39e467ba1ef16c644c40ef44f67fb0</anchor>
      <arglist>(size_type rank) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>lowerBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a26a594b2c555db1d3f1c227400200c30</anchor>
      <arglist>(size_type rank) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>upperBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a868687c52bb0fb07e476d8a151725304</anchor>
      <arglist>(size_type rank) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lowerBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a71339ceb5252d612607cd64c0d47f252</anchor>
      <arglist>(size_type rank, value_type lowerBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upperBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a276c3fc5db987c0458436faacf9725b9</anchor>
      <arglist>(size_type rank, value_type upperBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lowerBounds</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a7ef4ec7214e8fe5620768ba1972cc969</anchor>
      <arglist>(vectorIn_t lowerBounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upperBounds</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>abdf82e76875001ca17148bebb25c46f6</anchor>
      <arglist>(vectorIn_t upperBounds)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>upperBoundLinearVelocity</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a703a789e96eef78afe8d77a67e6803da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>upperBoundAngularVelocity</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a9f269e2c2d6424b05a3cbac767541565</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>maximalDistanceToParent</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a4fd3aa9bc9d962c410de556b04e78d66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t &amp;</type>
      <name>jacobian</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ace216c68c527e1804b9c5065dd0b1da6</anchor>
      <arglist>(const bool localFrame=true) const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t &amp;</type>
      <name>jacobian</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aed0c14e6a69d0ea3e1482a2ec3758c1c</anchor>
      <arglist>(DeviceData &amp;data, const bool localFrame=true) const </arglist>
    </member>
    <member kind="function">
      <type>BodyPtr_t</type>
      <name>linkedBody</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a15e6078989ccdd0a77d0839c8564bac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const JointIndex &amp;</type>
      <name>index</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aecafcc282738fdf70da0c3f2042ca77e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const JointModel &amp;</type>
      <name>jointModel</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aa71bb8487aedd61cda969f8e478d9be6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeMaximalDistanceToParent</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a546ae3208aff7ab73b977786c096923a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setChildList</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ab6e8e02f59ed670441b362dc4ccb33ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Model &amp;</type>
      <name>model</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a0efcc3e10b13fba16c99cce58eab1657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Model &amp;</type>
      <name>model</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a49a2d4cb2f1e13898faa03fdb73fdd5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DeviceData &amp;</type>
      <name>data</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a3d092c280075d5c980a3c3b9de9eafee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>selfAssert</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a8e5d81a71ac38352ffe658bdd0337ca6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>maximalDistanceToParent_</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a091276604f693c33f05927bcb91b68b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DeviceWkPtr_t</type>
      <name>devicePtr</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ad082d0f0919d107a7c064b53ae5c371f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JointIndex</type>
      <name>jointIndex</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ad552c284358e3c9d45469d33197ad290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; JointIndex &gt;</type>
      <name>children</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a5bcca40befa1ce8c772266ebee286165</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Device</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a520fa05e0bf58785da428f7a0241eee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static JointPtr_t</type>
      <name>create</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a09c726d2dfb2b7d30db1b99095cd9376</anchor>
      <arglist>(DeviceWkPtr_t device, JointIndex indexInJointList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joint</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aab94e28effbe735124d16c5981f2449c</anchor>
      <arglist>(DeviceWkPtr_t device, JointIndex indexInJointList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Joint</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a72e25abc7146f18c1894891be4608390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>abe6ef5031cef9058d8cf522f71f6628e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>currentTransformation</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a13e481232c0a61aa2a3a66a59a0074c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>currentTransformation</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a4da2d18e65bc11049f4e5602ac5389ac</anchor>
      <arglist>(const DeviceData &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>numberDof</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>abe2f26df2983c3979802319354d21a16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>configSize</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a614b9038c5cb61748d4a0346783fe726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>rankInConfiguration</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a45745d415b80cb699418bc686933f80a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>rankInVelocity</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a6cc3ff8f02dc0b930bd76ee5d1c47cc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>parentJoint</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a553c0c2a2a4320e68a1d21f72c6f671b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>numberChildJoints</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>afb01d6a12a0e0c293826393c943ad878</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointPtr_t</type>
      <name>childJoint</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aa261c14b751767b59f45d66e457ae7ce</anchor>
      <arglist>(std::size_t rank) const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>positionInParentFrame</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aec1adf9de3a2d38a5813de19af588231</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isBounded</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a06e2fd513733000df33343b78905209e</anchor>
      <arglist>(size_type rank, bool bounded)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBounded</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a0f39e467ba1ef16c644c40ef44f67fb0</anchor>
      <arglist>(size_type rank) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>lowerBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a26a594b2c555db1d3f1c227400200c30</anchor>
      <arglist>(size_type rank) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>upperBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a868687c52bb0fb07e476d8a151725304</anchor>
      <arglist>(size_type rank) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lowerBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a71339ceb5252d612607cd64c0d47f252</anchor>
      <arglist>(size_type rank, value_type lowerBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upperBound</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a276c3fc5db987c0458436faacf9725b9</anchor>
      <arglist>(size_type rank, value_type upperBound)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lowerBounds</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a7ef4ec7214e8fe5620768ba1972cc969</anchor>
      <arglist>(vectorIn_t lowerBounds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upperBounds</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>abdf82e76875001ca17148bebb25c46f6</anchor>
      <arglist>(vectorIn_t upperBounds)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>upperBoundLinearVelocity</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a703a789e96eef78afe8d77a67e6803da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>upperBoundAngularVelocity</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a9f269e2c2d6424b05a3cbac767541565</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>maximalDistanceToParent</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a4fd3aa9bc9d962c410de556b04e78d66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t &amp;</type>
      <name>jacobian</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ace216c68c527e1804b9c5065dd0b1da6</anchor>
      <arglist>(const bool localFrame=true) const </arglist>
    </member>
    <member kind="function">
      <type>JointJacobian_t &amp;</type>
      <name>jacobian</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aed0c14e6a69d0ea3e1482a2ec3758c1c</anchor>
      <arglist>(DeviceData &amp;data, const bool localFrame=true) const </arglist>
    </member>
    <member kind="function">
      <type>BodyPtr_t</type>
      <name>linkedBody</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>a15e6078989ccdd0a77d0839c8564bac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const JointIndex &amp;</type>
      <name>index</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aecafcc282738fdf70da0c3f2042ca77e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const JointModel &amp;</type>
      <name>jointModel</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>aa71bb8487aedd61cda969f8e478d9be6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::JointCollectionTpl</name>
    <filename>a00075.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <member kind="enumvalue">
      <name>Options</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a83649410181dbc9af00f53065e5d7f46a35b0eb7b883f7ad6c42301130bfc6992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>_Scalar</type>
      <name>Scalar</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a0d6cd24749ca5521601bce6aad42803c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteTpl&lt; Scalar, Options, 0 &gt;</type>
      <name>JointModelRX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>aff94c2690db0287ec59a4fb5b475c737</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteTpl&lt; Scalar, Options, 1 &gt;</type>
      <name>JointModelRY</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a6a1a80897ab8d83976be8caca21328b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteTpl&lt; Scalar, Options, 2 &gt;</type>
      <name>JointModelRZ</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a9d14ce79e677866045b9b67baae9bf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteUnalignedTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelRevoluteUnaligned</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a1f3c67aabe82228bbf989d76b9bcdce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteUnboundedTpl&lt; Scalar, Options, 0 &gt;</type>
      <name>JointModelRUBX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a5e643e4c2e4f808cdedb84987762ec1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteUnboundedTpl&lt; Scalar, Options, 1 &gt;</type>
      <name>JointModelRUBY</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>aae31d0cb298717c5ea93c5f79aa860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelRevoluteUnboundedTpl&lt; Scalar, Options, 2 &gt;</type>
      <name>JointModelRUBZ</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>ab240190cf358287eb6b79b7fee5a1268</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelPrismaticTpl&lt; Scalar, Options, 0 &gt;</type>
      <name>JointModelPX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>aff884b9f4e0019671d95b088472819a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelPrismaticTpl&lt; Scalar, Options, 1 &gt;</type>
      <name>JointModelPY</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>ac74e9a2f7286c542de3856b2cd68a75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelPrismaticTpl&lt; Scalar, Options, 2 &gt;</type>
      <name>JointModelPZ</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>ac6897943e2a9156fc7d21ea545912d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelPrismaticUnalignedTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelPrismaticUnaligned</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>aa7bc93b225ac9d3331c15b92d7259493</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelSphericalTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelSpherical</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a93877271825213b0394fae301dfdd030</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelSphericalZYXTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelSphericalZYX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a4adbf33301210c4f822b6ef43146c81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelTranslationTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelTranslation</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a8fcbaf5f21878dacda433ee0f497084e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelFreeFlyerTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelFreeFlyer</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a5b5d953ee58d403584a64fb9facd2a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelPlanarTpl&lt; Scalar, Options &gt;</type>
      <name>JointModelPlanar</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a4dd2f91e57afccbbc1cd5c1db7c365b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelCompositeTpl&lt; Scalar, Options, pinocchio::JointCollectionTpl &gt;</type>
      <name>JointModelComposite</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a4c62c8ca2e65625afef8459dd689094c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::variant&lt; JointModelRX, JointModelRY, JointModelRZ, JointModelFreeFlyer, JointModelPlanar, JointModelRevoluteUnaligned, JointModelPX, JointModelPY, JointModelPZ, JointModelPrismaticUnaligned, JointModelTranslation, JointModelRUBX, JointModelRUBY, JointModelRUBZ &gt;</type>
      <name>JointModelVariant</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a45a6456a7ce85241e8f4e7b8a0adfb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteTpl&lt; Scalar, Options, 0 &gt;</type>
      <name>JointDataRX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a2c969fcb51693e095cb6ceae18f7d374</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteTpl&lt; Scalar, Options, 1 &gt;</type>
      <name>JointDataRY</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a9770549ecde906c3bd86ea05e0d6a983</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteTpl&lt; Scalar, Options, 2 &gt;</type>
      <name>JointDataRZ</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a6c8e14a1d31e3e8a61bf3f136938db2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteUnalignedTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataRevoluteUnaligned</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>ab6a20592980818f6af6fec1238d40a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteUnboundedTpl&lt; Scalar, Options, 0 &gt;</type>
      <name>JointDataRUBX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a4cbd1b61e2ad9f1acf0fc0e89d6404f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteUnboundedTpl&lt; Scalar, Options, 1 &gt;</type>
      <name>JointDataRUBY</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a962a9107bab69655430e6023c7640589</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataRevoluteUnboundedTpl&lt; Scalar, Options, 2 &gt;</type>
      <name>JointDataRUBZ</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a38fdbbb898395a12596042993a24a66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataPrismaticTpl&lt; Scalar, Options, 0 &gt;</type>
      <name>JointDataPX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>aad5d0d27c6d7ee39892ce41b0eff21c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataPrismaticTpl&lt; Scalar, Options, 1 &gt;</type>
      <name>JointDataPY</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a619d556e3947b0a1aadbefbdca5a5f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataPrismaticTpl&lt; Scalar, Options, 2 &gt;</type>
      <name>JointDataPZ</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a63aaa3bb4a9bdf5e324b652799538d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataPrismaticUnalignedTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataPrismaticUnaligned</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a9c656895d5600efcf36f800e22733b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataSphericalTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataSpherical</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a0692afa22a5d2869d184b747a54890e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataSphericalZYXTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataSphericalZYX</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a35995a345af9aa4dd0fdcbad8d73efb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataTranslationTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataTranslation</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a215172778db98a9f433aac48d45427c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataFreeFlyerTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataFreeFlyer</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>aa1cdf67d939fa5b91a6e1d642b9724ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataPlanarTpl&lt; Scalar, Options &gt;</type>
      <name>JointDataPlanar</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a858add9308c2e5c0284b0403ac72c7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointDataCompositeTpl&lt; Scalar, Options, pinocchio::JointCollectionTpl &gt;</type>
      <name>JointDataComposite</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a88bab0e8a22dc83e9e314e3c1ba99c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::variant&lt; JointDataRX, JointDataRY, JointDataRZ, JointDataFreeFlyer, JointDataPlanar, JointDataRevoluteUnaligned, JointDataPX, JointDataPY, JointDataPZ, JointDataPrismaticUnaligned, JointDataTranslation, JointDataRUBX, JointDataRUBY, JointDataRUBZ &gt;</type>
      <name>JointDataVariant</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a3a65b5b507ef7359cea1cbf46b3d0315</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Options</name>
      <anchorfile>a00075.html</anchorfile>
      <anchor>a83649410181dbc9af00f53065e5d7f46a35b0eb7b883f7ad6c42301130bfc6992</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::LiegroupElementBase</name>
    <filename>a00076.html</filename>
    <templarg>vector_type</templarg>
    <base>hpp::pinocchio::LiegroupElementConstBase</base>
    <member kind="typedef">
      <type>LiegroupElementConstBase&lt; vector_type &gt;</type>
      <name>Base</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a53d984fd882cea55e340afc9d48440a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ab01773de1a92ed3365ff9fffbe4d6a9c</anchor>
      <arglist>(const vector_type &amp;value, const LiegroupSpacePtr_t &amp;space)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a6da98c6d4e494deccf51d6c7eb6b92af</anchor>
      <arglist>(const LiegroupSpacePtr_t &amp;space)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a1828df8bd21a9a8653644a76f73a4292</anchor>
      <arglist>(const vector_type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a5300deab67c212c396499d6e51bb5fd6</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type2 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ac5c6001026e4ddc08e576c92aa5abcc5</anchor>
      <arglist>(const LiegroupElementBase&lt; vector_type2 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a29bae1dda3767780e705e60bb4c1e28c</anchor>
      <arglist>(LiegroupElementBase&lt; vector_type2 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a610b0950087065a09056cfef43066349</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const vector_type &amp;</type>
      <name>vector</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a38f08bd888041bbb3eea715356d06a99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>vector_type &amp;</type>
      <name>vector</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a6ce5583fefa0753aafda2850725cd016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNeutral</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a016cce40cc52c46e674922fb28feac4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LiegroupElementBase &amp;</type>
      <name>operator+=</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>abe9803c59b8d4c466eb343be0618f185</anchor>
      <arglist>(vectorIn_t v)</arglist>
    </member>
    <member kind="function">
      <type>LiegroupElementBase &amp;</type>
      <name>operator=</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>aa397183fd425a851aae91ff5d23f66b1</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type2 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>LiegroupElementBase &amp;</type>
      <name>operator=</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>a43f445d0ddee57037a290d353411d99c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::LiegroupElementConstBase</name>
    <filename>a00077.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LiegroupElementConstBase</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>afc84dd57c10a5f41d12314c337638562</anchor>
      <arglist>(const Eigen::EigenBase&lt; Derived &gt; &amp;value, const LiegroupSpacePtr_t &amp;liegroupSpace)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementConstBase</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>abac3c1ff561e01d38d6a1c710d5b99d7</anchor>
      <arglist>(const Eigen::EigenBase&lt; Derived &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiegroupElementConstBase</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a754ca6ff36515b8358ae69c400e32a73</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type2 &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const LiegroupSpacePtr_t &amp;</type>
      <name>space</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>ae98d076b135c27fc5974be0dfb786cb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const vector_type &amp;</type>
      <name>vector</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a7e9c346d1b488c3f0d1ea8671e71ad43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a554c1253c299a93e1488dc52a79474e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a3938ba0665aabcb6288525f3d446876a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LiegroupElementConstBase</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a43b0066ece1482b6249fe9885a514b48</anchor>
      <arglist>(const Eigen::EigenBase&lt; Derived &gt; &amp;value, const LiegroupSpacePtr_t &amp;space, void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>value_</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a4e3237d03025cf39acd50878b0ff4990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LiegroupSpacePtr_t</type>
      <name>space_</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>acd57c050638bbc6693c693dc1ad941b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>LiegroupElementConstBase</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>a34bfb250329c148433d0fb494877e963</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>LiegroupElementBase</name>
      <anchorfile>a00077.html</anchorfile>
      <anchor>abdc7e872327b76e8cf01ff6e01c27001</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::LiegroupSpace</name>
    <filename>a00078.html</filename>
    <member kind="function">
      <type>size_type</type>
      <name>nq</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ad7e6a93916931c3b9d334ea7759923ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nv</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5741401ca12ffcff2e6a86913a5f0d90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nq</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a2f0a48d672c3fd302de4997127e5e6fe</anchor>
      <arglist>(const std::size_t &amp;rank) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>nv</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a45ce1a93aee8534e5495c30d54e413b9</anchor>
      <arglist>(const std::size_t &amp;rank) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; LiegroupType &gt; &amp;</type>
      <name>liegroupTypes</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a623cd5c3a46cb213506fc750ea80f301</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupElement</type>
      <name>neutral</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a9d4c3c6a69b9f8cd1b99edf13e4ed287</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupElement</type>
      <name>element</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5b9bdcf83b9d6d6b683b7eb4c051c77b</anchor>
      <arglist>(vectorIn_t q) const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupElementRef</type>
      <name>elementRef</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a4e8f2ebd6f7805f26da8c333a12dd38e</anchor>
      <arglist>(vectorOut_t q) const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupElementConstRef</type>
      <name>elementConstRef</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ae82198dfd549b6638b93705718372b44</anchor>
      <arglist>(vectorIn_t q) const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupElement</type>
      <name>exp</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a95ea9783b15e2fcb59a4e87b16108e69</anchor>
      <arglist>(vectorIn_t v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aaf2336fad75828c7c7861157bb962ba4</anchor>
      <arglist>(LiegroupElementConstRef q, vectorIn_t v, matrixOut_t Jq) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a4a2ee53b3bd0cd510c464912abb37962</anchor>
      <arglist>(LiegroupElementConstRef q, vectorIn_t v, matrixOut_t Jv) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jdifference</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5dad96615f34cca322dd8f74f239b49a</anchor>
      <arglist>(vectorIn_t q0, vectorIn_t q1, matrixOut_t J0, matrixOut_t J1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference_dq0</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5747d810f232256333ba64ee33453743</anchor>
      <arglist>(vectorIn_t q0, vectorIn_t q1, matrixOut_t J0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference_dq1</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a90adccc6cacb446a93ec7b80abc51b16</anchor>
      <arglist>(vectorIn_t q0, vectorIn_t q1, matrixOut_t J1) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aa13c1f1e1b86720db5ca71127ac04320</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeVectorSpaces</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ad98e21647d1b864121b2e671e136360f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LiegroupSpacePtr_t</type>
      <name>vectorSpacesMerged</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a9b2196f0f88e3218a8f02535c5352a8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVectorSpace</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a65e17e852a244b6b4060c611660e25c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aa22a80569169f499c811292e6002aa96</anchor>
      <arglist>(const LiegroupSpace &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aa9c4fb3b6e6b26f760ce89f258791483</anchor>
      <arglist>(const LiegroupSpace &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>LiegroupSpacePtr_t</type>
      <name>operator*=</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aabfdaa73d53148522fabc1fd8f91060f</anchor>
      <arglist>(const LiegroupSpaceConstPtr_t &amp;other)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>create</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a988ed939ed4de215327af27c99d1c497</anchor>
      <arglist>(const size_type &amp;size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5fe82f2c5aa9c7d9677783a40ad267a2</anchor>
      <arglist>(const LiegroupSpaceConstPtr_t &amp;other)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>create</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a3274d12158d78dabb4e6bdcae766e968</anchor>
      <arglist>(const LiegroupType &amp;type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>Rn</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a969351dd89ea20e52db3fb241bc8b35e</anchor>
      <arglist>(const size_type &amp;n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R1</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>af1f122e68a1738c8005e5e227f080c04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a11d8d63907ad72142b6f70534b537ad2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a69ed45c8e0f6655b079c301066feb1e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SE2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a97f48eeb54b3a0476fdcbf177e0f02a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SE3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>abc6b5941694a8d344abfe42bf0342aba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SO2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ac8653df7ace734d7a124e7c374408232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SO3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aea9933c2094a82d0aaab814c54296524</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R2xSO2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a535ccf63590c6297bec8c2aef9712b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R3xSO3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ad7fc20ba32cb2fa3033b63cd7e44b293</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>empty</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5df8139c7cd466a31ae5f696aa64bc3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LiegroupSpace</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aee5de993838dbf3b20d3d26ee9eac067</anchor>
      <arglist>(const size_type &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LiegroupSpace</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>afed1be29b2d87f596be4dd46f144b19d</anchor>
      <arglist>(const LiegroupSpace &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LiegroupSpace</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a2ad6c83808d8fa8f8da65709156186ec</anchor>
      <arglist>(const LiegroupType &amp;type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>Rn</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a969351dd89ea20e52db3fb241bc8b35e</anchor>
      <arglist>(const size_type &amp;n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R1</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>af1f122e68a1738c8005e5e227f080c04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a11d8d63907ad72142b6f70534b537ad2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a69ed45c8e0f6655b079c301066feb1e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SE2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a97f48eeb54b3a0476fdcbf177e0f02a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SE3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>abc6b5941694a8d344abfe42bf0342aba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SO2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ac8653df7ace734d7a124e7c374408232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>SO3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>aea9933c2094a82d0aaab814c54296524</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R2xSO2</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a535ccf63590c6297bec8c2aef9712b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>R3xSO3</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ad7fc20ba32cb2fa3033b63cd7e44b293</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LiegroupSpacePtr_t</type>
      <name>empty</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>a5df8139c7cd466a31ae5f696aa64bc3a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::DefaultLieGroupMap::operation</name>
    <filename>a00079.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::RnxSOnLieGroupMap::operation</name>
    <filename>a00080.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>hpp::pinocchio::Pool</name>
    <filename>a00081.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T *</type>
      <name>acquire</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>add0bab92b42726939dc2b4febd005aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>ada93d388b8913f834af3146b2469c3e2</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>available</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a88cc55af022bc2c300945b7953e68eb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a2a5039cd5588baf2060991c48e1bf514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>ad680650e8b8df547888d8d4786a5e477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a32f492503f7ab1c8efe39e131f032eb7</anchor>
      <arglist>(T *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a157473896cb461ee138b8ab1780cac79</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pool</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>aa0743e0ae3f960e70075104e3de135e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pool</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>af5dc3c1a484a57f2adab1ea053e810b5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Pool&lt; hpp::pinocchio::DeviceData &gt;</name>
    <filename>a00081.html</filename>
    <member kind="function">
      <type>hpp::pinocchio::DeviceData *</type>
      <name>acquire</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>add0bab92b42726939dc2b4febd005aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>ada93d388b8913f834af3146b2469c3e2</anchor>
      <arglist>(hpp::pinocchio::DeviceData *t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>available</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a88cc55af022bc2c300945b7953e68eb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a2a5039cd5588baf2060991c48e1bf514</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>ad680650e8b8df547888d8d4786a5e477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a32f492503f7ab1c8efe39e131f032eb7</anchor>
      <arglist>(hpp::pinocchio::DeviceData *t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>a157473896cb461ee138b8ab1780cac79</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pool</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>aa0743e0ae3f960e70075104e3de135e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pool</name>
      <anchorfile>a00081.html</anchorfile>
      <anchor>af5dc3c1a484a57f2adab1ea053e810b5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::prettyPrint</name>
    <filename>a00082.html</filename>
    <templarg></templarg>
    <templarg>Option</templarg>
    <member kind="function" static="yes">
      <type>static std::ostream &amp;</type>
      <name>run</name>
      <anchorfile>a00082.html</anchorfile>
      <anchor>a0360fdb867e28234070d33b202d2cb1c</anchor>
      <arglist>(std::ostream &amp;os, const T &amp;pp)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::RnxSOnLieGroupMap</name>
    <filename>a00083.html</filename>
    <class kind="struct">hpp::pinocchio::RnxSOnLieGroupMap::operation</class>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::liegroup::SpecialEuclideanOperation</name>
    <filename>a00084.html</filename>
    <templarg>N</templarg>
    <base>SpecialEuclideanOperationTpl&lt; N, value_type &gt;</base>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>abdf1a664f4fab644d37aa761654ccbc3a4a787a3f0235975ea6e7fd96e21514c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>abdf1a664f4fab644d37aa761654ccbc3af20f46aa41a8e14d03b88de0d362ccac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>abdf1a664f4fab644d37aa761654ccbc3a35112331cb333ba6b75b0deaa71896ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::SpecialEuclideanOperationTpl&lt; N, value_type &gt;</type>
      <name>Base</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>a3c894247bd3725b7443e6595c4620350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>abdf1a664f4fab644d37aa761654ccbc3a4a787a3f0235975ea6e7fd96e21514c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>abdf1a664f4fab644d37aa761654ccbc3af20f46aa41a8e14d03b88de0d362ccac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>abdf1a664f4fab644d37aa761654ccbc3a35112331cb333ba6b75b0deaa71896ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>a7d0cc26e5062524ef12cea0155708236</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBound</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>a5022051297b09fb347619853f7eddb14</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;bound, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getRotationSubJacobian</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>a23d16bda1d22d796f00bc28ce2affd9e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; JacobianIn_t &gt; &amp;Jin, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;Jout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNormalized</name>
      <anchorfile>a00084.html</anchorfile>
      <anchor>a5f4966228b2c6464290b87b6d77a451e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const value_type &amp;eps)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::liegroup::SpecialOrthogonalOperation</name>
    <filename>a00085.html</filename>
    <templarg>N</templarg>
    <base>SpecialOrthogonalOperationTpl&lt; N, value_type &gt;</base>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0c57c74d6bdc5286cd4fcd2a22376fb4a352517135ce77a61551edbb39b749718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0c57c74d6bdc5286cd4fcd2a22376fb4a6ef8c67a410a9bdb36d16e3937a6d2c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0c57c74d6bdc5286cd4fcd2a22376fb4a39b707558280dcf860bd49215cb3283b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::SpecialOrthogonalOperationTpl&lt; N, value_type &gt;</type>
      <name>Base</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a353ca37d2c7a0d688e00d5f3b40f64b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0c57c74d6bdc5286cd4fcd2a22376fb4a352517135ce77a61551edbb39b749718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0c57c74d6bdc5286cd4fcd2a22376fb4a6ef8c67a410a9bdb36d16e3937a6d2c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0c57c74d6bdc5286cd4fcd2a22376fb4a39b707558280dcf860bd49215cb3283b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a77a9f6e22d2ff6165349da43e03513c4</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a786f6683dd580f77fd177310f1c39637</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const typename ConfigL_t::Scalar &amp;w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBound</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a5b1e8e3dd1cadd088770a870262c5ce0</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;bound, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getRotationSubJacobian</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a0ce4cb7c31bd06f38cf7f4e9987775de</anchor>
      <arglist>(const Eigen::MatrixBase&lt; JacobianIn_t &gt; &amp;Jin, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;Jout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNormalized</name>
      <anchorfile>a00085.html</anchorfile>
      <anchor>a7610503b68d657460aac6d58d6fb736b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const value_type &amp;eps)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; hpp::pinocchio::liegroup::VectorSpaceOperation&lt; Size, rot &gt; &gt;</name>
    <filename>a00086.html</filename>
    <templarg>Size</templarg>
    <templarg>rot</templarg>
    <base>traits&lt; hpp::pinocchio::liegroup::VectorSpaceOperation&lt; Size, rot &gt;::Base &gt;</base>
  </compound>
  <compound kind="struct">
    <name>hpp::pinocchio::liegroup::VectorSpaceOperation</name>
    <filename>a00087.html</filename>
    <templarg>Size</templarg>
    <templarg>rot</templarg>
    <base>VectorSpaceOperationTpl&lt; Size, value_type &gt;</base>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>af0ad06766e48bbb3789480ece76786e8a72b6bd8c3daba489b6e7eaa183e5add0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>af0ad06766e48bbb3789480ece76786e8a233b492044b332c798dd885dfece7df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>af0ad06766e48bbb3789480ece76786e8aa4187a8dec0d2663bfee48557f7d62d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::VectorSpaceOperationTpl&lt; Size, value_type &gt;</type>
      <name>Base</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>aacf0acb2f279d4fec24fc4ee474f8191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BoundSize</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>af0ad06766e48bbb3789480ece76786e8a72b6bd8c3daba489b6e7eaa183e5add0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NR</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>af0ad06766e48bbb3789480ece76786e8a233b492044b332c798dd885dfece7df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NT</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>af0ad06766e48bbb3789480ece76786e8aa4187a8dec0d2663bfee48557f7d62d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorSpaceOperation</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>ae6925346184ee4e9028b298170e2cce7</anchor>
      <arglist>(int size=Size)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>a876f17234faffb12d2f212be49f86021</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>squaredDistance</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>aeb1f0a879c86b436a5f35c421fd41252</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const typename ConfigL_t::Scalar &amp;w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBound</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>a57d137bc0abff5366398e2840047d960</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;bounds, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getRotationSubJacobian</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>ab54135f6cb89c24c601c710fa3fac760</anchor>
      <arglist>(const Eigen::MatrixBase&lt; JacobianIn_t &gt; &amp;Jin, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;Jout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNormalized</name>
      <anchorfile>a00087.html</anchorfile>
      <anchor>a36d5fae8343bd727a165d51324edf7b7</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;, const value_type &amp;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>boost</name>
    <filename>a00115.html</filename>
    <member kind="function">
      <type>hpp::pinocchio::LiegroupSpacePtr_t</type>
      <name>operator*</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga49dc3c7a215d4c2b94170c618b1b405a</anchor>
      <arglist>(const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp1, const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp2)</arglist>
    </member>
    <member kind="function">
      <type>hpp::pinocchio::LiegroupSpacePtr_t</type>
      <name>operator^</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga8a52399795d8e83ecff28345fe4785c7</anchor>
      <arglist>(const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp, hpp::pinocchio::size_type n)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp</name>
    <filename>a00116.html</filename>
    <namespace>hpp::pinocchio</namespace>
    <class kind="struct">hpp::prettyPrint</class>
    <member kind="enumvalue">
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a19f2d09243fdd6828b4d40953f4f413f</anchor>
      <arglist>(HPP_UTIL_DLLAPI, AssertionError)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a0bcb296b7ca1dab3382f49953c92a853</anchor>
      <arglist>(std::ostream &amp;o, const Exception &amp;exception)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI long &amp;</type>
      <name>indent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a16259580a8f0a07bad42458aa65963f3</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a669ea668296b2ed089b72c3a1dce688e</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>afaf02e3dd1c3eaf21e287dc4c825cc89</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>resetindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a011dc7bc6e7c975fdc993c5b7abbac56</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>iendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ab2e087df519f97420058c160b8313be4</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a49bcbcf63c92e671f9aa3c737b8a2852</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a8d7bf72162e22331e54b3c387651ed95</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>setpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaf0a4b5cf356013ff921516719a6b9cf0</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>unsetpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9ebdb5b7e4ea691aa1cc921cacd64b28</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, PrettyOutput &gt;</type>
      <name>pretty_print</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaa29fa2d7b51bc30954dd1e77c1163eca</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, CondensedOutput &gt;</type>
      <name>condensed</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga88b06fbd68a50ab03ddc565e58e9817e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, OneLineOutput &gt;</type>
      <name>one_line</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9a8cb47183de8943e9e57cb92659d5aa</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::pinocchio</name>
    <filename>a00106.html</filename>
    <namespace>hpp::pinocchio::liegroup</namespace>
    <namespace>hpp::pinocchio::unittest</namespace>
    <namespace>hpp::pinocchio::urdf</namespace>
    <class kind="class">hpp::pinocchio::AbstractDevice</class>
    <class kind="class">hpp::pinocchio::Body</class>
    <class kind="class">hpp::pinocchio::CenterOfMassComputation</class>
    <class kind="class">hpp::pinocchio::CollisionObject</class>
    <class kind="struct">hpp::pinocchio::DefaultLieGroupMap</class>
    <class kind="class">hpp::pinocchio::Device</class>
    <class kind="struct">hpp::pinocchio::DeviceData</class>
    <class kind="class">hpp::pinocchio::DeviceSync</class>
    <class kind="class">hpp::pinocchio::ExtraConfigSpace</class>
    <class kind="class">hpp::pinocchio::Frame</class>
    <class kind="class">hpp::pinocchio::Gripper</class>
    <class kind="class">hpp::pinocchio::HumanoidRobot</class>
    <class kind="class">hpp::pinocchio::Joint</class>
    <class kind="struct">hpp::pinocchio::JointCollectionTpl</class>
    <class kind="class">hpp::pinocchio::LiegroupElementBase</class>
    <class kind="class">hpp::pinocchio::LiegroupElementConstBase</class>
    <class kind="class">hpp::pinocchio::LiegroupSpace</class>
    <class kind="class">hpp::pinocchio::Pool</class>
    <class kind="struct">hpp::pinocchio::RnxSOnLieGroupMap</class>
    <member kind="typedef">
      <type>::pinocchio::GeometryObject</type>
      <name>GeometryObject</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6189a5c3bff1342cdd03111f89ff13b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa426f9429540efdd3ab6cc5fd511e23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointCollectionTpl&lt; value_type, 0 &gt;</type>
      <name>JointCollection</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a76fd5365395d8a10d04c6a3186950b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointIndex</type>
      <name>JointIndex</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab22b0231fd806a40085bd730c9ae5c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::FrameIndex</type>
      <name>FrameIndex</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a569c27d7b203ddedf5930c705c19e7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::GeomIndex</type>
      <name>GeomIndex</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a741f82e6a87dc298139857db83dd5d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::ModelTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>Model</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a48c00e9f5089255f081b5be7762f66b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::DataTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>Data</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab1d48276beae89ddc8d8ad6ca4aa2ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::GeometryModel</type>
      <name>GeomModel</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab8e8391c07630881c6a3f2d659f25e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::GeometryData</type>
      <name>GeomData</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a52f98656dc3f804979ea903b2279e450</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::SE3</type>
      <name>Transform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a75ac2494575b0ac59c362d5317e846d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::SE3</type>
      <name>SE3</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af5c64e16d8930c21a3a02a9d7d23dc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>JointModel</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8b10d48521fd3171603ffebe8c973497</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Array&lt; bool, Eigen::Dynamic, 1 &gt;</type>
      <name>ArrayXb</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abd9025139f87d11ddc921e88f2094333</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, 1 &gt;</type>
      <name>vector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a558e210b43507ee7263936bf04d2c451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>vector_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa4c05e8989d13ccf9f2d786b50142888</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; const Configuration_t &gt;</type>
      <name>ConfigurationIn_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>afb18151a08fe581d2bdf0729bb2c4355</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; Configuration_t &gt;</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa00cb75e2e76c2eab2476f39ce11a5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Configuration_t &gt;</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aabe2d6feacf16361fe546169e50d0312</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; const vector_t &gt;</type>
      <name>vectorIn_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae32395f36e00ecdfe999cabf521bfd10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; vector_t &gt;</type>
      <name>vectorOut_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5b9f3b29e7c77355e768376534888073</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>matrix_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6b2c2da0f5f615aee776418e7116a342</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Ref&lt; matrix_t &gt;</type>
      <name>matrixOut_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a2ca37707275b3ae48d157ec7643776a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>matrix_t::Index</type>
      <name>size_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7f8115ade831bec239fe712157fe75ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 3, 3 &gt;</type>
      <name>matrix3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab3941ba5047c4a365f885005f3fdc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 3, 1 &gt;</type>
      <name>vector3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6a004c6a1b49358be8a2e548adb50609</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 4, 1 &gt;</type>
      <name>vector4_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af8de7a296cd6d0eddf146b8fe9f08a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 6, Eigen::Dynamic &gt;</type>
      <name>JointJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8a6f14708cfa4fba5cae77c0b9ae6b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 3, Eigen::Dynamic &gt;</type>
      <name>ComJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac33531d00895ee2c10e791ca710baec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Block&lt; JointJacobian_t, 3, Eigen::Dynamic &gt;</type>
      <name>HalfJointJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a00efdfc22b6c75ab45bab4c091073667</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointVector</type>
      <name>JointVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abb4673c34725e28d10a8de506c1844df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ObjectVector</type>
      <name>ObjectVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a40ae099d0b98aba6ca96e9d061fdd15e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Body &gt;</type>
      <name>BodyPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a24944af2b196b036053f3d780460b96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Body &gt;</type>
      <name>BodyConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a938099c84b52874a0a1cc9eaf2423703</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::CollisionObject</type>
      <name>FclCollisionObject</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a4e45dbad309c3acca243931ce1615539</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::CollisionObject *</type>
      <name>FclCollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa7c347612904861eb9142f935ff8802c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const fcl::CollisionObject *</type>
      <name>FclConstCollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab8c4bda69d23427a159cc2e5539a7850</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CollisionObject &gt;</type>
      <name>CollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aaa99e3ee64d84835f6a772438b2c79c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const CollisionObject &gt;</type>
      <name>CollisionObjectConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aaffaab40f93160edba72bc14926252fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Device &gt;</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a373a8f537ca24a05a7c3a24e7cfc4b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Device &gt;</type>
      <name>DeviceConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7917dbfeff67c8ef9def031fea1f3182</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; fcl::DistanceResult &gt;</type>
      <name>DistanceResults_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0d7c28a5d747bdfb48f04a86f16bd77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; HumanoidRobot &gt;</type>
      <name>HumanoidRobotPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab3c6d00070946fcfee4e5685aa1af102</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CenterOfMassComputation &gt;</type>
      <name>CenterOfMassComputationPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aac526223a037508ea6317d36384ff1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Joint &gt;</type>
      <name>JointPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a11572292391e7bafdbca81756e27c5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Joint &gt;</type>
      <name>JointConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adc158b3cbced5ba72a4ff06667a20553</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Gripper &gt;</type>
      <name>GripperPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a833b69276d572f557c907ad37549267f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa93ce71458060b01aa12d008d8ca57bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Model &gt;</type>
      <name>ModelPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a1d66a4d5f694def1dc9ab230c71f7de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Model &gt;</type>
      <name>ModelConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6608150aa2386b96aea58066f3fca6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Data &gt;</type>
      <name>DataPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a85bd0e251051197a674a72c63ee4b9c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Data &gt;</type>
      <name>DataConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa0a301fe7c04ecfcc58434dea84d4dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GeomModel &gt;</type>
      <name>GeomModelPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7a7e637eb3ee6336cf1d2b2aecd6af16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const GeomModel &gt;</type>
      <name>GeomModelConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af2656e05b77de1dfb949751c7d6806e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GeomData &gt;</type>
      <name>GeomDataPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac4498e7fd2070f8ce8f50dd91791b46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const GeomData &gt;</type>
      <name>GeomDataConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a874f93f116174e110207be52d53bfae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LiegroupElementConstBase&lt; vectorIn_t &gt;</type>
      <name>LiegroupElementConstRef</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a556ca8318de249b9c6ebe433baef8003</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LiegroupElementBase&lt; vector_t &gt;</type>
      <name>LiegroupElement</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a07e14f581eaea43ddf1269b9e0a971a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LiegroupElementBase&lt; vectorOut_t &gt;</type>
      <name>LiegroupElementRef</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6c1f2e7b398308b41dbaa994535c49d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LiegroupSpace &gt;</type>
      <name>LiegroupSpacePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a46bb7a01dbda0c2aca6071ec3d5441b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const LiegroupSpace &gt;</type>
      <name>LiegroupSpaceConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a3477ffa8deb02bd32abb7919d8c47542</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointCollection::JointModelVariant</type>
      <name>JointModelVariant</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a030ca3cf9eade939a699e48f6576bf01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JointCollection::JointDataVariant</type>
      <name>JointDataVariant</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a11edb2fd07973f067798d40be560e3a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ABoostVariant</type>
      <name>LiegroupType</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gafada9054c604aff6bd17ced21227db73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::pinocchio::JointModelCompositeTpl&lt; value_type, 0, JointCollectionTpl &gt;</type>
      <name>JointModelComposite</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a43943312d07fc91bac15c8085d16bc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_PINOCCHIO_DEPRECATED RnxSOnLieGroupMap</type>
      <name>LieGroupTpl</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a78e4904ece9022b70a6664619fe2d1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Computation_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JOINT_POSITION</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a7ee040e0b85a57ee4a8f672b5be02696</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JACOBIAN</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a21c244a28b7fa61e0d96b7ecfd926ea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VELOCITY</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8aa6229d1e8038ff8255e28e0b2e1dd43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ACCELERATION</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a9e22bdd0531f34e594d9d24f253f8193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COM</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8aff44278a372c294397b26cae904796e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPUTE_ALL</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a28d86841553e24f1a57c5fd87f96aca8a08c3bb76d2afc23825123f6a3d46061f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Request_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a27096aad315daca20343ce6639b0d3dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COLLISION</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a27096aad315daca20343ce6639b0d3dda402eae90d68f82b0aff814d9d9ad65a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISTANCE</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a27096aad315daca20343ce6639b0d3dda7fa5b0a3520ba495e4b31bd5f9dcf20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InOutType</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a731d7d3bb769d876d87d08693d7fbfb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INNER</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a731d7d3bb769d876d87d08693d7fbfb6a4057b519c085b1dc78303c3b1e989651</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OUTER</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a731d7d3bb769d876d87d08693d7fbfb6a250cb185a141793637d20a5d5022a51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DerivativeProduct</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga8a8d5eb6e042250da9a00310a70be5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DerivativeTimesInput</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gga8a8d5eb6e042250da9a00310a70be5c1aac1fa1150e10ffdeacd28f5228a7842d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InputTimesDerivative</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gga8a8d5eb6e042250da9a00310a70be5c1a360ce69190b39422d1ec92bbac754b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saturate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab22d4bd6671adae9b1bf18fee7352617</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationOut_t configuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saturate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abd2d65b52cf46a4fe0f184d3fd1d1ed7</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationOut_t configuration, ArrayXb &amp;saturation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0b1da5beeaa46163e6ea321b0cbb851e</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t configuration, vectorIn_t velocity, ConfigurationOut_t result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a865fc43a0997d436e75dc36f8120bd94</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q0, ConfigurationIn_t q1, const value_type &amp;u, ConfigurationOut_t result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af8919bdb93c82a1ce4a224df10d5f0ee</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q1, ConfigurationIn_t q2, vectorOut_t result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isApprox</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae0208a4be9d1d4cfc28491ec807ed43c</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q1, ConfigurationIn_t q2, value_type eps)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>distance</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abf513e72cfd566ca8be6b5799406d2a8</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q1, ConfigurationIn_t q2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6f84986836e0be19212fd54b6d5bab27</anchor>
      <arglist>(const DevicePtr_t &amp;robot, Configuration_t &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a30b3d3de83130e19f2214b83a575e38b</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationOut_t q)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a3afa113716373036e2f219147875b7b9</anchor>
      <arglist>(const DevicePtr_t &amp;robot, ConfigurationIn_t q, const value_type &amp;eps)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>displayConfig</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8a13cf488e2899641127b118e73b9f0d</anchor>
      <arglist>(ConfigurationIn_t q, int precision=20)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>display</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a868c7e51b15278d6cf6ffe41128afb57</anchor>
      <arglist>(std::ostream &amp;os, const SE3 &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a60d80d65b074caa66597342b43dc547e</anchor>
      <arglist>(std::ostream &amp;os, const hpp::pinocchio::Device &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac50b48c3dee721428ce5e129d77b7e85</anchor>
      <arglist>(std::ostream &amp;os, const Frame &amp;frame)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab56a452492902f71cc8f46a636e6756f</anchor>
      <arglist>(Body)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aeef9505c1be96390e43320d54cdab964</anchor>
      <arglist>(CollisionObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac1750214f2b3eab427f9ed8e09c03b14</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abc611d88cb0dc0f38486e7775737149f</anchor>
      <arglist>(HumanoidRobot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a94a6544290a43d2e835cf339f7b19891</anchor>
      <arglist>(Joint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae26b75d26ec9dcba169f362f9aae410f</anchor>
      <arglist>(JointConfiguration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a6b1375325e661d9a06b81493ae5e66b5</anchor>
      <arglist>(Gripper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a278ab501ed7a7cfae1359394810387df</anchor>
      <arglist>(CenterOfMassComputation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae89f05ac47d14e1d43f069288df18766</anchor>
      <arglist>(LiegroupSpace)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a43156102f5d02d460fe8e6bf4c6ebea1</anchor>
      <arglist>(std::ostream &amp;os, const Gripper &amp;gripper)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a56bfe0b8a6f7ce4a97671eb9a2e2dfa1</anchor>
      <arglist>(std::ostream &amp;os, const Joint &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>LiegroupElement</type>
      <name>operator+</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga6a1f6c48efb8464c8fb1dafda68c2247</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type &gt; &amp;e, vectorIn_t v)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>operator-</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga051ed65b357445e75e574e195e5171ed</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type1 &gt; &amp;e1, const LiegroupElementConstBase&lt; vector_type2 &gt; &amp;e2)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>log</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aeb6537f6f79a9926b6dc9f112677069b</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type &gt; &amp;lge)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aab80ff04ad9750360aedca7dd34720d3</anchor>
      <arglist>(std::ostream &amp;os, const LiegroupElementConstBase&lt; vector_type &gt; &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga67ff3e9330883af5e57033c527b47e5a</anchor>
      <arglist>(std::ostream &amp;os, const LiegroupSpace &amp;space)</arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>humanoidSimple</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0a66ca33384ceddc77bc8b5d38a06668</anchor>
      <arglist>(const std::string &amp;name=&quot;humanoidSimple&quot;, bool usingFF=true, Computation_t compFlags=(Computation_t)(JOINT_POSITION|JACOBIAN))</arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>humanoidSimple</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9192101bf3ef336d278074160e8180b1</anchor>
      <arglist>(const std::string &amp;name=&quot;humanoidSimple&quot;, Computation_t compFlags=(Computation_t)(JOINT_POSITION|JACOBIAN))</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::pinocchio::liegroup</name>
    <filename>a00117.html</filename>
    <class kind="struct">hpp::pinocchio::liegroup::CartesianProductOperation</class>
    <class kind="struct">hpp::pinocchio::liegroup::SpecialEuclideanOperation</class>
    <class kind="struct">hpp::pinocchio::liegroup::SpecialOrthogonalOperation</class>
    <class kind="struct">hpp::pinocchio::liegroup::VectorSpaceOperation</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::pinocchio::unittest</name>
    <filename>a00118.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TestDeviceType</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HumanoidRomeo</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a73733072821fb6b601715d9c8d140c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HumanoidSimple</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a4f6de05c5e5477d4f2940d27062c6dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CarLike</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a87fa1e9bf20142ad9dba1e9e9acdb687</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ManipulatorArm2</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>acf16d535f12764f4e652daf908c2a325a23cf281184f6e2736508a09682a9606d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>makeDevice</name>
      <anchorfile>a00118.html</anchorfile>
      <anchor>a44a35645fec9fcab7566f55f5f32b1a9</anchor>
      <arglist>(TestDeviceType type, const std::string &amp;prefix=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::pinocchio::urdf</name>
    <filename>a00119.html</filename>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a3ab3df304a2e43ceb68a3a990e1d2716</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;modelName, const std::string &amp;urdfSuffix, const std::string &amp;srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>aeda0b327aab539d8c557801e24ce0bc2</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;modelName, const std::string &amp;urdfSuffix, const std::string &amp;srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupHumanoidRobot</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a6ffe676b7974022964c7b4bb650b8bbd</anchor>
      <arglist>(const HumanoidRobotPtr_t &amp;robot, const std::string &amp;prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadUrdfModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a12c9a8c0c1680393b7bb81d8e55bd724</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadUrdfModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a76a15a5422a72851b47782fdeb46f43a</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;rootJointType, const std::string &amp;package, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadModel</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>a95b527edb96e8660c044f69c34887fbd</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootType, const std::string &amp;urdfPath, const std::string &amp;srdfPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadModelFromString</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>aa8a54fecc1f41550e6fe822edbb35d24</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const FrameIndex &amp;baseFrame, const std::string &amp;prefix, const std::string &amp;rootType, const std::string &amp;urdfString, const std::string &amp;srdfString)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio</name>
    <filename>a00120.html</filename>
    <class kind="struct">pinocchio::traits&lt; hpp::pinocchio::liegroup::VectorSpaceOperation&lt; Size, rot &gt; &gt;</class>
    <member kind="enumeration">
      <type></type>
      <name>ArgumentPosition</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1880b3dbfccb9c6eccd24e7733bd1f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FrameType</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad495a9f61af7fff07d7e97979d1ab854</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModelFileExtensionType</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af65daba1b2dff1c39a106d9bab4f29e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>aba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a17af40dd678c172346b88297db676c27</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>aba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aafc05b31fb1ff62fa45d7a7ad7b9b83a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const container::aligned_vector&lt; ForceDerived &gt; &amp;fext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8083f70afd847e1a2b54eb125a93d5e8</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>alphaSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae9d1c38b8973397751e56ff1994cf366</anchor>
      <arglist>(const Scalar alpha, const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Vector3::Scalar, 3, 3, Vector3::Options &gt;</type>
      <name>alphaSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a987875f2366ba7e03745723c88801004</anchor>
      <arglist>(const Scalar alpha, const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>D1::Scalar PINOCCHIO_DEPRECATED</type>
      <name>angleBetweenQuaternions</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2d2b7a259f84f25827d4dbfd04af568c</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D1 &gt; &amp;q1, const Eigen::QuaternionBase&lt; D2 &gt; &amp;q2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendGeometryModel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a32df450a53e4520cdb93c2e84bba0417</anchor>
      <arglist>(GeometryModel &amp;geomModel1, const GeometryModel &amp;geomModel2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendModel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9f0ad32c7f30d577c1a42bfaff71647d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelA, const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelB, FrameIndex frameInModelA, const SE3Tpl&lt; Scalar, Options &gt; &amp;aMb, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendModel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac30b13d4acf283ad8074776a2ea58682</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelA, const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelB, const GeometryModel &amp;geomModelA, const GeometryModel &amp;geomModelB, FrameIndex frameInModelA, const SE3Tpl&lt; Scalar, Options &gt; &amp;aMb, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geomModel)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>axisLabel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7a07b7bf9a1f9f0d7d95ecc9b000d7a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>bias</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>acac31723e196ccf4814db0e3c1a68598</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_aba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9868f32113862bda0c539eb5256ceed4</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata, const Eigen::MatrixBase&lt; Matrix6Type &gt; &amp;I, const bool update_I)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_first_order</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5cb87132f96527e3e3b29c45c1f1700c</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_zero_order</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9b71f4f705d538260a8744042859e63c</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>CastType&lt; NewScalar, JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;::type</type>
      <name>cast_joint</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4c840eac08ce796d40c2dc8cec34c291</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>ccrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad37c08502defc1f71f385c82f701d515</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a429f890fcf3471e5432ba9cf55cd5666</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4f458b0b39322756ce0d7bc77d9d493c</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0874e4cd0ff771cf5744be1d6f8ebb92</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa8efddfef4810525cb1b31d54a1b0672</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const int LEVEL, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2848bb63c4109cc4d7c5320418ab04c8</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkData</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a412c3880992c864f0223ba280ddf737b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ModelFileExtensionType</type>
      <name>checkModelFileExtension</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a74293805b9a52087c9fa447a3ba1050e</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkVersionAtLeast</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a99ce124d6accd23b7901c9b4a9edd882</anchor>
      <arglist>(unsigned int major_version, unsigned int minor_version, unsigned int patch_version)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a25641e8813ff7f8c34adf605f588b16f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;aba_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;aba_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;aba_partial_dtau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4ea4283dc0fb0d2c738bf1bde0e7e3a0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;aba_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;aba_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;aba_partial_dtau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a253867c52af4821c12e210c63727a43b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>adb5d4f92fe6de1c5660a525e15567952</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeAllTerms</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a98b0f68f6b24d6c21fb4cfce7dc47dbc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBodyRadius</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad852db1f65a4cdf9e09e27aa54427355</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const GeometryModel &amp;geomModel, GeometryData &amp;geomData)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Force &amp;</type>
      <name>computeCentroidalDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae965665a54e52dd664caf6e0d5c9ce05</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Force &amp;</type>
      <name>computeCentroidalDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab9b243f38fa25f74e314d4d7d37d2f3a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCentroidalDynamicsDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a344d8d1d4380d93f228a880b0c3361fc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const Eigen::MatrixBase&lt; Matrix6xLike0 &gt; &amp;dh_dq, const Eigen::MatrixBase&lt; Matrix6xLike1 &gt; &amp;dhdot_dq, const Eigen::MatrixBase&lt; Matrix6xLike2 &gt; &amp;dhdot_dv, const Eigen::MatrixBase&lt; Matrix6xLike3 &gt; &amp;dhdot_da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeCollision</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa6d876b9335d68cae0c4c50996a800e0</anchor>
      <arglist>(const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const PairIndex &amp;pairId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeCollisions</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a75b1b19407b65aef0955d837fbd9cbb2</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool stopAtFirstCollision=false)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>computeCoriolisMatrix</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9d218e485952707a1103003d8fbc2622</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>fcl::DistanceResult &amp;</type>
      <name>computeDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>adcd79d0f4f2b5084215a2132bdb2c2bc</anchor>
      <arglist>(const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const PairIndex &amp;pairId)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED std::size_t</type>
      <name>computeDistances</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa68a09adb3aea19efba8b266faa8f718</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::VectorXd &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>computeDistances</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae98eb1df0dd542bf8f7e261c2d1d9153</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>computeDistances</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a20e95e39016849e98f95c8a2925b3535</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematicsDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a872e7af22fc1e5898fb44dcda16689d0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>computeGeneralizedGravity</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abba9acf2f9cc47873eb164e75171c25b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeGeneralizedGravityDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7221574a13491b62778144644141ad23</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; ReturnMatrixType &gt; &amp;gravity_partial_dq)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>computeJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1c7e37909d8e911053aa0cc58b880fc7</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>computeJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abced80fac62adc6c5293ce31d783dc38</anchor>
      <arglist>(const Model &amp;model, Data &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>computeJacobiansTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a18d587104bfb1c925b55836af2adcc45</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q, const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>computeJointJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa94eb0eb9e51486f618e49617a724d9f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>computeJointJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a020188c32122c35fa5f08b0b92a22d6d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>computeJointJacobiansTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3684c6d8fb1a0601ed6e16af89ca6a5f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::RowMatrixXs &amp;</type>
      <name>computeMinverse</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>afed6d372039ce2492aa6e273ac625ba0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2f52a3ae71206c9d57b2ddcd72cdc680</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;rnea_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;rnea_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;rnea_partial_da)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac3ba12320d0ea93687fb9d132fc9c76a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;rnea_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;rnea_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;rnea_partial_da)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a792a17cdc02c7ba97fe065a3d8310f20</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad893875b3f07842bae2f3a0fb2cabe78</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSubtreeMasses</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0c09ef7830d6d96012559d7487f7759b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>computeTotalMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1c0edadfd90f1137df262a38d43f1011</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>computeTotalMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a71187ab703325a08e05f0d5126d435ce</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintTpl&lt; Eigen::Dynamic, Scalar, Options &gt;</type>
      <name>constraint_xd</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6d0eb68a7e6602fc12cfe0e9096c4a76</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a73027b3c9603c2abd1e5d99857dea8b7</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;origin, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;dest, int LEVEL)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>crba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad3da115c312299adc15978286aa82b10</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>crbaMinimal</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a36288ce8586bb7cb0cc5a83eefe04646</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt;</type>
      <name>createData</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1974ab87499a774521fd59eaea94bff6</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cross</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af0e2adf0128417608c54e341671e9691</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3xIn &gt; &amp;Min, const Eigen::MatrixBase&lt; Matrix3xOut &gt; &amp;Mout)</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x</type>
      <name>cross</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aae6f4f3e9567553f2e1cd49f0ea22276</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3x &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>dccrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7003a73837453cc1c4adf3906e0b1aaf</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool PINOCCHIO_DEPRECATED</type>
      <name>defineSameRotation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad2bb6c6ed94e3ad628b568e70fc4b0d8</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D1 &gt; &amp;q1, const Eigen::QuaternionBase&lt; D2 &gt; &amp;q2, const typename D1::RealScalar &amp;prec=Eigen::NumTraits&lt; typename D1::Scalar &gt;::dummy_precision())</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic, Options &gt;</type>
      <name>dinv_inertia</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab8bc8b2efd1ea5aa962a97b07735823b</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emptyForwardPass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aec46c0e7add16e2918b545f38e82b1d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Vector3Like::Scalar, 3, 3, Vector3Like::Options &gt;</type>
      <name>exp3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae39f3d8713c3220e04ff41a6b94e859b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; typename MotionDerived::Scalar, typename MotionDerived::Vector3::Options &gt;</type>
      <name>exp6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae6181e1bb7dabb391f6b5da571cf3906</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;nu)</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; typename Vector6Like::Scalar, Vector6Like::Options &gt;</type>
      <name>exp6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a327ad93c5db523ea7e3f61d66c39fe97</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector6Like &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extractPathFromEnvVar</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5f066ca8d343e1c0cfe53a868e6440e3</anchor>
      <arglist>(const std::string &amp;env_var_name, const std::string &amp;delimiter=&quot;:&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af39544a6069ddbb3510eb8cf6ceca33f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a56c265ac1aab2ab1f66f11438e659ac8</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>void PINOCCHIO_DEPRECATED</type>
      <name>firstOrderNormalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a66b074b09cb8c63e43cd0d7b7b2c4a06</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>forwardDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8b7d42cb4e87d9de4ae108919fa3d2cc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const Eigen::MatrixBase&lt; ConstraintMatrixType &gt; &amp;J, const Eigen::MatrixBase&lt; DriftVectorType &gt; &amp;gamma, const Scalar inv_damping=0., const bool updateKinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a97be7e9cd332a591b1431e30bab2c51e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5c8fc7279a9bccdcad61964d8468b49d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a601f17282020e4bb7d3e6f72b934fbe4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a43c6840a09e0308310ae7cdef7152971</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const FrameIndex frameId, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>framesForwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a89903169c76d3c55bacaa2479bd39f76</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCenterOfMassVelocityDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af54c11ef0377ff24c383e0c8e8df1cb1</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Matrix3xOut &gt; &amp;vcom_partial_dq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCentroidalDynamicsDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a42b251834df6908dbb7cc2f3d921b7fc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Matrix6xLike1 &gt; &amp;dh_dq, const Eigen::MatrixBase&lt; Matrix6xLike1 &gt; &amp;dhdot_dq, const Eigen::MatrixBase&lt; Matrix6xLike2 &gt; &amp;dhdot_dv, const Eigen::MatrixBase&lt; Matrix6xLike3 &gt; &amp;dhdot_da)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>getComFromCrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a865859a11422761cb1344bb9e11b35df</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>getFrameAcceleration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a06640acf7c69ffc92650e4313bded3ff</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameAcceleration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aef7023abad1eb07e3b952eb58a1b1a1e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const MotionDense&lt; MotionLike &gt; &amp;frame_a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFrameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7f7b9b75e27037e119bf53b51c2cbf47</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xLike &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af5947bb371741b04c5da1f79156edf34</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::FrameIndex frame_id, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab4c178129aa70ebfc4a9715ada2bdb96</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const Eigen::MatrixBase&lt; Matrix6xLike &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFrameJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a11687f5ab65ead25740dbe17b0b96fb6</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xLike &gt; &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a903f3f58d819923d173008c23e0654a1</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::FrameIndex frameId, Data::Matrix6x &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>getFrameVelocity</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab6978319c102621e12db0e3aa465ae13</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameVelocity</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a73d25ece6b11333365bb8ff177911a47</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const MotionDense&lt; MotionLike &gt; &amp;frame_v)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad22964c42e4ee169dd7489388e5d4cf3</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>getJacobianComFromCrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac52ba2174f0159848030b9607a1253af</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aaadf4069c928394bda6102b96808f81e</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointAccelerationDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1910388040b8ff698fb59e1eac6f4bc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Model::JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xOut1 &gt; &amp;v_partial_dq, const Eigen::MatrixBase&lt; Matrix6xOut2 &gt; &amp;a_partial_dq, const Eigen::MatrixBase&lt; Matrix6xOut3 &gt; &amp;a_partial_dv, const Eigen::MatrixBase&lt; Matrix6xOut4 &gt; &amp;a_partial_da)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abadfcd21d13fa17865a189e4b47acca9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a02f079abebe1d5eb28271d3b674fbbb8</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a50c89f26935985f6fc9c96908bb855d0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJointJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a453a34c1ccaf873deb2cc0db202a2b01</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointVelocityDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac19cb861bb6d753b7ec828c9237db4f7</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Model::JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xOut1 &gt; &amp;v_partial_dq, const Eigen::MatrixBase&lt; Matrix6xOut2 &gt; &amp;v_partial_dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getKKTContactDynamicMatrixInverse</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6ebc0769bbc5aa031a70dedd631b3764</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConstraintMatrixType &gt; &amp;J, const Eigen::MatrixBase&lt; KKTMatrixType &gt; &amp;MJtJ_inv)</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>id</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3f1eb0ed5d11c826992c8ff058bf1dcf</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>idx_q</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad71bd4f97bc5cf78f8fecc2b37682ca2</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>idx_v</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7c675de46e040b485dd0d90e0d5e6379</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>impulseDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa39328a4233a03fcb5c5fe4a1c347416</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v_before, const Eigen::MatrixBase&lt; ConstraintMatrixType &gt; &amp;J, const Scalar r_coeff=0, const bool updateKinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a287574ae016b5828cd9ce36d3824770e</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg, const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>jacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aaedd3b476eb8b400c95484260c3a4cd7</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q, const Model::JointIndex jointId, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2c674c3969b30947e8f4128214d45453</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool computeSubtreeComs, const bool updateKinematics)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa68008ef776e6959af9884eff4514633</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5a9107628d54b00bb72c021cb44dc89d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jexp3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aac08f53125057572ac5838ec88164963</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;r, const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;Jexp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jexp6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aafe310d093976e3a3be626848c34bfda</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;nu, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;Jexp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jlog6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab17df97cd3cbec6801112c074a8b5377</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;M, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;Jlog)</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; Scalar, Options &gt;</type>
      <name>joint_transform</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aefa0ea0a3af3e75e551146593ed25058</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad90c83a5f87f766625218793316cbe40</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const JointIndex jointId, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>jointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a663e44bbdbc0c2c3aec1524cb4f162de</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q, const Model::JointIndex jointId)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>kineticEnergy</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad623f1f13203331dffb22f4f51544635</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const bool update_kinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Matrix3Like::Scalar, 3, 1, Matrix3Like::Options &gt;</type>
      <name>log3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a492b8cd5fc732ad7f17b1bba731f64e6</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;R, typename Matrix3Like::Scalar &amp;theta)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Matrix3Like::Scalar, 3, 1, Matrix3Like::Options &gt;</type>
      <name>log3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8e47a4b66d2ef7557da6100a59810a11</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>log6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0b9165aaf6d0b46d9aa2b09d96f83eaf</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; typename Matrix4Like::Scalar, Eigen::internal::traits&lt; Matrix4Like &gt;::Options &gt;</type>
      <name>log6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4cc4429a3d2190626fc6a3a5b383d23e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix4Like &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>AlgorithmCheckerList&lt; ParentChecker, CRBAChecker, ABAChecker &gt;</type>
      <name>makeDefaultCheckerList</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af526e1ce1a83745dddbe50b0747d0c8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>motion</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0cae76ed328e3dd51c6a0facc18a3373</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab233aae353b5732efdb8208e99c0ee32</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename LieGroupCollection::Scalar, Eigen::Dynamic, 1, LieGroupCollection::Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aaecd045e49ac75aeffcf7df22b156274</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>nonLinearEffects</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1fc4c85c53a6d7285863b73c56c955c</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nq</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a11034b5c7479bf0a48edb625df818e13</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nq</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aab744aa4e8bab6a7567d40d6d3a968bf</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nv</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0b8dbab230f00794ed4b88f5a4602850</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nv</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9f22c4db0ab7093c7f8276a140320d88</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>traits&lt; F1 &gt;::ForcePlain</type>
      <name>operator*</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>adf68571a3bd5d9815bb06759e70d9994</anchor>
      <arglist>(const typename traits&lt; F1 &gt;::Scalar alpha, const ForceDense&lt; F1 &gt; &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>traits&lt; M1 &gt;::MotionPlain</type>
      <name>operator^</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a367b548b411d8bf0199892b46ddd5d93</anchor>
      <arglist>(const MotionDense&lt; M1 &gt; &amp;v1, const MotionDense&lt; M2 &gt; &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>const Scalar</type>
      <name>PI</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8d70a2059ad808b77877e920e9b181bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>potentialEnergy</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac4d15224307645861962b0c4a7be8813</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool update_kinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>printVersion</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a359eb29491fe39a5e51e9a51d84c7f9f</anchor>
      <arglist>(const std::string &amp;delimiter=&quot;.&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>randomStringGenerator</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1b50c7ed93765739fe33efb660ff4793</anchor>
      <arglist>(const int len)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>retrieveResourcePath</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ace99575de78dca42b0b7fcc916454c8f</anchor>
      <arglist>(const std::string &amp;string, const std::vector&lt; std::string &gt; &amp;package_dirs)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>rnea</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a33f3f128c9cf62407691acaedd28e68d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>rnea</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a26d94ea6486d0eed1934b94767124a01</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const container::aligned_vector&lt; ForceDerived &gt; &amp;fext)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>rosPaths</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6a0530030c6aa042443e290024aaba91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndexes</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a631864068e479634131c54ca2c5616cd</anchor>
      <arglist>(JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointIndex id, int q, int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortname</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad6699ebd8ac20951fc7f6614b50ff423</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SINCOS</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6d2e22bd16d5dc9bf54dd389cc429384</anchor>
      <arglist>(const Scalar &amp;a, Scalar *sa, Scalar *ca)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>afff79033b11ec2b30cba3016080747f7</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename D::Scalar, 3, 3, D::Options &gt;</type>
      <name>skew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4fc2569a0ca4fa4f5daa6434411a93b8</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skewSquare</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0548b1222261b39c25fc82ba423d8e60</anchor>
      <arglist>(const Eigen::MatrixBase&lt; V1 &gt; &amp;u, const Eigen::MatrixBase&lt; V2 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename V1::Scalar, 3, 3, V1::Options &gt;</type>
      <name>skewSquare</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>acf305d0879ab1289a781454534cd4292</anchor>
      <arglist>(const Eigen::MatrixBase&lt; V1 &gt; &amp;u, const Eigen::MatrixBase&lt; V2 &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, 6, Eigen::Dynamic, Options &gt;</type>
      <name>u_inertia</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a834c8ccc3358a4b1c1fdcd7a8667cde0</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, 6, Eigen::Dynamic, Options &gt;</type>
      <name>udinv_inertia</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a91bb349a2440679ddb9a5bb14e1274f2</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void PINOCCHIO_DEPRECATED</type>
      <name>uniformRandom</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7ff7c795c2c77085f9ac47ddf6b3c71b</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>afbd162eb86b7643916c527756c2863a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M, const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Matrix3::Scalar, 3, 1, Matrix3::Options &gt;</type>
      <name>unSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a59441c3f837a4bc3f39deaa66bc7ad82</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::SE3 &amp;</type>
      <name>updateFramePlacement</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0b5e76c08cdf92d6eeb5bfe3d8e439bc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFramePlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a48c4aeb9f48c48a5965f44a3e18c82b2</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a57e816ce013e3746c7bfb756e9206c5e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>acf09df6afb8750765f27bf1d0d25dfdf</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGlobalPlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad57a36f3b7587d1615358e34f66bdbee</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac6d83ab51df727a51d3f6caeaa0ff5d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9cfaef3e7c0afbd5a37e3eb69dce9bd0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2141d11fe93ac3cec942022202c3f878</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;dvout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a718079ad7afb1730ac3ac8d1b58c1970</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8aa12c4444aa4425160cd60218a112d3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1ea82f003a9814a0b1e127d42d32d73</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a69a8ff2baaf83858c7047d61c0bbc8a4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianMatrixType &gt; &amp;J, const ArgumentPosition arg)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistanceSum</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7eaa9b06d6b403965e1ef356e615fd01</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa902ab2bd9f27aed5afcb263a8f76d0e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abe8106929836bb8bb3337f9033dfa91b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af93664936d67b9f00ea0045ae92d6380</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q1, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q2, const Scalar &amp;prec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8c0eedf0b4f303db4c9dc7fb794ac891</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVector &gt; &amp;q, const Eigen::MatrixBase&lt; JacobianMatrix &gt; &amp;jacobian)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorType</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a97b83733a4f2430462868593b0597586</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>interpolate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a400f1fdfd043b0df51471771123cbd95</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Scalar &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8800f19ff99b1951f5eab32340130c93</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aff2aaa74a1197cd1c566ad1050e5e843</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad3dcb99a1a65e940bb4837bead10c6df</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1cfe8f3d02bd8eeb9db87ea9daca0919</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1, Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0030d83dd0705ec95c4ebad6bb0629d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>liegroup</name>
    <title>Lie group</title>
    <filename>a00122.html</filename>
    <class kind="class">hpp::pinocchio::LiegroupElementConstBase</class>
    <class kind="class">hpp::pinocchio::LiegroupElementBase</class>
    <class kind="class">hpp::pinocchio::LiegroupSpace</class>
    <member kind="typedef">
      <type>ABoostVariant</type>
      <name>LiegroupType</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gafada9054c604aff6bd17ced21227db73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DerivativeProduct</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga8a8d5eb6e042250da9a00310a70be5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DerivativeTimesInput</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gga8a8d5eb6e042250da9a00310a70be5c1aac1fa1150e10ffdeacd28f5228a7842d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InputTimesDerivative</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>gga8a8d5eb6e042250da9a00310a70be5c1a360ce69190b39422d1ec92bbac754b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>LiegroupElement</type>
      <name>operator+</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga6a1f6c48efb8464c8fb1dafda68c2247</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type &gt; &amp;e, vectorIn_t v)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>operator-</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga051ed65b357445e75e574e195e5171ed</anchor>
      <arglist>(const LiegroupElementConstBase&lt; vector_type1 &gt; &amp;e1, const LiegroupElementConstBase&lt; vector_type2 &gt; &amp;e2)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga67ff3e9330883af5e57033c527b47e5a</anchor>
      <arglist>(std::ostream &amp;os, const LiegroupSpace &amp;space)</arglist>
    </member>
    <member kind="function">
      <type>hpp::pinocchio::LiegroupSpacePtr_t</type>
      <name>operator*</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga49dc3c7a215d4c2b94170c618b1b405a</anchor>
      <arglist>(const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp1, const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp2)</arglist>
    </member>
    <member kind="function">
      <type>hpp::pinocchio::LiegroupSpacePtr_t</type>
      <name>operator^</name>
      <anchorfile>a00122.html</anchorfile>
      <anchor>ga8a52399795d8e83ecff28345fe4785c7</anchor>
      <arglist>(const hpp::pinocchio::LiegroupSpaceConstPtr_t &amp;sp, hpp::pinocchio::size_type n)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>to_output_stream</name>
    <title>Printing to output stream</title>
    <filename>a00123.html</filename>
    <class kind="struct">hpp::prettyPrint</class>
    <member kind="enumvalue">
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>setpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaf0a4b5cf356013ff921516719a6b9cf0</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>unsetpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9ebdb5b7e4ea691aa1cc921cacd64b28</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, PrettyOutput &gt;</type>
      <name>pretty_print</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaa29fa2d7b51bc30954dd1e77c1163eca</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, CondensedOutput &gt;</type>
      <name>condensed</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga88b06fbd68a50ab03ddc565e58e9817e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, OneLineOutput &gt;</type>
      <name>one_line</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9a8cb47183de8943e9e57cb92659d5aa</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">hpp_pinocchio_intro</docanchor>
    <docanchor file="index" title="What is Pinocchio?">OverviewIntro</docanchor>
    <docanchor file="index" title="How to install Pinocchio?">OverviewInstall</docanchor>
    <docanchor file="index" title="Simplest example with compilation command">OverviewSimple</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewSimpleCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewSimpleExplain</docanchor>
    <docanchor file="index" title="More complex example with C++ and Python">OverviewComplex</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewComplexCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewComplexExplain</docanchor>
    <docanchor file="index" title="About Python wrappings">OverviewPython</docanchor>
    <docanchor file="index" title="How to cite Pinocchio">OverviewCite</docanchor>
    <docanchor file="index" title="Where to go from here?">OverviewConclu</docanchor>
  </compound>
</tagfile>
