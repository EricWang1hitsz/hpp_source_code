<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="struct">
    <name>pinocchio::ABAChecker</name>
    <filename>structpinocchio_1_1ABAChecker.html</filename>
    <base>AlgorithmCheckerBase&lt; ABAChecker &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::AlgorithmCheckerBase</name>
    <filename>structpinocchio_1_1AlgorithmCheckerBase.html</filename>
    <templarg>AlgorithmCheckerDerived</templarg>
  </compound>
  <compound kind="class">
    <name>AlgorithmCheckerBase&lt; ABAChecker &gt;</name>
    <filename>structpinocchio_1_1AlgorithmCheckerBase.html</filename>
  </compound>
  <compound kind="class">
    <name>AlgorithmCheckerBase&lt; AlgorithmCheckerList&lt; BOOST_PP_ENUM_PARAMS(PINOCCHIO_ALGO_CHECKER_LIST_MAX_LIST_SIZE, D)&gt; &gt;</name>
    <filename>structpinocchio_1_1AlgorithmCheckerBase.html</filename>
  </compound>
  <compound kind="class">
    <name>AlgorithmCheckerBase&lt; CRBAChecker &gt;</name>
    <filename>structpinocchio_1_1AlgorithmCheckerBase.html</filename>
  </compound>
  <compound kind="class">
    <name>AlgorithmCheckerBase&lt; ParentChecker &gt;</name>
    <filename>structpinocchio_1_1AlgorithmCheckerBase.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::AlgorithmCheckerList</name>
    <filename>structpinocchio_1_1AlgorithmCheckerList.html</filename>
    <templarg></templarg>
    <base>AlgorithmCheckerBase&lt; AlgorithmCheckerList&lt; BOOST_PP_ENUM_PARAMS(PINOCCHIO_ALGO_CHECKER_LIST_MAX_LIST_SIZE, D)&gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::container::aligned_vector</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
    <templarg>T</templarg>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; Frame &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; GeometryObject &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; InertiaTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; JointData &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; JointDataVariant &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; JointModel &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; JointModelVariant &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; Matrix6x &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; pinocchio::ForceTpl &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; pinocchio::InertiaTpl &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; pinocchio::MotionTpl &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; pinocchio::SE3Tpl &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; Transformation_t &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; typename pinocchio::InertiaTpl::Matrix6 &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="class">
    <name>aligned_vector&lt; Vector3 &gt;</name>
    <filename>structpinocchio_1_1container_1_1aligned__vector.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::Symmetric3Tpl::AlphaSkewSquare</name>
    <filename>structpinocchio_1_1Symmetric3Tpl_1_1AlphaSkewSquare.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::helper::argument_type</name>
    <filename>structpinocchio_1_1helper_1_1argument__type.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::helper::argument_type&lt; T(U)&gt;</name>
    <filename>structpinocchio_1_1helper_1_1argument__type_3_01T_07U_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::BiasZeroTpl</name>
    <filename>structpinocchio_1_1BiasZeroTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <base>MotionBase&lt; BiasZeroTpl&lt; Scalar, Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ForceSetTpl::Block</name>
    <filename>structpinocchio_1_1ForceSetTpl_1_1Block.html</filename>
    <member kind="function">
      <type>ForceSetTpl</type>
      <name>se3Action</name>
      <anchorfile>structpinocchio_1_1ForceSetTpl_1_1Block.html</anchorfile>
      <anchor>aaee700cc59d224e51f6c91b28b493dd1</anchor>
      <arglist>(const SE3 &amp;m) const </arglist>
    </member>
    <member kind="function">
      <type>ForceSetTpl</type>
      <name>se3ActionInverse</name>
      <anchorfile>structpinocchio_1_1ForceSetTpl_1_1Block.html</anchorfile>
      <anchor>a8337a3ca157fefe92908f4eb78f5b2f7</anchor>
      <arglist>(const SE3 &amp;m) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType::BlockReturn</name>
    <filename>structpinocchio_1_1SizeDepType_1_1BlockReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::BlockReturn</name>
    <filename>structpinocchio_1_1SizeDepType_3_01Eigen_1_1Dynamic_01_4_1_1BlockReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CartesianAxis</name>
    <filename>structpinocchio_1_1CartesianAxis.html</filename>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CartesianProductOperation</name>
    <filename>structpinocchio_1_1CartesianProductOperation.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>LieGroupBase&lt; CartesianProductOperation&lt; LieGroup1, LieGroup2 &gt; &gt;</base>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1CartesianProductOperation.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1CartesianProductOperation.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CartesianProductOperationVariant</name>
    <filename>structpinocchio_1_1CartesianProductOperationVariant.html</filename>
    <member kind="function">
      <type></type>
      <name>CartesianProductOperationVariant</name>
      <anchorfile>structpinocchio_1_1CartesianProductOperationVariant.html</anchorfile>
      <anchor>a09feee21465bb47ea0ec859df4b62f84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CartesianProductOperationVariant</name>
      <anchorfile>structpinocchio_1_1CartesianProductOperationVariant.html</anchorfile>
      <anchor>a100ba651599d3e514a4a8ae88f15fb15</anchor>
      <arglist>(const LieGroupVariant &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CartesianProductOperationVariant</name>
      <anchorfile>structpinocchio_1_1CartesianProductOperationVariant.html</anchorfile>
      <anchor>a4ef6b52ccaf16a967e33d30aaa3713f8</anchor>
      <arglist>(const LieGroupVariant &amp;lg1, const LieGroupVariant &amp;lg2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>append</name>
      <anchorfile>structpinocchio_1_1CartesianProductOperationVariant.html</anchorfile>
      <anchor>a15c437653ebc0b038fa559c2da23bbc2</anchor>
      <arglist>(const LieGroupVariant &amp;lg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CastType</name>
    <filename>structpinocchio_1_1CastType.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CastType&lt; NewScalar, JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1CastType_3_01NewScalar_00_01JointModelCompositeTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CastType&lt; NewScalar, JointModelPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1CastType_3_01NewScalar_00_01JointModelPrismaticTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CastType&lt; NewScalar, JointModelRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1CastType_3_01NewScalar_00_01JointModelRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CastType&lt; NewScalar, JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1CastType_3_01NewScalar_00_01JointModelRevoluteUnboundedTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CastType&lt; NewScalar, JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1CastType_3_01NewScalar_00_01JointModelTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenABA</name>
    <filename>structpinocchio_1_1CodeGenABA.html</filename>
    <templarg></templarg>
    <base>pinocchio::CodeGenBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenABA.html</anchorfile>
      <anchor>a38d34e953f11628fe2df8d45d27e4139</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenABADerivatives</name>
    <filename>structpinocchio_1_1CodeGenABADerivatives.html</filename>
    <templarg></templarg>
    <base>pinocchio::CodeGenBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenABADerivatives.html</anchorfile>
      <anchor>a38d34e953f11628fe2df8d45d27e4139</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenBase</name>
    <filename>structpinocchio_1_1CodeGenBase.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>a5df6a2b9afa23fff55e23f0a11ac0e3c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>Eigen::DenseIndex</type>
      <name>getInputDimension</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>a2adb204d398819005f52aaa4379480ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::DenseIndex</type>
      <name>getOutputDimension</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>a05ebfada076406c8d422ecd7564b07a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>build_forward</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>ae1c62eb304552745c4137ebb9f9ad117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>build_jacobian</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>a7c820c76d9f5bbc8b438edfd0ea11cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>function_name</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>a9de95b5ea6ad91cce90ee10a9053dbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>library_name</name>
      <anchorfile>structpinocchio_1_1CodeGenBase.html</anchorfile>
      <anchor>af3f15649b72030293ad0b1930c965e4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenCRBA</name>
    <filename>structpinocchio_1_1CodeGenCRBA.html</filename>
    <templarg></templarg>
    <base>pinocchio::CodeGenBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenCRBA.html</anchorfile>
      <anchor>a38d34e953f11628fe2df8d45d27e4139</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenMinv</name>
    <filename>structpinocchio_1_1CodeGenMinv.html</filename>
    <templarg></templarg>
    <base>pinocchio::CodeGenBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenMinv.html</anchorfile>
      <anchor>a38d34e953f11628fe2df8d45d27e4139</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenRNEA</name>
    <filename>structpinocchio_1_1CodeGenRNEA.html</filename>
    <templarg></templarg>
    <base>pinocchio::CodeGenBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenRNEA.html</anchorfile>
      <anchor>a38d34e953f11628fe2df8d45d27e4139</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CodeGenRNEADerivatives</name>
    <filename>structpinocchio_1_1CodeGenRNEADerivatives.html</filename>
    <templarg></templarg>
    <base>pinocchio::CodeGenBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildMap</name>
      <anchorfile>structpinocchio_1_1CodeGenRNEADerivatives.html</anchorfile>
      <anchor>a38d34e953f11628fe2df8d45d27e4139</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CollisionPair</name>
    <filename>structpinocchio_1_1CollisionPair.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType::ColsReturn</name>
    <filename>structpinocchio_1_1SizeDepType_1_1ColsReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::ColsReturn</name>
    <filename>structpinocchio_1_1SizeDepType_3_01Eigen_1_1Dynamic_01_4_1_1ColsReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::math::constants::detail::constant_pi&lt; CppAD::AD&lt; Scalar &gt; &gt;</name>
    <filename>structboost_1_1math_1_1constants_1_1detail_1_1constant__pi_3_01CppAD_1_1AD_3_01Scalar_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>pinocchio::ConstraintBase</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
    <templarg>Derived</templarg>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintIdentityTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintPrismatic&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintPrismaticUnaligned&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintTpl&lt; _Dim, _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstraintBase&lt; ConstraintTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ConstraintBase.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintIdentityTpl</name>
    <filename>structpinocchio_1_1ConstraintIdentityTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintIdentityTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintIdentityTpl::TransposeConst</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintPlanarTpl</name>
    <filename>structpinocchio_1_1ConstraintPlanarTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintPlanarTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintPlanarTpl::ConstraintTranspose</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintPrismatic</name>
    <filename>structpinocchio_1_1ConstraintPrismatic.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>ConstraintBase&lt; ConstraintPrismatic&lt; _Scalar, _Options, axis &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintPrismatic::TransposeConst</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintPrismaticUnaligned</name>
    <filename>structpinocchio_1_1ConstraintPrismaticUnaligned.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintPrismaticUnaligned&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintPrismaticUnaligned::TransposeConst</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintRevoluteTpl</name>
    <filename>structpinocchio_1_1ConstraintRevoluteTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>ConstraintBase&lt; ConstraintRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintRevoluteTpl::TransposeConst</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintRevoluteUnalignedTpl</name>
    <filename>structpinocchio_1_1ConstraintRevoluteUnalignedTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintRevoluteUnalignedTpl::TransposeConst</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintSphericalTpl</name>
    <filename>structpinocchio_1_1ConstraintSphericalTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintSphericalTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintSphericalTpl::TransposeConst</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintSphericalZYXTpl</name>
    <filename>structpinocchio_1_1ConstraintSphericalZYXTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintSphericalZYXTpl::ConstraintTranspose</class>
  </compound>
  <compound kind="class">
    <name>pinocchio::ConstraintTpl</name>
    <filename>classpinocchio_1_1ConstraintTpl.html</filename>
    <templarg>_Dim</templarg>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintTpl&lt; _Dim, _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintTpl::Transpose</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintTranslationTpl</name>
    <filename>structpinocchio_1_1ConstraintTranslationTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>ConstraintBase&lt; ConstraintTranslationTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <class kind="struct">pinocchio::ConstraintTranslationTpl::ConstraintTranspose</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintSphericalZYXTpl::ConstraintTranspose</name>
    <filename>structpinocchio_1_1ConstraintSphericalZYXTpl_1_1ConstraintTranspose.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintTranslationTpl::ConstraintTranspose</name>
    <filename>structpinocchio_1_1ConstraintTranslationTpl_1_1ConstraintTranspose.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintPlanarTpl::ConstraintTranspose</name>
    <filename>structpinocchio_1_1ConstraintPlanarTpl_1_1ConstraintTranspose.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::CRBAChecker</name>
    <filename>structpinocchio_1_1CRBAChecker.html</filename>
    <base>AlgorithmCheckerBase&lt; CRBAChecker &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::DataTpl</name>
    <filename>structpinocchio_1_1DataTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>ConfigVectorType</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>adbaa2ebb1921c3ddbe30aa88669e3251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; Scalar, 3, Eigen::Dynamic, Options &gt;</type>
      <name>Matrix3x</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a7c7e1a1d7d806488ca5af8e0690206c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; Scalar, 6, Eigen::Dynamic, Options &gt;</type>
      <name>Matrix6x</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a417ed37ac15812b72b387b569a16b8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>TangentVectorType</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a63fbe8ba1150714c00c590fd94262593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataTpl</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a5c7dc17e6707b8bfdba72f00726e7a48</anchor>
      <arglist>(const Model &amp;model)</arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>a</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a164b667ad94bb81ec5c7d18dc60dbd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>a_gf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa008e7f1733396d56cb782e5ba1e9cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Vector3 &gt;</type>
      <name>acom</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>af8967dff8feaa6ee4b13031b9f7a32bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>Ag</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a261c90e67030338171ff9d1cc2fe2188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>C</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ad95f77d44680647c6dad061866f42e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Vector3 &gt;</type>
      <name>com</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa60a82d45b3e78050fa0c71d470d5be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>D</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a43734b543d007abbeac776207677944c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dAdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>afd19d2fa5c94861139c474cc209ed1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dAdv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a45aade5fd438434ff660a42b8a57f759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dAg</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac353f76ffcda5c59657f0f8ce57c55bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>ddq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a91c6cb72888d3a9ace1d3591935b7d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>ddq_dq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a3c7d531e4ac9db60956b42d7f117b4b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>ddq_dv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa052d9fae262450df4b74409ed19f1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dFda</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a1073d48aebc9362c7fd91c6e8841b795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dFdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a783144bdf0ef0d8b8ec0f565b89c65a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dFdv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a115b651629d2f2183c0d6d5273bda823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dHdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a35f0d3a1d1ade80d4ff3ec00422a13c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Force</type>
      <name>dhg</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac7c850b59ab48babf526d8e7a80ba48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>Dinv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a41714e7e0b8507550a82c13e6e8f2749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dJ</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ad80f7208331aa73fdbada86c8292fb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>doYcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ade1c233cdf5d936a906630d8370c84ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>dq_after</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9b77cd9c65a8a884c2af6b74ff8effdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>dtau_dq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a4b3ccab3a24805f64e7b71d973f4187b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>dtau_dv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac28541d12e9a0354c77725f08a95355a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dVdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a4a80153d62fc5c5571cd9b11c0220a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>dYcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>afb53bae4d9961268b01b7448077d6967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>f</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a82b28b2dea94d8705c0a657cecfe9236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Matrix6x &gt;</type>
      <name>Fcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9fbef40bf302dd32d4939e074fc25229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>g</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a51f102ce2d0ec182603bae07855b300f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>h</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a5fc6bb3d8a0b649a31dbad54f7336e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Force</type>
      <name>hg</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9efcb96b1bf485b7d84511ca43d180b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Inertia</type>
      <name>Ig</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a111d7a55e21b4631ec68dd55be7e1233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>iMf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa4c0e4aa77261da35f26945513f0bc0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>impulse_c</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a4419b35a2e4d3b19c698bfd0aec9d5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>IS</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a12fe56ca0f2f21ee3524761f7f931f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Inertia::Matrix6</type>
      <name>Itmp</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ad88e4a830fead1da4143aa4be5dc2ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>Ivx</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a811235829c0b3ce9e1b32dcf3788e232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>J</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aca87f2c33db894a4c77f53c9ff0bcf78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix3x</type>
      <name>Jcom</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a7d1284d1d73c6463bb648aa2c8335168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>JMinvJt</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a0d5c85d433e0c61fbf40cdcc9c7253a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointDataVector</type>
      <name>joints</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a07cd5dbc7b9f44452c4ce9516b0d0693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Scalar</type>
      <name>kinetic_energy</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa16c00a9b01ae4323d1516ebafc77d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>lambda_c</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a363cd6ff5a313733c06c16f32ea77735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>lastChild</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a23c815a1e2b9491161d4607e84b44b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>liMi</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>abbe9fbd504aade3133c81355f193fce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::LLT&lt; MatrixXs &gt;</type>
      <name>llt_JMinvJt</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a71869f4dc2a2c2e0d118794db771495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>M</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a06abc85a9d243960843d690d382a349e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6</type>
      <name>M6tmp</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ab82fb9fd1812ba60bcf97a457e126420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Scalar &gt;</type>
      <name>mass</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac2e7ff20bd171c27b920d39ee933ca11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RowMatrixXs</type>
      <name>Minv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>acc2ce236faf38254f75cc6cfeb1f9943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>nle</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>acda0a2079bd45cf605557a77c7e558f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>nvSubtree</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a201299f28576218a6efa6079b4522670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>nvSubtree_fromRow</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a8f316f6be02f27ed5fe731bf451232c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>oa</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa555bb46ec2b579efd2c9f2deed98fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>oa_gf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a46d716613dbb247206a08f6c88d3bd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>of</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>af3d5dea1675d6f099f2d65c216643fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>oh</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a234c93210d686c077efbcf5cd482d09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>oMf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a6b9b8e2276bb17788c5346920d9ccd6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>oMi</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a3ca0bdcda0aa7798aa9d976f20d26323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>ov</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a7caebd44bbddbda7424188e8b08870d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Inertia &gt;</type>
      <name>oYcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a5654ab7895f933adc4a637a4fe85fd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>parents_fromRow</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a6e9ee31cae713e11c59f7ba293b5bc55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Scalar</type>
      <name>potential_energy</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a0e48f38d84ec08fb4d5387721581bbdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>SDinv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aaaabb3c93cc4255eeb8200d2ae3129fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>sDUiJt</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a59d390f37c5a5ea019cf435060d08ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>tau</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a70cdb0dbc0817ee68118214139f3bdee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>tmp</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>adfca16a78d30cc2f72ede7047d682a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>torque_residual</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a2d7a1697b71aced5c71faaac2689b7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>u</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a27f3a36a688cab9072064fa8d6428605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>U</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9eac03ad85957a486aa301a662368308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>UDinv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ae648c91a13895f1e808ffc3772b1d36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>v</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac3abebe4bbb3b2e53cce1f3b9739edcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Vector3 &gt;</type>
      <name>vcom</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a3b5a61b083ed9094e3a7cd8ff192751e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>vxI</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a41f4578f15f4a68cd5a6072a6aad363e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>Yaba</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>acc04c2fef1033d55ec6af58e01d73b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Inertia &gt;</type>
      <name>Ycrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a876bfa4271ddcd55cae5dc6311c9b5b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DataTpl&lt; ADScalar, Options &gt;</name>
    <filename>structpinocchio_1_1DataTpl.html</filename>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>ConfigVectorType</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>adbaa2ebb1921c3ddbe30aa88669e3251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; Scalar, 3, Eigen::Dynamic, Options &gt;</type>
      <name>Matrix3x</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a7c7e1a1d7d806488ca5af8e0690206c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; Scalar, 6, Eigen::Dynamic, Options &gt;</type>
      <name>Matrix6x</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a417ed37ac15812b72b387b569a16b8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>TangentVectorType</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a63fbe8ba1150714c00c590fd94262593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DataTpl</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a5c7dc17e6707b8bfdba72f00726e7a48</anchor>
      <arglist>(const Model &amp;model)</arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>a</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a164b667ad94bb81ec5c7d18dc60dbd9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>a_gf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa008e7f1733396d56cb782e5ba1e9cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Vector3 &gt;</type>
      <name>acom</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>af8967dff8feaa6ee4b13031b9f7a32bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>Ag</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a261c90e67030338171ff9d1cc2fe2188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>C</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ad95f77d44680647c6dad061866f42e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Vector3 &gt;</type>
      <name>com</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa60a82d45b3e78050fa0c71d470d5be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>D</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a43734b543d007abbeac776207677944c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dAdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>afd19d2fa5c94861139c474cc209ed1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dAdv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a45aade5fd438434ff660a42b8a57f759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dAg</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac353f76ffcda5c59657f0f8ce57c55bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>ddq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a91c6cb72888d3a9ace1d3591935b7d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>ddq_dq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a3c7d531e4ac9db60956b42d7f117b4b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>ddq_dv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa052d9fae262450df4b74409ed19f1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dFda</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a1073d48aebc9362c7fd91c6e8841b795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dFdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a783144bdf0ef0d8b8ec0f565b89c65a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dFdv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a115b651629d2f2183c0d6d5273bda823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dHdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a35f0d3a1d1ade80d4ff3ec00422a13c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Force</type>
      <name>dhg</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac7c850b59ab48babf526d8e7a80ba48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>Dinv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a41714e7e0b8507550a82c13e6e8f2749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dJ</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ad80f7208331aa73fdbada86c8292fb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>doYcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ade1c233cdf5d936a906630d8370c84ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>dq_after</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9b77cd9c65a8a884c2af6b74ff8effdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>dtau_dq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a4b3ccab3a24805f64e7b71d973f4187b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>dtau_dv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac28541d12e9a0354c77725f08a95355a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>dVdq</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a4a80153d62fc5c5571cd9b11c0220a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>dYcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>afb53bae4d9961268b01b7448077d6967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>f</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a82b28b2dea94d8705c0a657cecfe9236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Matrix6x &gt;</type>
      <name>Fcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9fbef40bf302dd32d4939e074fc25229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>g</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a51f102ce2d0ec182603bae07855b300f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>h</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a5fc6bb3d8a0b649a31dbad54f7336e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Force</type>
      <name>hg</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9efcb96b1bf485b7d84511ca43d180b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Inertia</type>
      <name>Ig</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a111d7a55e21b4631ec68dd55be7e1233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>iMf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa4c0e4aa77261da35f26945513f0bc0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>impulse_c</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a4419b35a2e4d3b19c698bfd0aec9d5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>IS</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a12fe56ca0f2f21ee3524761f7f931f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Inertia::Matrix6</type>
      <name>Itmp</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ad88e4a830fead1da4143aa4be5dc2ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>Ivx</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a811235829c0b3ce9e1b32dcf3788e232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>J</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aca87f2c33db894a4c77f53c9ff0bcf78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix3x</type>
      <name>Jcom</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a7d1284d1d73c6463bb648aa2c8335168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>JMinvJt</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a0d5c85d433e0c61fbf40cdcc9c7253a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointDataVector</type>
      <name>joints</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a07cd5dbc7b9f44452c4ce9516b0d0693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Scalar</type>
      <name>kinetic_energy</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa16c00a9b01ae4323d1516ebafc77d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>lambda_c</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a363cd6ff5a313733c06c16f32ea77735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>lastChild</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a23c815a1e2b9491161d4607e84b44b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>liMi</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>abbe9fbd504aade3133c81355f193fce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::LLT&lt; MatrixXs &gt;</type>
      <name>llt_JMinvJt</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a71869f4dc2a2c2e0d118794db771495b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>M</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a06abc85a9d243960843d690d382a349e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6</type>
      <name>M6tmp</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ab82fb9fd1812ba60bcf97a457e126420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Scalar &gt;</type>
      <name>mass</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac2e7ff20bd171c27b920d39ee933ca11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RowMatrixXs</type>
      <name>Minv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>acc2ce236faf38254f75cc6cfeb1f9943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>nle</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>acda0a2079bd45cf605557a77c7e558f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>nvSubtree</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a201299f28576218a6efa6079b4522670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>nvSubtree_fromRow</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a8f316f6be02f27ed5fe731bf451232c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>oa</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aa555bb46ec2b579efd2c9f2deed98fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>oa_gf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a46d716613dbb247206a08f6c88d3bd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>of</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>af3d5dea1675d6f099f2d65c216643fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Force &gt;</type>
      <name>oh</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a234c93210d686c077efbcf5cd482d09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>oMf</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a6b9b8e2276bb17788c5346920d9ccd6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>oMi</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a3ca0bdcda0aa7798aa9d976f20d26323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>ov</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a7caebd44bbddbda7424188e8b08870d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Inertia &gt;</type>
      <name>oYcrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a5654ab7895f933adc4a637a4fe85fd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>parents_fromRow</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a6e9ee31cae713e11c59f7ba293b5bc55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Scalar</type>
      <name>potential_energy</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a0e48f38d84ec08fb4d5387721581bbdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>SDinv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>aaaabb3c93cc4255eeb8200d2ae3129fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>sDUiJt</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a59d390f37c5a5ea019cf435060d08ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>tau</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a70cdb0dbc0817ee68118214139f3bdee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>tmp</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>adfca16a78d30cc2f72ede7047d682a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>torque_residual</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a2d7a1697b71aced5c71faaac2689b7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>u</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a27f3a36a688cab9072064fa8d6428605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MatrixXs</type>
      <name>U</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a9eac03ad85957a486aa301a662368308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Matrix6x</type>
      <name>UDinv</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ae648c91a13895f1e808ffc3772b1d36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Motion &gt;</type>
      <name>v</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>ac3abebe4bbb3b2e53cce1f3b9739edcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Vector3 &gt;</type>
      <name>vcom</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a3b5a61b083ed9094e3a7cd8ff192751e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>vxI</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a41f4578f15f4a68cd5a6072a6aad363e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; typename Inertia::Matrix6 &gt;</type>
      <name>Yaba</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>acc04c2fef1033d55ec6af58e01d73b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Inertia &gt;</type>
      <name>Ycrb</name>
      <anchorfile>structpinocchio_1_1DataTpl.html</anchorfile>
      <anchor>a876bfa4271ddcd55cae5dc6311c9b5b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::eval_set_dim</name>
    <filename>structpinocchio_1_1eval__set__dim.html</filename>
    <templarg>dim1</templarg>
    <templarg>dim2</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::eval_set_dim&lt; dim, Eigen::Dynamic &gt;</name>
    <filename>structpinocchio_1_1eval__set__dim_3_01dim_00_01Eigen_1_1Dynamic_01_4.html</filename>
    <templarg>dim</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::eval_set_dim&lt; Eigen::Dynamic, dim &gt;</name>
    <filename>structpinocchio_1_1eval__set__dim_3_01Eigen_1_1Dynamic_00_01dim_01_4.html</filename>
    <templarg>dim</templarg>
  </compound>
  <compound kind="class">
    <name>pinocchio::Exception</name>
    <filename>classpinocchio_1_1Exception.html</filename>
  </compound>
  <compound kind="class">
    <name>pinocchio::ForceBase</name>
    <filename>classpinocchio_1_1ForceBase.html</filename>
    <templarg>Derived</templarg>
    <member kind="function">
      <type>ConstAngularType</type>
      <name>angular</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a0300a41d62e23713c91a9195202092fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AngularType</type>
      <name>angular</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a10051ee3db4ab2c3ec2cc8d31c53bcab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>angular</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a365af72d9ec2d3c35d5beb5d278fbde6</anchor>
      <arglist>(const Eigen::MatrixBase&lt; V3Like &gt; &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a1aa996fb0ac7682d58ca4e1ec2b657c7</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;m) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isApprox</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>addfbb93ad21a65401fc2c92fe245acd6</anchor>
      <arglist>(const Derived &amp;other, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const </arglist>
    </member>
    <member kind="function">
      <type>ConstLinearType</type>
      <name>linear</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>aa35f138c0255afc9e95d3789669c1c19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LinearType</type>
      <name>linear</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>ab53dec6270f36af12ecd0bc031730e32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linear</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a83116a01d66d2f270c527a510322d2a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; V3Like &gt; &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a6c969fc06a60d01d4cbe643901e23691</anchor>
      <arglist>(const ForceBase&lt; F2 &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>ForcePlain</type>
      <name>operator*</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>ad2c25b550d0ca0efcdf799f5ee8e009b</anchor>
      <arglist>(const OtherScalar &amp;alpha) const </arglist>
    </member>
    <member kind="function">
      <type>Derived</type>
      <name>operator+</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>af5dadd30363f7b9a348051ac0edacac6</anchor>
      <arglist>(const ForceBase&lt; Derived &gt; &amp;phi) const </arglist>
    </member>
    <member kind="function">
      <type>Derived &amp;</type>
      <name>operator+=</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a62e19b120cba556415cd43d23204bb81</anchor>
      <arglist>(const ForceBase&lt; Derived &gt; &amp;phi)</arglist>
    </member>
    <member kind="function">
      <type>Derived</type>
      <name>operator-</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>aab7c2386cc69ccf3876ecaf6d443a254</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Derived</type>
      <name>operator-</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a545e996866a45eb36a76094869c92f52</anchor>
      <arglist>(const ForceBase&lt; Derived &gt; &amp;phi) const </arglist>
    </member>
    <member kind="function">
      <type>Derived &amp;</type>
      <name>operator-=</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>ab9422c2f36e80090c4dd2a1f362e6a46</anchor>
      <arglist>(const ForceBase&lt; Derived &gt; &amp;phi)</arglist>
    </member>
    <member kind="function">
      <type>ForcePlain</type>
      <name>operator/</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>ae400b7b9a20a1001ffbbb0bd917a0385</anchor>
      <arglist>(const OtherScalar &amp;alpha) const </arglist>
    </member>
    <member kind="function">
      <type>Derived &amp;</type>
      <name>operator=</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>aa61da546a4a62c39752806de95dcd40c</anchor>
      <arglist>(const ForceBase&lt; Derived &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a008bd290d43f36979c1957b156bdf8e9</anchor>
      <arglist>(const ForceBase&lt; F2 &gt; &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; Derived &gt;::ReturnType</type>
      <name>se3Action</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a580590b8317998a6e19dd383b5f8a356</anchor>
      <arglist>(const SE3Tpl&lt; S2, O2 &gt; &amp;m) const </arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; Derived &gt;::ReturnType</type>
      <name>se3ActionInverse</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>a1978a3e2f670b533d3ca8dc21ba68fa3</anchor>
      <arglist>(const SE3Tpl&lt; S2, O2 &gt; &amp;m) const </arglist>
    </member>
    <member kind="function">
      <type>ToVectorConstReturnType</type>
      <name>toVector</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>ae6c14cebe6a709dfa945acc5581e9cb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ToVectorReturnType</type>
      <name>toVector</name>
      <anchorfile>classpinocchio_1_1ForceBase.html</anchorfile>
      <anchor>ade9520f2cb93ca346ed1a3468609b47f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pinocchio::ForceDense</name>
    <filename>classpinocchio_1_1ForceDense.html</filename>
    <templarg>Derived</templarg>
    <base>pinocchio::ForceBase</base>
    <member kind="function">
      <type>ForceRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1ForceDense.html</anchorfile>
      <anchor>ac1406871155fb5b11630bd9a52ad5fa9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ForceDense&lt; ForceRef&lt; const Vector6ArgType &gt; &gt;</name>
    <filename>classpinocchio_1_1ForceDense.html</filename>
    <base>pinocchio::ForceBase</base>
    <member kind="function">
      <type>ForceRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1ForceDense.html</anchorfile>
      <anchor>ac1406871155fb5b11630bd9a52ad5fa9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ForceDense&lt; ForceRef&lt; Vector6ArgType &gt; &gt;</name>
    <filename>classpinocchio_1_1ForceDense.html</filename>
    <base>pinocchio::ForceBase</base>
    <member kind="function">
      <type>ForceRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1ForceDense.html</anchorfile>
      <anchor>ac1406871155fb5b11630bd9a52ad5fa9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ForceDense&lt; ForceTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1ForceDense.html</filename>
    <base>pinocchio::ForceBase</base>
    <member kind="function">
      <type>ForceRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1ForceDense.html</anchorfile>
      <anchor>ac1406871155fb5b11630bd9a52ad5fa9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pinocchio::ForceRef</name>
    <filename>classpinocchio_1_1ForceRef.html</filename>
    <templarg></templarg>
    <base>ForceDense&lt; ForceRef&lt; Vector6ArgType &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>pinocchio::ForceRef&lt; const Vector6ArgType &gt;</name>
    <filename>classpinocchio_1_1ForceRef_3_01const_01Vector6ArgType_01_4.html</filename>
    <templarg></templarg>
    <base>ForceDense&lt; ForceRef&lt; const Vector6ArgType &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>pinocchio::ForceSetTpl</name>
    <filename>classpinocchio_1_1ForceSetTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <class kind="struct">pinocchio::ForceSetTpl::Block</class>
    <member kind="function">
      <type>ForceSetTpl</type>
      <name>se3Action</name>
      <anchorfile>classpinocchio_1_1ForceSetTpl.html</anchorfile>
      <anchor>aaee700cc59d224e51f6c91b28b493dd1</anchor>
      <arglist>(const SE3 &amp;m) const </arglist>
    </member>
    <member kind="function">
      <type>ForceSetTpl</type>
      <name>se3ActionInverse</name>
      <anchorfile>classpinocchio_1_1ForceSetTpl.html</anchorfile>
      <anchor>a8337a3ca157fefe92908f4eb78f5b2f7</anchor>
      <arglist>(const SE3 &amp;m) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pinocchio::ForceTpl</name>
    <filename>classpinocchio_1_1ForceTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>ForceDense&lt; ForceTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>ForceTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1ForceTpl.html</anchorfile>
      <anchor>a6d6945741c2ffc719c211479c0f07306</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ForceTpl&lt; Scalar, Options &gt;</name>
    <filename>classpinocchio_1_1ForceTpl.html</filename>
    <base>pinocchio::ForceDense</base>
    <member kind="function">
      <type>ForceTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1ForceTpl.html</anchorfile>
      <anchor>a6d6945741c2ffc719c211479c0f07306</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::FrameTpl</name>
    <filename>structpinocchio_1_1FrameTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <member kind="function">
      <type></type>
      <name>FrameTpl</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>a93d5a6223726dfae7856f51f2a8f7318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FrameTpl</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>ab0453a8c13cb7aabb2d1ee116640b120</anchor>
      <arglist>(const std::string &amp;name, const JointIndex parent, const FrameIndex previousFrame, const SE3 &amp;frame_placement, const FrameType type)</arglist>
    </member>
    <member kind="function">
      <type>FrameTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>ac3392e9e0872da5ccc8887c5d45ac81d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>a46494fa29d283ab5c97509251921868d</anchor>
      <arglist>(const FrameTpl&lt; S2, O2 &gt; &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointIndex</type>
      <name>parent</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>a2aa4d066ee651eb8fd77bd2ae066ad92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SE3</type>
      <name>placement</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>adbb35a8c6154e5379b54c3e5a4e6d683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameIndex</type>
      <name>previousFrame</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>ab8a97a108aefb5afb44442e0beafb6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameType</type>
      <name>type</name>
      <anchorfile>structpinocchio_1_1FrameTpl.html</anchorfile>
      <anchor>ac37823c9e440fc10553f20c6acb47546</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::GeometryData</name>
    <filename>structpinocchio_1_1GeometryData.html</filename>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>activateCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a3bde775f5b1dd8554b41e69e4fbfe8a8</anchor>
      <arglist>(const PairIndex pairId, const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activateCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a59824888b060abc96bdbe4172e2a844e</anchor>
      <arglist>(const PairIndex pairId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deactivateCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>ac502d5e726d2ebf3532423d17e5d9a5d</anchor>
      <arglist>(const PairIndex pairId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillInnerOuterObjectMaps</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>ae2b1e68acb5cb09284c541741f3f0042</anchor>
      <arglist>(const GeometryModel &amp;geomModel)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>activeCollisionPairs</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a8021234251b08a713fea73d008f9613b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fcl::CollisionObject &gt;</type>
      <name>collisionObjects</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>ab237cb8ad24daeda9f2aea05b1c40521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PairIndex</type>
      <name>collisionPairIndex</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a21c41401602fa49a35a31a8e743dbde6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fcl::CollisionRequest</type>
      <name>collisionRequest</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a2c65de5c8de407ab08acdf2cd550e186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fcl::CollisionResult &gt;</type>
      <name>collisionResults</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>aa5081bc8a065c8458f93a7d8a3580f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fcl::DistanceRequest</type>
      <name>distanceRequest</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>ad227c94f607f8f6c17ca67b5e93153ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fcl::DistanceResult &gt;</type>
      <name>distanceResults</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a6aca01393b1a7e3de98ca73178378d25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; JointIndex, GeomIndexList &gt;</type>
      <name>innerObjects</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>aa6f96a849b56be78eda46556da0e248d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>oMg</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>a727ecc6c50dc452edae36c4469490654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; JointIndex, GeomIndexList &gt;</type>
      <name>outerObjects</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>af45986a6fdece134fd1586d86d1276b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>radius</name>
      <anchorfile>structpinocchio_1_1GeometryData.html</anchorfile>
      <anchor>ade27cc447485a088328972499687a456</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::GeometryModel</name>
    <filename>structpinocchio_1_1GeometryModel.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addAllCollisionPairs</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>aa080d765fc6b67dd4621029166eaf239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a45e96a97bb8fd91917bb2c7a4f3f5045</anchor>
      <arglist>(const CollisionPair &amp;pair)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED GeomIndex</type>
      <name>addGeometryObject</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a563f694968a12608b8a8c1a91ef73c97</anchor>
      <arglist>(GeometryObject object, const ModelTpl&lt; S2, O2, _JointCollectionTpl &gt; &amp;model, const bool autofillJointParent)</arglist>
    </member>
    <member kind="function">
      <type>GeomIndex</type>
      <name>addGeometryObject</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a28fe0a004ca808b04abd275394ce686e</anchor>
      <arglist>(const GeometryObject &amp;object, const ModelTpl&lt; S2, O2, _JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>GeomIndex</type>
      <name>addGeometryObject</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>aca961de9340c47c2d61c3d5277f3ff4d</anchor>
      <arglist>(const GeometryObject &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a794123c73e14199720125d0d8d10bb69</anchor>
      <arglist>(const CollisionPair &amp;pair) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existGeometryName</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>aebdb6e3b0a2bfd348443ff3c9e889be9</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>PairIndex</type>
      <name>findCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a0c3bc5f305ed808f6f9dcfeac85ed22a</anchor>
      <arglist>(const CollisionPair &amp;pair) const </arglist>
    </member>
    <member kind="function">
      <type>GeomIndex</type>
      <name>getGeometryId</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a1a0ab7010bc7f359f6385ce13ee9a80a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const std::string &amp;</type>
      <name>getGeometryName</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a91564e3b351dba7a86c518d91ff2f6f4</anchor>
      <arglist>(const GeomIndex index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllCollisionPairs</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a38502c78173299a5fe1f510c7c55ac2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollisionPair</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>ae9009acabe9019417132d40ab715bce2</anchor>
      <arglist>(const CollisionPair &amp;pair)</arglist>
    </member>
    <member kind="variable">
      <type>CollisionPairVector</type>
      <name>collisionPairs</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>ab6e170c032ae962d030e8b3bde6c4022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GeometryObjectVector</type>
      <name>geometryObjects</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>a6b05c29a73490a253735c68abcf38938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Index</type>
      <name>ngeoms</name>
      <anchorfile>structpinocchio_1_1GeometryModel.html</anchorfile>
      <anchor>ab491fb9aa2845b4f4d0a356693fac8d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::GeometryObject</name>
    <filename>structpinocchio_1_1GeometryObject.html</filename>
    <member kind="variable">
      <type>boost::shared_ptr&lt; fcl::CollisionGeometry &gt;</type>
      <name>fcl</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a189d8e57f06dda4ebf0254f41c0ff410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector4d</type>
      <name>meshColor</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a07be5a1c64954bf91d7480f40f31bfaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>meshPath</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a17b634ca379f4d73cab08389afd9140d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>meshScale</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a4096e187ba373a759b58424ba7deb80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>meshTexturePath</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>ae89a61deaf1256e7fbe7cea0df0940bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>overrideMaterial</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a36bbbec09ec56266be1aab39e88c2c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameIndex</type>
      <name>parentFrame</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a1d82d1a43dbd6d5195e528a146c3c5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointIndex</type>
      <name>parentJoint</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>a56e29164c36c2ae0644d693f90df4b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SE3</type>
      <name>placement</name>
      <anchorfile>structpinocchio_1_1GeometryObject.html</anchorfile>
      <anchor>adbb35a8c6154e5379b54c3e5a4e6d683</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::helper::handle_return_type_without_typename</name>
    <filename>structpinocchio_1_1helper_1_1handle__return__type__without__typename.html</filename>
    <templarg></templarg>
    <templarg>TypeAccess</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataCompositeTpl_3_01Scalar_0bc80c74bf92e818a68b58872ed9ea48e.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataPrismaticTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataPrismaticUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataRevoluteUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataRevoluteUnboundedTpl_3_01bfe41f6e549f927f0c03e14e6020a7a7.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataSphericalZYXTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointDataTranslationTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointDataTranslationTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelCompositeTpl_3_01Scalar_eadee784e07bc93a4516964d2585fb38.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelPrismaticTpl_3_01Scalar_0a44478ab976dd66bddf474070c29cfa.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelPrismaticUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelRevoluteUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelRevoluteUnboundedTpl_3_013cf38ca21a8734fc87ce6ad43a09463.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelSphericalZYXTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_constructor&lt; ::pinocchio::JointModelTranslationTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__constructor_3_01_1_1pinocchio_1_1JointModelTranslationTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataCompositeTpl_3_01Scalar_00_01Optd846906c282c288f6f0db5ae6a817190.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataPrismaticTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataPrismaticUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataRevoluteUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataRevoluteUnboundedTpl_3_01Scalar_2ee43e1300242215d4285b557736cfb3.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataSphericalZYXTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointDataTranslationTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointDataTranslationTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelCompositeTpl_3_01Scalar_00_01Op3d8d32a2ada9b19c9d45ed6f627c0f5d.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelPrismaticTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelPrismaticUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelRevoluteUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelRevoluteUnboundedTpl_3_01Scalare68d2affac8a37ba08fdbb39b41733f9.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelSphericalZYXTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>boost::has_nothrow_copy&lt; ::pinocchio::JointModelTranslationTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structboost_1_1has__nothrow__copy_3_01_1_1pinocchio_1_1JointModelTranslationTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="class">
    <name>pinocchio::InertiaBase</name>
    <filename>classpinocchio_1_1InertiaBase.html</filename>
    <templarg>Derived</templarg>
    <member kind="function">
      <type>Derived_t</type>
      <name>se3Action</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a2b61fd41364bbd13bffaf5fb23580d5c</anchor>
      <arglist>(const SE3 &amp;M) const </arglist>
    </member>
    <member kind="function">
      <type>Derived_t</type>
      <name>se3ActionInverse</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>ac59afd04aaaeca42207ed8414aeed72b</anchor>
      <arglist>(const SE3 &amp;M) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ivx</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a3d7f14a0f9bbdc3a3434dc47e425a56c</anchor>
      <arglist>(const Motion &amp;v, const Derived &amp;I, const Eigen::MatrixBase&lt; M6 &gt; &amp;Iout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vxi</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a412134049885126a65dd65767c37a50f</anchor>
      <arglist>(const Motion &amp;v, const Derived &amp;I, const Eigen::MatrixBase&lt; M6 &gt; &amp;Iout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InertiaBase&lt; InertiaTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1InertiaBase.html</filename>
    <member kind="function">
      <type>Derived_t</type>
      <name>se3Action</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a2b61fd41364bbd13bffaf5fb23580d5c</anchor>
      <arglist>(const SE3 &amp;M) const</arglist>
    </member>
    <member kind="function">
      <type>Derived_t</type>
      <name>se3ActionInverse</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>ac59afd04aaaeca42207ed8414aeed72b</anchor>
      <arglist>(const SE3 &amp;M) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ivx</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a3d7f14a0f9bbdc3a3434dc47e425a56c</anchor>
      <arglist>(const Motion &amp;v, const InertiaTpl&lt; _Scalar, _Options &gt; &amp;I, const Eigen::MatrixBase&lt; M6 &gt; &amp;Iout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vxi</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a412134049885126a65dd65767c37a50f</anchor>
      <arglist>(const Motion &amp;v, const InertiaTpl&lt; _Scalar, _Options &gt; &amp;I, const Eigen::MatrixBase&lt; M6 &gt; &amp;Iout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InertiaBase&lt; InertiaTpl&lt; Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1InertiaBase.html</filename>
    <member kind="function">
      <type>Derived_t</type>
      <name>se3Action</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a2b61fd41364bbd13bffaf5fb23580d5c</anchor>
      <arglist>(const SE3 &amp;M) const</arglist>
    </member>
    <member kind="function">
      <type>Derived_t</type>
      <name>se3ActionInverse</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>ac59afd04aaaeca42207ed8414aeed72b</anchor>
      <arglist>(const SE3 &amp;M) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ivx</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a3d7f14a0f9bbdc3a3434dc47e425a56c</anchor>
      <arglist>(const Motion &amp;v, const InertiaTpl&lt; Scalar, _Options &gt; &amp;I, const Eigen::MatrixBase&lt; M6 &gt; &amp;Iout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vxi</name>
      <anchorfile>classpinocchio_1_1InertiaBase.html</anchorfile>
      <anchor>a412134049885126a65dd65767c37a50f</anchor>
      <arglist>(const Motion &amp;v, const InertiaTpl&lt; Scalar, _Options &gt; &amp;I, const Eigen::MatrixBase&lt; M6 &gt; &amp;Iout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pinocchio::InertiaTpl</name>
    <filename>classpinocchio_1_1InertiaTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>InertiaBase&lt; InertiaTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>InertiaTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1InertiaTpl.html</anchorfile>
      <anchor>ad8526d59377b35a21e083c49b8174a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InertiaTpl</type>
      <name>se3Action_impl</name>
      <anchorfile>classpinocchio_1_1InertiaTpl.html</anchorfile>
      <anchor>a673c0613fe5ec00257b8aa3130917ba4</anchor>
      <arglist>(const SE3 &amp;M) const </arglist>
    </member>
    <member kind="function">
      <type>InertiaTpl</type>
      <name>se3ActionInverse_impl</name>
      <anchorfile>classpinocchio_1_1InertiaTpl.html</anchorfile>
      <anchor>ad09786d77867b85edd19d12971733e9f</anchor>
      <arglist>(const SE3 &amp;M) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InertiaTpl&lt; Scalar, Options &gt;</name>
    <filename>classpinocchio_1_1InertiaTpl.html</filename>
    <base>InertiaBase&lt; InertiaTpl&lt; Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>InertiaTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1InertiaTpl.html</anchorfile>
      <anchor>ad8526d59377b35a21e083c49b8174a80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InertiaTpl</type>
      <name>se3Action_impl</name>
      <anchorfile>classpinocchio_1_1InertiaTpl.html</anchorfile>
      <anchor>a673c0613fe5ec00257b8aa3130917ba4</anchor>
      <arglist>(const SE3 &amp;M) const</arglist>
    </member>
    <member kind="function">
      <type>InertiaTpl</type>
      <name>se3ActionInverse_impl</name>
      <anchorfile>classpinocchio_1_1InertiaTpl.html</anchorfile>
      <anchor>ad09786d77867b85edd19d12971733e9f</anchor>
      <arglist>(const SE3 &amp;M) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointCollectionDefaultTpl</name>
    <filename>structpinocchio_1_1JointCollectionDefaultTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointCompositeTpl</name>
    <filename>structpinocchio_1_1JointCompositeTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataBase</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <templarg>Derived</templarg>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataCompositeTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataFreeFlyerTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataRevoluteUnboundedTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointDataBase&lt; JointDataTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointDataBase.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointDataBase</name>
      <anchorfile>structpinocchio_1_1JointDataBase.html</anchorfile>
      <anchor>abe6d74311b4d18c732311560ca620916</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataCompositeTpl</name>
    <filename>structpinocchio_1_1JointDataCompositeTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
    <base>JointDataBase&lt; JointDataCompositeTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</base>
    <member kind="variable">
      <type>container::aligned_vector&lt; Transformation_t &gt;</type>
      <name>iMlast</name>
      <anchorfile>structpinocchio_1_1JointDataCompositeTpl.html</anchorfile>
      <anchor>a548310c58dabea8a83d03ff6ef6b91aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointDataVector</type>
      <name>joints</name>
      <anchorfile>structpinocchio_1_1JointDataCompositeTpl.html</anchorfile>
      <anchor>a07cd5dbc7b9f44452c4ce9516b0d0693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Transformation_t &gt;</type>
      <name>pjMi</name>
      <anchorfile>structpinocchio_1_1JointDataCompositeTpl.html</anchorfile>
      <anchor>a18b29b2ab0708e612de1c23063e676cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataFreeFlyerTpl</name>
    <filename>structpinocchio_1_1JointDataFreeFlyerTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataFreeFlyerTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataPlanarTpl</name>
    <filename>structpinocchio_1_1JointDataPlanarTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataPlanarTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataPrismaticTpl</name>
    <filename>structpinocchio_1_1JointDataPrismaticTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>JointDataBase&lt; JointDataPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataPrismaticUnalignedTpl</name>
    <filename>structpinocchio_1_1JointDataPrismaticUnalignedTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataRevoluteTpl</name>
    <filename>structpinocchio_1_1JointDataRevoluteTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>JointDataBase&lt; JointDataRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataRevoluteUnalignedTpl</name>
    <filename>structpinocchio_1_1JointDataRevoluteUnalignedTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataRevoluteUnboundedTpl</name>
    <filename>structpinocchio_1_1JointDataRevoluteUnboundedTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>JointDataBase&lt; JointDataRevoluteUnboundedTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataSphericalTpl</name>
    <filename>structpinocchio_1_1JointDataSphericalTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataSphericalTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataSphericalZYXTpl</name>
    <filename>structpinocchio_1_1JointDataSphericalZYXTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataTpl</name>
    <filename>structpinocchio_1_1JointDataTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
    <base>JointDataBase&lt; JointDataTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</base>
    <member kind="function">
      <type>Constraint_t</type>
      <name>S_accessor</name>
      <anchorfile>structpinocchio_1_1JointDataTpl.html</anchorfile>
      <anchor>aefe75d3e7953850846695e1a007d1e6d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataTranslationTpl</name>
    <filename>structpinocchio_1_1JointDataTranslationTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>JointDataBase&lt; JointDataTranslationTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointDataVoid</name>
    <filename>structpinocchio_1_1JointDataVoid.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointFreeFlyerTpl</name>
    <filename>structpinocchio_1_1JointFreeFlyerTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelBase</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <templarg>Derived</templarg>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelCompositeTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelFreeFlyerTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelRevoluteUnboundedTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>JointModelBase&lt; JointModelTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1JointModelBase.html</filename>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a0b7e46670ab433a25dfc9755232edc29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SizeDepType&lt; NV &gt;::template BlockReturn&lt; D &gt;::ConstType</type>
      <name>jointBlock</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a95d809baba11291e45f53c6854604d22</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;Mat) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a1869bc87cfe27fce592427f11cfe3b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JointModelBase</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a50beb193bbb6482bd3ca587a1e76e26b</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointModelBase &amp;</type>
      <name>operator=</name>
      <anchorfile>structpinocchio_1_1JointModelBase.html</anchorfile>
      <anchor>a6a919a2abbf12bd25378ba14942c3570</anchor>
      <arglist>(const JointModelBase &amp;clone)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelCompositeTpl</name>
    <filename>structpinocchio_1_1JointModelCompositeTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
    <base>JointModelBase&lt; JointModelCompositeTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>JointModelCompositeTpl</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a1df331e2480a2642034236701875eb91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JointModelCompositeTpl</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a008bc4643e460127767f1caef4971177</anchor>
      <arglist>(const size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JointModelCompositeTpl</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a5090afe59b5a0c3860d380c0f89e3418</anchor>
      <arglist>(const JointModelBase&lt; JointModel &gt; &amp;jmodel, const SE3 &amp;placement=SE3::Identity())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JointModelCompositeTpl</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a246c0e4dfbb71a0dbc9036c1bc5a2d3b</anchor>
      <arglist>(const JointModelCompositeTpl &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>JointModelDerived &amp;</type>
      <name>addJoint</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a01b303751d2ccf720538d3ce8cedf2da</anchor>
      <arglist>(const JointModelBase&lt; JointModel &gt; &amp;jmodel, const SE3 &amp;placement=SE3::Identity())</arglist>
    </member>
    <member kind="function">
      <type>JointModelCompositeTpl&lt; NewScalar, Options, JointCollectionTpl &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a0dc3e2af946ae7a76e08d3154794aeef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndexes_impl</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a67ac2e64fc12558cb24ef4507223b26c</anchor>
      <arglist>(JointIndex id, int q, int v)</arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>jointPlacements</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a3e58647061344067c2272f2b890df4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointModelVector</type>
      <name>joints</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a64ff8505bc8abbba289b1946c58283ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>njoints</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>ad9e8f29d7b313698eff00a60ced27a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJointIndexes</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>af19db6fa52e03a99813901fe4b710bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>m_idx_q</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a332739c75a09f24c10fee03a56bfc5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>m_idx_v</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a8f16b9d757c434dc8ea9602d20894553</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_nq</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>af6099861d37706bb1be1572a3ac6b25e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>m_nqs</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a73dcfd5680896115f7edcd9789c7179d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>m_nvs</name>
      <anchorfile>structpinocchio_1_1JointModelCompositeTpl.html</anchorfile>
      <anchor>a5f42eb2f03f73f01cbe587e000b19c16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelFreeFlyerTpl</name>
    <filename>structpinocchio_1_1JointModelFreeFlyerTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelFreeFlyerTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelFreeFlyerTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelFreeFlyerTpl.html</anchorfile>
      <anchor>aeebbab39dfafb914e5f0455895622040</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelPlanarTpl</name>
    <filename>structpinocchio_1_1JointModelPlanarTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelPlanarTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelPlanarTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelPlanarTpl.html</anchorfile>
      <anchor>aa82e8322eaa7c21e2cdc58fc2c059356</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelPrismaticTpl</name>
    <filename>structpinocchio_1_1JointModelPrismaticTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>JointModelBase&lt; JointModelPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
    <member kind="function">
      <type>JointModelPrismaticTpl&lt; NewScalar, Options, axis &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelPrismaticTpl.html</anchorfile>
      <anchor>a33388bf34250394df0ad4821f9b5eaae</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelPrismaticUnalignedTpl</name>
    <filename>structpinocchio_1_1JointModelPrismaticUnalignedTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelPrismaticUnalignedTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelPrismaticUnalignedTpl.html</anchorfile>
      <anchor>a5dca64e6414b1a1bb1e94bf107f942fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>axis</name>
      <anchorfile>structpinocchio_1_1JointModelPrismaticUnalignedTpl.html</anchorfile>
      <anchor>aa8edd0f9d1f8de22292eb2c2429224fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelRevoluteTpl</name>
    <filename>structpinocchio_1_1JointModelRevoluteTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>JointModelBase&lt; JointModelRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
    <member kind="function">
      <type>JointModelRevoluteTpl&lt; NewScalar, Options, axis &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelRevoluteTpl.html</anchorfile>
      <anchor>acf65b153001d1c562c62175bfd9df725</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelRevoluteUnalignedTpl</name>
    <filename>structpinocchio_1_1JointModelRevoluteUnalignedTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelRevoluteUnalignedTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelRevoluteUnalignedTpl.html</anchorfile>
      <anchor>a15ec8247cc26419c07e007c7925775e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Vector3</type>
      <name>axis</name>
      <anchorfile>structpinocchio_1_1JointModelRevoluteUnalignedTpl.html</anchorfile>
      <anchor>aa8edd0f9d1f8de22292eb2c2429224fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelRevoluteUnboundedTpl</name>
    <filename>structpinocchio_1_1JointModelRevoluteUnboundedTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>JointModelBase&lt; JointModelRevoluteUnboundedTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
    <member kind="function">
      <type>JointModelRevoluteUnboundedTpl&lt; NewScalar, Options, axis &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelRevoluteUnboundedTpl.html</anchorfile>
      <anchor>a9736e3f6102ad11a2d153074dd96436d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelSphericalTpl</name>
    <filename>structpinocchio_1_1JointModelSphericalTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelSphericalTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelSphericalTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelSphericalTpl.html</anchorfile>
      <anchor>aa48dc6a18edfc5f863a1f5e34d3c73cc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelSphericalZYXTpl</name>
    <filename>structpinocchio_1_1JointModelSphericalZYXTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelSphericalZYXTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelSphericalZYXTpl.html</anchorfile>
      <anchor>aebef93e543bce70bd3efc44da98ae157</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelTpl</name>
    <filename>structpinocchio_1_1JointModelTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
    <base>JointModelBase&lt; JointModelTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</base>
    <member kind="function">
      <type>JointModelTpl&lt; NewScalar, Options, JointCollectionTpl &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelTpl.html</anchorfile>
      <anchor>a89e936cec0bc6027d5002fffcc87439f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelTranslationTpl</name>
    <filename>structpinocchio_1_1JointModelTranslationTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>JointModelBase&lt; JointModelTranslationTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>JointModelTranslationTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1JointModelTranslationTpl.html</anchorfile>
      <anchor>a4ae7aac84289ec1de7fc2a3c157fc3f3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointModelVoid</name>
    <filename>structpinocchio_1_1JointModelVoid.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointPlanarTpl</name>
    <filename>structpinocchio_1_1JointPlanarTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointPrismaticTpl</name>
    <filename>structpinocchio_1_1JointPrismaticTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointPrismaticUnalignedTpl</name>
    <filename>structpinocchio_1_1JointPrismaticUnalignedTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointRevoluteTpl</name>
    <filename>structpinocchio_1_1JointRevoluteTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointRevoluteUnalignedTpl</name>
    <filename>structpinocchio_1_1JointRevoluteUnalignedTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointRevoluteUnboundedTpl</name>
    <filename>structpinocchio_1_1JointRevoluteUnboundedTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointSphericalTpl</name>
    <filename>structpinocchio_1_1JointSphericalTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointSphericalZYXTpl</name>
    <filename>structpinocchio_1_1JointSphericalZYXTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointTpl</name>
    <filename>structpinocchio_1_1JointTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::JointTranslationTpl</name>
    <filename>structpinocchio_1_1JointTranslationTpl.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::fusion::JointVisitorBase</name>
    <filename>structpinocchio_1_1fusion_1_1JointVisitorBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroup</name>
    <filename>structpinocchio_1_1LieGroup.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupBase</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <templarg>Derived</templarg>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; CartesianProductOperation&lt; LieGroup1, LieGroup2 &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; LieGroupGenericTpl&lt; LieGroupCollection &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; SpecialEuclideanOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; SpecialEuclideanOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; SpecialOrthogonalOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; SpecialOrthogonalOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LieGroupBase&lt; VectorSpaceOperationTpl&lt; Dim, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupBase.html</filename>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a0139352b0e687185a718c6b67ed28e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LieGroupBase</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a6528fde1087ee89aaed84beeb288428f</anchor>
      <arglist>(const LieGroupBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af6a60d0394d3cf1893d6aaa610139b0e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a3d3c1514048194a531bcdd31c447652f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Jacobian_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a87ab96533c97e0970b11b9e85b86e7ee</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a757e735a6a793c9e97dabc2afddea05d</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J, const ArgumentPosition arg) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a9c9625a1dc62ec15be2987a9897cf43b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate_dv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a221e5a8d1aca844fa79acc1495dce539</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a97601c4464b74787d927de4e5f59d30c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a06c55ab6818726c0bd85cfd665711a46</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>random</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ae4552897dbdc17ca67b9e78bab70fd4f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Config_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>af8fe9a600091587313dd686817797db9</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;lower_pos_limit, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;upper_pos_limit, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>ab97d71e9087094df14375f9c7d16b60b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDifference</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a7cf69da760c4d680b69b2670ab2f7a49</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Eigen::MatrixBase&lt; JacobianOut_t &gt; &amp;J) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a8ecba855405b9074824856767110f5cd</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a005bdc9959024e54daf19ace51ebdc04</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>afb836b122b028a8466e910f8ea1c23a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; ConfigL_t &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigR_t &gt; &amp;q1, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision()) const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a5d5b97e19b8df6cefa43f4107ff912f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a28ab39bc2960d148343a5f1e60655ffc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConfigVector_t</type>
      <name>neutral</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a302eb8ca57faa859e67da73297c947cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1LieGroupBase.html</anchorfile>
      <anchor>a37627d5d5bba7f4a8690c71c2ab3cb07</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupCollectionDefaultTpl</name>
    <filename>structpinocchio_1_1LieGroupCollectionDefaultTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupGenericTpl</name>
    <filename>structpinocchio_1_1LieGroupGenericTpl.html</filename>
    <templarg></templarg>
    <base>LieGroupBase&lt; LieGroupGenericTpl&lt; LieGroupCollection &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap</name>
    <filename>structpinocchio_1_1LieGroupMap.html</filename>
    <class kind="struct">pinocchio::LieGroupMap::operation</class>
    <class kind="struct">pinocchio::LieGroupMap::operation&lt; JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::LieGroupMap::operation&lt; JointModelFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::LieGroupMap::operation&lt; JointModelPlanarTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::LieGroupMap::operation&lt; JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::LieGroupMap::operation&lt; JointModelSphericalTpl&lt; Scalar, Options &gt; &gt;</class>
  </compound>
  <compound kind="struct">
    <name>LuaKey</name>
    <filename>structLuaKey.html</filename>
  </compound>
  <compound kind="struct">
    <name>LuaTable</name>
    <filename>structLuaTable.html</filename>
  </compound>
  <compound kind="struct">
    <name>LuaTableNode</name>
    <filename>structLuaTableNode.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ModelTpl</name>
    <filename>structpinocchio_1_1ModelTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
    <base>Serializable&lt; ModelTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</base>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>ConfigVectorType</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>adbaa2ebb1921c3ddbe30aa88669e3251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>TangentVectorType</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a63fbe8ba1150714c00c590fd94262593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelTpl</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a516ef17b5b45aadb0acbf06fdad63c17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addBodyFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aabf9e40addfa5abc1ebce8511cece6f8</anchor>
      <arglist>(const std::string &amp;body_name, const JointIndex &amp;parentJoint, const SE3 &amp;body_placement=SE3::Identity(), int previousFrame=-1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a3be571d5f6bf2aa9c45389f4e77b2ca2</anchor>
      <arglist>(const Frame &amp;frame)</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>addJoint</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a4eb96fdc244ae3b050a45dc5938ef1b3</anchor>
      <arglist>(const JointIndex parent, const JointModelBase&lt; JointModelDerived &gt; &amp;joint_model, const SE3 &amp;joint_placement, const std::string &amp;joint_name, const VectorXs &amp;max_effort, const VectorXs &amp;max_velocity, const VectorXs &amp;min_config, const VectorXs &amp;max_config)</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>addJoint</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a17dbf44d023ae24fdd410b8483c56c0d</anchor>
      <arglist>(const JointIndex parent, const JointModelBase&lt; JointModelDerived &gt; &amp;joint_model, const SE3 &amp;joint_placement, const std::string &amp;joint_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addJointFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a2134cc857b5093e43e1b0848bc702989</anchor>
      <arglist>(const JointIndex &amp;jointIndex, int frameIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendBodyToJoint</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aae15e6e14e4367472ae14ee1844cebf5</anchor>
      <arglist>(const JointIndex joint_index, const Inertia &amp;Y, const SE3 &amp;body_placement=SE3::Identity())</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; NewScalar, Options, JointCollectionTpl &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a12ff586267ccab51c1efe1b9e1dd83a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>abe76f6a8ca9f2ce1bd482ecb5bb3e59c</anchor>
      <arglist>(const AlgorithmCheckerBase&lt; D &gt; &amp;checker=AlgorithmCheckerBase&lt; D &gt;()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a6ecddb2c44556b7acbc1723a968ff8bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a01bded1feb071ada741c6e5bd06efcf4</anchor>
      <arglist>(const Data &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existBodyName</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a18e08c1ab9778028b1ec8e69a99674e2</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a71ad644ea389fbadfe8831b61554b0a8</anchor>
      <arglist>(const std::string &amp;name, const FrameType &amp;type=(FrameType)(JOINT|FIXED_JOINT|BODY|OP_FRAME|SENSOR)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existJointName</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ac984193070c036aa58af5baf9ca87cb5</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>getBodyId</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a339c8b3620ad72c68a4aa67e3c5126e1</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>FrameIndex</type>
      <name>getFrameId</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a040ba26666a5c71afbecc3b5d84a51cc</anchor>
      <arglist>(const std::string &amp;name, const FrameType &amp;type=(FrameType)(JOINT|FIXED_JOINT|BODY|OP_FRAME|SENSOR)) const </arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>getJointId</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ad6be2bca67fd5e33d114a4103f84740d</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const std::string &amp;</type>
      <name>getJointName</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a32bbd1b10c102debdbdb7cdcc5e510b3</anchor>
      <arglist>(const JointIndex index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aaee7d94442f5e6fd667ddd0fdd12cabb</anchor>
      <arglist>(const ModelTpl &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>af3e97146eec99d69b861f60223bec8fe</anchor>
      <arglist>(const ModelTpl &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>effortLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a89543e5241e24aef23232197d8ded18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameVector</type>
      <name>frames</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ab26cd020f35a1bf32db97b1da262b71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Motion</type>
      <name>gravity</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a3345bb3f1e242cf818db1e0314ec2d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Inertia &gt;</type>
      <name>inertias</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a7d044d15cd2895e76ee441ddeb5461fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>jointPlacements</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a3e58647061344067c2272f2b890df4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointModelVector</type>
      <name>joints</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a64ff8505bc8abbba289b1946c58283ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>lowerPositionLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9a811ec91480efa31d605525f0dd5b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>names</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9c4192866025823ecd5592526c757c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbodies</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9128b18efbcaaf48278cfb37c682d193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PINOCCHIO_DEPRECATED ConfigVectorType</type>
      <name>neutralConfiguration</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a4e3f84b6a8cfca31614e140615b93b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nframes</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a5bbabe7ffeb60bc396e62726177b9501</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>njoints</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ad9e8f29d7b313698eff00a60ced27a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a8a765927c128205ef2e2574772b4bcbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aab6822646f9a53265acb577886434744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; JointIndex &gt;</type>
      <name>parents</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9108b9ed0fc75c533e5919903c36c189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConfigVectorMap</type>
      <name>referenceConfigurations</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ab2576be1f4d284fb4ceebf90864e12f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>rotorGearRatio</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a36edbe329280966f196263c4654d6854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>rotorInertia</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>afd18e78cf36d0c8228ecc5dc76d0ce87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; IndexVector &gt;</type>
      <name>subtrees</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a169ef4947c56679e294eb4b490b6616f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>upperPositionLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a1fd100de82110e1bc42b2cff15f2b248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>velocityLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a0118c5c0602fa296996b7cfe56fbed99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>gravity981</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>acee548eb7ae73daf0177585d59b17c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addJointIndexToParentSubtrees</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ab2bb8a0b938f2fca38a386c6e37be738</anchor>
      <arglist>(const JointIndex joint_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ModelTpl&lt; ADScalar, Options &gt;</name>
    <filename>structpinocchio_1_1ModelTpl.html</filename>
    <base>Serializable&lt; ModelTpl&lt; ADScalar, _Options, JointCollectionTpl &gt; &gt;</base>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>ConfigVectorType</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>adbaa2ebb1921c3ddbe30aa88669e3251</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VectorXs</type>
      <name>TangentVectorType</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a63fbe8ba1150714c00c590fd94262593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelTpl</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a516ef17b5b45aadb0acbf06fdad63c17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addBodyFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aabf9e40addfa5abc1ebce8511cece6f8</anchor>
      <arglist>(const std::string &amp;body_name, const JointIndex &amp;parentJoint, const SE3 &amp;body_placement=SE3::Identity(), int previousFrame=-1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a3be571d5f6bf2aa9c45389f4e77b2ca2</anchor>
      <arglist>(const Frame &amp;frame)</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>addJoint</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a4eb96fdc244ae3b050a45dc5938ef1b3</anchor>
      <arglist>(const JointIndex parent, const JointModelBase&lt; JointModelDerived &gt; &amp;joint_model, const SE3 &amp;joint_placement, const std::string &amp;joint_name, const VectorXs &amp;max_effort, const VectorXs &amp;max_velocity, const VectorXs &amp;min_config, const VectorXs &amp;max_config)</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>addJoint</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a17dbf44d023ae24fdd410b8483c56c0d</anchor>
      <arglist>(const JointIndex parent, const JointModelBase&lt; JointModelDerived &gt; &amp;joint_model, const SE3 &amp;joint_placement, const std::string &amp;joint_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addJointFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a2134cc857b5093e43e1b0848bc702989</anchor>
      <arglist>(const JointIndex &amp;jointIndex, int frameIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendBodyToJoint</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aae15e6e14e4367472ae14ee1844cebf5</anchor>
      <arglist>(const JointIndex joint_index, const Inertia &amp;Y, const SE3 &amp;body_placement=SE3::Identity())</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; NewScalar, Options, JointCollectionTpl &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a12ff586267ccab51c1efe1b9e1dd83a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>abe76f6a8ca9f2ce1bd482ecb5bb3e59c</anchor>
      <arglist>(const AlgorithmCheckerBase&lt; D &gt; &amp;checker=AlgorithmCheckerBase&lt; D &gt;()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a6ecddb2c44556b7acbc1723a968ff8bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a01bded1feb071ada741c6e5bd06efcf4</anchor>
      <arglist>(const Data &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existBodyName</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a18e08c1ab9778028b1ec8e69a99674e2</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existFrame</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a71ad644ea389fbadfe8831b61554b0a8</anchor>
      <arglist>(const std::string &amp;name, const FrameType &amp;type=(FrameType)(JOINT|FIXED_JOINT|BODY|OP_FRAME|SENSOR)) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>existJointName</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ac984193070c036aa58af5baf9ca87cb5</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>getBodyId</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a339c8b3620ad72c68a4aa67e3c5126e1</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>FrameIndex</type>
      <name>getFrameId</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a040ba26666a5c71afbecc3b5d84a51cc</anchor>
      <arglist>(const std::string &amp;name, const FrameType &amp;type=(FrameType)(JOINT|FIXED_JOINT|BODY|OP_FRAME|SENSOR)) const</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>getJointId</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ad6be2bca67fd5e33d114a4103f84740d</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const std::string &amp;</type>
      <name>getJointName</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a32bbd1b10c102debdbdb7cdcc5e510b3</anchor>
      <arglist>(const JointIndex index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aaee7d94442f5e6fd667ddd0fdd12cabb</anchor>
      <arglist>(const ModelTpl &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>af3e97146eec99d69b861f60223bec8fe</anchor>
      <arglist>(const ModelTpl &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>effortLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a89543e5241e24aef23232197d8ded18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FrameVector</type>
      <name>frames</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ab26cd020f35a1bf32db97b1da262b71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Motion</type>
      <name>gravity</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a3345bb3f1e242cf818db1e0314ec2d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; Inertia &gt;</type>
      <name>inertias</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a7d044d15cd2895e76ee441ddeb5461fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>container::aligned_vector&lt; SE3 &gt;</type>
      <name>jointPlacements</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a3e58647061344067c2272f2b890df4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>JointModelVector</type>
      <name>joints</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a64ff8505bc8abbba289b1946c58283ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>lowerPositionLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9a811ec91480efa31d605525f0dd5b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>names</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9c4192866025823ecd5592526c757c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nbodies</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9128b18efbcaaf48278cfb37c682d193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PINOCCHIO_DEPRECATED ConfigVectorType</type>
      <name>neutralConfiguration</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a4e3f84b6a8cfca31614e140615b93b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nframes</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a5bbabe7ffeb60bc396e62726177b9501</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>njoints</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ad9e8f29d7b313698eff00a60ced27a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a8a765927c128205ef2e2574772b4bcbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>aab6822646f9a53265acb577886434744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; JointIndex &gt;</type>
      <name>parents</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a9108b9ed0fc75c533e5919903c36c189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConfigVectorMap</type>
      <name>referenceConfigurations</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ab2576be1f4d284fb4ceebf90864e12f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>rotorGearRatio</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a36edbe329280966f196263c4654d6854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>rotorInertia</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>afd18e78cf36d0c8228ecc5dc76d0ce87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; IndexVector &gt;</type>
      <name>subtrees</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a169ef4947c56679e294eb4b490b6616f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VectorXs</type>
      <name>upperPositionLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a1fd100de82110e1bc42b2cff15f2b248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TangentVectorType</type>
      <name>velocityLimit</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>a0118c5c0602fa296996b7cfe56fbed99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Vector3</type>
      <name>gravity981</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>acee548eb7ae73daf0177585d59b17c39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addJointIndexToParentSubtrees</name>
      <anchorfile>structpinocchio_1_1ModelTpl.html</anchorfile>
      <anchor>ab2bb8a0b938f2fca38a386c6e37be738</anchor>
      <arglist>(const JointIndex joint_id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pinocchio::MotionBase</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
    <templarg>Derived</templarg>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; BiasZeroTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionPrismaticTpl&lt; _Scalar, _Options, _axis &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionRef&lt; const Vector6ArgType &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionRef&lt; Vector6ArgType &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionTpl&lt; Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>MotionBase&lt; MotionTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionBase.html</filename>
  </compound>
  <compound kind="class">
    <name>pinocchio::MotionDense</name>
    <filename>classpinocchio_1_1MotionDense.html</filename>
    <templarg>Derived</templarg>
    <base>pinocchio::MotionBase</base>
    <member kind="function">
      <type>MotionRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1MotionDense.html</anchorfile>
      <anchor>a6a134653443f4d004028a7fd6617c7f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MotionDense&lt; MotionRef&lt; const Vector6ArgType &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionDense.html</filename>
    <base>MotionBase&lt; MotionRef&lt; const Vector6ArgType &gt; &gt;</base>
    <member kind="function">
      <type>MotionRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1MotionDense.html</anchorfile>
      <anchor>a6a134653443f4d004028a7fd6617c7f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MotionDense&lt; MotionRef&lt; Vector6ArgType &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionDense.html</filename>
    <base>MotionBase&lt; MotionRef&lt; Vector6ArgType &gt; &gt;</base>
    <member kind="function">
      <type>MotionRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1MotionDense.html</anchorfile>
      <anchor>a6a134653443f4d004028a7fd6617c7f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MotionDense&lt; MotionTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionDense.html</filename>
    <base>MotionBase&lt; MotionTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>MotionRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1MotionDense.html</anchorfile>
      <anchor>a6a134653443f4d004028a7fd6617c7f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MotionDense&lt; MotionTpl&lt; Scalar, _Options &gt; &gt;</name>
    <filename>classpinocchio_1_1MotionDense.html</filename>
    <base>MotionBase&lt; MotionTpl&lt; Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>MotionRefType</type>
      <name>ref</name>
      <anchorfile>classpinocchio_1_1MotionDense.html</anchorfile>
      <anchor>a6a134653443f4d004028a7fd6617c7f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionPlanarTpl</name>
    <filename>structpinocchio_1_1MotionPlanarTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>MotionBase&lt; MotionPlanarTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionPrismaticTpl</name>
    <filename>structpinocchio_1_1MotionPrismaticTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>_axis</templarg>
    <base>MotionBase&lt; MotionPrismaticTpl&lt; _Scalar, _Options, _axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionPrismaticUnalignedTpl</name>
    <filename>structpinocchio_1_1MotionPrismaticUnalignedTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>MotionBase&lt; MotionPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>pinocchio::MotionRef</name>
    <filename>classpinocchio_1_1MotionRef.html</filename>
    <templarg>Vector6ArgType</templarg>
    <base>MotionDense&lt; MotionRef&lt; Vector6ArgType &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>pinocchio::MotionRef&lt; const Vector6ArgType &gt;</name>
    <filename>classpinocchio_1_1MotionRef_3_01const_01Vector6ArgType_01_4.html</filename>
    <templarg></templarg>
    <base>MotionDense&lt; MotionRef&lt; const Vector6ArgType &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionRevoluteTpl</name>
    <filename>structpinocchio_1_1MotionRevoluteTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>MotionBase&lt; MotionRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionRevoluteUnalignedTpl</name>
    <filename>structpinocchio_1_1MotionRevoluteUnalignedTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>MotionBase&lt; MotionRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionSphericalTpl</name>
    <filename>structpinocchio_1_1MotionSphericalTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>MotionBase&lt; MotionSphericalTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>pinocchio::MotionTpl</name>
    <filename>classpinocchio_1_1MotionTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>MotionDense&lt; MotionTpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>MotionTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1MotionTpl.html</anchorfile>
      <anchor>ade3cb1c492b9bc37dac8d0147f1fed77</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MotionTpl&lt; Scalar, Options &gt;</name>
    <filename>classpinocchio_1_1MotionTpl.html</filename>
    <base>MotionDense&lt; MotionTpl&lt; Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>MotionTpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1MotionTpl.html</anchorfile>
      <anchor>ade3cb1c492b9bc37dac8d0147f1fed77</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::MotionTranslationTpl</name>
    <filename>structpinocchio_1_1MotionTranslationTpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>MotionBase&lt; MotionTranslationTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Eigen::NumTraits&lt; CppAD::AD&lt; Base &gt; &gt;</name>
    <filename>structEigen_1_1NumTraits_3_01CppAD_1_1AD_3_01Base_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap::operation</name>
    <filename>structpinocchio_1_1LieGroupMap_1_1operation.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap::operation&lt; JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupMap_1_1operation_3_01JointModelCompositeTpl_3_01Scalar_00_01Options_0bb7d780db147d8023180eb2040db10d7.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap::operation&lt; JointModelFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupMap_1_1operation_3_01JointModelFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap::operation&lt; JointModelPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupMap_1_1operation_3_01JointModelPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap::operation&lt; JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupMap_1_1operation_3_01JointModelRevoluteUnboundedTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::LieGroupMap::operation&lt; JointModelSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1LieGroupMap_1_1operation_3_01JointModelSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ParentChecker</name>
    <filename>structpinocchio_1_1ParentChecker.html</filename>
    <base>AlgorithmCheckerBase&lt; ParentChecker &gt;</base>
  </compound>
  <compound kind="struct">
    <name>PinocchioTicToc</name>
    <filename>structPinocchioTicToc.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::RowsReturn</name>
    <filename>structpinocchio_1_1SizeDepType_3_01Eigen_1_1Dynamic_01_4_1_1RowsReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType::RowsReturn</name>
    <filename>structpinocchio_1_1SizeDepType_1_1RowsReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SE3Base</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <templarg>Derived</templarg>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; Derived &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; Derived &gt;::Scalar &gt;::dummy_precision()) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Base&lt; SE3Tpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; SE3Tpl&lt; _Scalar, _Options &gt; &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; SE3Tpl&lt; _Scalar, _Options &gt; &gt;::Scalar &gt;::dummy_precision()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Base&lt; SE3Tpl&lt; double, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; SE3Tpl&lt; double, _Options &gt; &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; SE3Tpl&lt; double, _Options &gt; &gt;::Scalar &gt;::dummy_precision()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Base&lt; SE3Tpl&lt; Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; SE3Tpl&lt; Scalar, _Options &gt; &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; SE3Tpl&lt; Scalar, _Options &gt; &gt;::Scalar &gt;::dummy_precision()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Base&lt; TransformPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; TransformPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; TransformPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;::Scalar &gt;::dummy_precision()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Base&lt; TransformRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; TransformRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; TransformRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;::Scalar &gt;::dummy_precision()) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Base&lt; TransformTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1SE3Base.html</filename>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>a01f4c885d8c564a1512a542eeaf63e8b</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aafeea486f6a9e4501b645eaf1772e444</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdentity</name>
      <anchorfile>structpinocchio_1_1SE3Base.html</anchorfile>
      <anchor>aa075d03307211801e7fdce8b0cfc4caf</anchor>
      <arglist>(const typename traits&lt; TransformTranslationTpl&lt; _Scalar, _Options &gt; &gt;::Scalar &amp;prec=Eigen::NumTraits&lt; typename traits&lt; TransformTranslationTpl&lt; _Scalar, _Options &gt; &gt;::Scalar &gt;::dummy_precision()) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SE3Tpl</name>
    <filename>structpinocchio_1_1SE3Tpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <base>SE3Base&lt; SE3Tpl&lt; _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>aba588a7e6eda740dba6e04400ee23176</anchor>
      <arglist>(const D &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>ae3be5b7cac38c5ba5343d98f24683436</anchor>
      <arglist>(const D &amp;d) const </arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>a19610ce1fd2cbb12599b98ad33d20559</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl</type>
      <name>inverse</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>af8ff476a92c7df2b6fd7a3eedf3c062d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ActionMatrixType</type>
      <name>toActionMatrix_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>ae4c7257d8f61ec7632b8e8a8bd2407c7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Tpl&lt; double, 0 &gt;</name>
    <filename>structpinocchio_1_1SE3Tpl.html</filename>
    <base>SE3Base&lt; SE3Tpl&lt; double, _Options &gt; &gt;</base>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>aba588a7e6eda740dba6e04400ee23176</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>ae3be5b7cac38c5ba5343d98f24683436</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>a19610ce1fd2cbb12599b98ad33d20559</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl</type>
      <name>inverse</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>af8ff476a92c7df2b6fd7a3eedf3c062d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionMatrixType</type>
      <name>toActionMatrix_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>ae4c7257d8f61ec7632b8e8a8bd2407c7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SE3Tpl&lt; Scalar, Options &gt;</name>
    <filename>structpinocchio_1_1SE3Tpl.html</filename>
    <base>SE3Base&lt; SE3Tpl&lt; Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>act_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>aba588a7e6eda740dba6e04400ee23176</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>internal::SE3GroupAction&lt; D &gt;::ReturnType</type>
      <name>actInv_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>ae3be5b7cac38c5ba5343d98f24683436</anchor>
      <arglist>(const D &amp;d) const</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>a19610ce1fd2cbb12599b98ad33d20559</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl</type>
      <name>inverse</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>af8ff476a92c7df2b6fd7a3eedf3c062d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActionMatrixType</type>
      <name>toActionMatrix_impl</name>
      <anchorfile>structpinocchio_1_1SE3Tpl.html</anchorfile>
      <anchor>ae4c7257d8f61ec7632b8e8a8bd2407c7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType::SegmentReturn</name>
    <filename>structpinocchio_1_1SizeDepType_1_1SegmentReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::SegmentReturn</name>
    <filename>structpinocchio_1_1SizeDepType_3_01Eigen_1_1Dynamic_01_4_1_1SegmentReturn.html</filename>
    <templarg>Mat</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::serialization::Serializable</name>
    <filename>structpinocchio_1_1serialization_1_1Serializable.html</filename>
    <templarg>Derived</templarg>
    <member kind="function">
      <type>void</type>
      <name>loadFromBinary</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a551c5e262e9fa9cc9b1cb8cb3112d052</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromText</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a6192c26b0c2e12233d9ef7b6ac6f8767</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromXML</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a4229d298a3cd95654d4d074ff2427f3b</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToBinary</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>acf55e322e00f1852f016350b6a46507d</anchor>
      <arglist>(const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToText</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a9778d6945505f3d4e0515a4222ae0399</anchor>
      <arglist>(const std::string &amp;filename) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToXML</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>aa80e33394ca77db1c5ba0f91ca0e7e83</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;tag_name) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Serializable&lt; ModelTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1serialization_1_1Serializable.html</filename>
    <member kind="function">
      <type>void</type>
      <name>loadFromBinary</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a551c5e262e9fa9cc9b1cb8cb3112d052</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromText</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a6192c26b0c2e12233d9ef7b6ac6f8767</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromXML</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a4229d298a3cd95654d4d074ff2427f3b</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToBinary</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>acf55e322e00f1852f016350b6a46507d</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToText</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a9778d6945505f3d4e0515a4222ae0399</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToXML</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>aa80e33394ca77db1c5ba0f91ca0e7e83</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;tag_name) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Serializable&lt; ModelTpl&lt; ADScalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1serialization_1_1Serializable.html</filename>
    <member kind="function">
      <type>void</type>
      <name>loadFromBinary</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a551c5e262e9fa9cc9b1cb8cb3112d052</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromText</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a6192c26b0c2e12233d9ef7b6ac6f8767</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromXML</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a4229d298a3cd95654d4d074ff2427f3b</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;tag_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToBinary</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>acf55e322e00f1852f016350b6a46507d</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToText</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>a9778d6945505f3d4e0515a4222ae0399</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToXML</name>
      <anchorfile>structpinocchio_1_1serialization_1_1Serializable.html</anchorfile>
      <anchor>aa80e33394ca77db1c5ba0f91ca0e7e83</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;tag_name) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::Serialize</name>
    <filename>structpinocchio_1_1Serialize.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::Serialize&lt; JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1Serialize_3_01JointModelCompositeTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SINCOSAlgo</name>
    <filename>structpinocchio_1_1SINCOSAlgo.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SINCOSAlgo&lt; CppAD::AD&lt; Scalar &gt; &gt;</name>
    <filename>structpinocchio_1_1SINCOSAlgo_3_01CppAD_1_1AD_3_01Scalar_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SINCOSAlgo&lt; double &gt;</name>
    <filename>structpinocchio_1_1SINCOSAlgo_3_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SINCOSAlgo&lt; float &gt;</name>
    <filename>structpinocchio_1_1SINCOSAlgo_3_01float_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SINCOSAlgo&lt; long double &gt;</name>
    <filename>structpinocchio_1_1SINCOSAlgo_3_01long_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType</name>
    <filename>structpinocchio_1_1SizeDepType.html</filename>
    <templarg>NV</templarg>
    <class kind="struct">pinocchio::SizeDepType::BlockReturn</class>
    <class kind="struct">pinocchio::SizeDepType::ColsReturn</class>
    <class kind="struct">pinocchio::SizeDepType::RowsReturn</class>
    <class kind="struct">pinocchio::SizeDepType::SegmentReturn</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;</name>
    <filename>structpinocchio_1_1SizeDepType_3_01Eigen_1_1Dynamic_01_4.html</filename>
    <class kind="struct">pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::BlockReturn</class>
    <class kind="struct">pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::ColsReturn</class>
    <class kind="struct">pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::RowsReturn</class>
    <class kind="struct">pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;::SegmentReturn</class>
  </compound>
  <compound kind="struct">
    <name>pinocchio::Symmetric3Tpl::SkewSquare</name>
    <filename>structpinocchio_1_1Symmetric3Tpl_1_1SkewSquare.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpatialAxis</name>
    <filename>structpinocchio_1_1SpatialAxis.html</filename>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpecialEuclideanOperationTpl</name>
    <filename>structpinocchio_1_1SpecialEuclideanOperationTpl.html</filename>
    <templarg>Dim</templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpecialEuclideanOperationTpl&lt; 2, _Scalar, _Options &gt;</name>
    <filename>structpinocchio_1_1SpecialEuclideanOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>LieGroupBase&lt; SpecialEuclideanOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</base>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1SpecialEuclideanOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a5d54e61f0f3f8aaace87ffdfc4bbcf0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1SpecialEuclideanOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a1e681d60849c5f15d383c8954c631833</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpecialEuclideanOperationTpl&lt; 3, _Scalar, _Options &gt;</name>
    <filename>structpinocchio_1_1SpecialEuclideanOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>LieGroupBase&lt; SpecialEuclideanOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</base>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1SpecialEuclideanOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a5d54e61f0f3f8aaace87ffdfc4bbcf0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1SpecialEuclideanOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a1e681d60849c5f15d383c8954c631833</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpecialOrthogonalOperationTpl</name>
    <filename>structpinocchio_1_1SpecialOrthogonalOperationTpl.html</filename>
    <templarg>Dim</templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpecialOrthogonalOperationTpl&lt; 2, _Scalar, _Options &gt;</name>
    <filename>structpinocchio_1_1SpecialOrthogonalOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>LieGroupBase&lt; SpecialOrthogonalOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</base>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1SpecialOrthogonalOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a5d54e61f0f3f8aaace87ffdfc4bbcf0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1SpecialOrthogonalOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a1e681d60849c5f15d383c8954c631833</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::SpecialOrthogonalOperationTpl&lt; 3, _Scalar, _Options &gt;</name>
    <filename>structpinocchio_1_1SpecialOrthogonalOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>LieGroupBase&lt; SpecialOrthogonalOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</base>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nq</name>
      <anchorfile>structpinocchio_1_1SpecialOrthogonalOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a5d54e61f0f3f8aaace87ffdfc4bbcf0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>nv</name>
      <anchorfile>structpinocchio_1_1SpecialOrthogonalOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4.html</anchorfile>
      <anchor>a1e681d60849c5f15d383c8954c631833</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>pinocchio::Symmetric3Tpl</name>
    <filename>classpinocchio_1_1Symmetric3Tpl.html</filename>
    <templarg>_Scalar</templarg>
    <templarg>_Options</templarg>
    <class kind="struct">pinocchio::Symmetric3Tpl::AlphaSkewSquare</class>
    <class kind="struct">pinocchio::Symmetric3Tpl::SkewSquare</class>
    <member kind="function">
      <type>Symmetric3Tpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a2e4366e9bbf3edfb703d602c108b724e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix32</type>
      <name>decomposeltI</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a381451dd16afbbc66fb87ce334fd3d40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>svx</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a072e95887e6d7c816e0cdb6f13c5c0ca</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>vxs</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a034b7d80cba47194c453ab41d4d4222f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>svx</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>af86e1e707880e74dfd97a65ae1d13275</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Symmetric3Tpl &amp;S3, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vxs</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a7d7f05db6e401e77016f2435b1341c61</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Symmetric3Tpl &amp;S3, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Symmetric3Tpl&lt; double, 0 &gt;</name>
    <filename>classpinocchio_1_1Symmetric3Tpl.html</filename>
    <member kind="function">
      <type>Symmetric3Tpl&lt; NewScalar, Options &gt;</type>
      <name>cast</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a2e4366e9bbf3edfb703d602c108b724e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix32</type>
      <name>decomposeltI</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a381451dd16afbbc66fb87ce334fd3d40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>svx</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a072e95887e6d7c816e0cdb6f13c5c0ca</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v) const</arglist>
    </member>
    <member kind="function">
      <type>Matrix3</type>
      <name>vxs</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a034b7d80cba47194c453ab41d4d4222f</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>svx</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>af86e1e707880e74dfd97a65ae1d13275</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Symmetric3Tpl &amp;S3, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>vxs</name>
      <anchorfile>classpinocchio_1_1Symmetric3Tpl.html</anchorfile>
      <anchor>a7d7f05db6e401e77016f2435b1341c61</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Symmetric3Tpl &amp;S3, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::TaylorSeriesExpansion</name>
    <filename>structpinocchio_1_1TaylorSeriesExpansion.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>precision</name>
      <anchorfile>structpinocchio_1_1TaylorSeriesExpansion.html</anchorfile>
      <anchor>a3a577ac48839b53e7dce95a717f828b5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::TaylorSeriesExpansion&lt; CppAD::AD&lt; Scalar &gt; &gt;</name>
    <filename>structpinocchio_1_1TaylorSeriesExpansion_3_01CppAD_1_1AD_3_01Scalar_01_4_01_4.html</filename>
    <templarg></templarg>
    <base>pinocchio::TaylorSeriesExpansion</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits</name>
    <filename>structpinocchio_1_1traits.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; BiasZeroTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01BiasZeroTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; CartesianProductOperation&lt; LieGroup1, LieGroup2 &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01CartesianProductOperation_3_01LieGroup1_00_01LieGroup2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; CartesianProductOperationVariant &gt;</name>
    <filename>structpinocchio_1_1traits_3_01CartesianProductOperationVariant_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintIdentityTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintIdentityTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintPlanarTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintPrismatic&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintPrismatic_3_01__Scalar_00_01__Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintPrismaticUnaligned&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintPrismaticUnaligned_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintRevoluteTpl_3_01__Scalar_00_01__Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintRevoluteUnalignedTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintSphericalTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintSphericalZYXTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintTpl&lt; _Dim, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintTpl_3_01__Dim_00_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg>_Dim</templarg>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ConstraintTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ConstraintTranslationTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="class">
    <name>traits&lt; ForceRef &gt;</name>
    <filename>structpinocchio_1_1traits.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ForceRef&lt; Vector6ArgType &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ForceRef_3_01Vector6ArgType_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; ForceTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01ForceTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; InertiaTpl&lt; T, U &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01InertiaTpl_3_01T_00_01U_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>U</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointCompositeTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointCompositeTpl_3_01__Scalar_00_01__Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataCompositeTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataPrismaticTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataPrismaticUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataRevoluteUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataRevoluteUnboundedTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataSphericalZYXTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointDataTranslationTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointDataTranslationTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointFreeFlyerTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointFreeFlyerTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelCompositeTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelFreeFlyerTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelPlanarTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelPlanarTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelPrismaticTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelPrismaticUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelRevoluteTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelRevoluteUnalignedTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelRevoluteUnboundedTpl_3_01Scalar_00_01Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelSphericalTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelSphericalTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelSphericalZYXTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelTpl_3_01Scalar_00_01Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointModelTranslationTpl&lt; Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointModelTranslationTpl_3_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointPlanarTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointPrismaticTpl_3_01__Scalar_00_01__Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointPrismaticUnalignedTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointRevoluteTpl_3_01__Scalar_00_01__Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointRevoluteUnalignedTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointRevoluteUnboundedTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointRevoluteUnboundedTpl_3_01__Scalar_00_01__Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointSphericalTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointSphericalZYXTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointTpl_3_01__Scalar_00_01__Options_00_01JointCollectionTpl_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>JointCollectionTpl</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; JointTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01JointTranslationTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; LieGroupGenericTpl&lt; LieGroupCollection &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01LieGroupGenericTpl_3_01LieGroupCollection_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionPlanarTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionPlanarTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionPrismaticTpl&lt; _Scalar, _Options, _axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionPrismaticTpl_3_01__Scalar_00_01__Options_00_01__axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionPrismaticUnalignedTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="class">
    <name>traits&lt; MotionRef &gt;</name>
    <filename>structpinocchio_1_1traits.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionRef&lt; Vector6ArgType &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionRef_3_01Vector6ArgType_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionRevoluteTpl_3_01__Scalar_00_01__Options_00_01axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionRevoluteUnalignedTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionSphericalTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionSphericalTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; MotionTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01MotionTranslationTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SE3Tpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SE3Tpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SpecialEuclideanOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SpecialEuclideanOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SpecialEuclideanOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SpecialEuclideanOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SpecialEuclideanOperationTpl&lt; Dim, Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SpecialEuclideanOperationTpl_3_01Dim_00_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg>Dim</templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SpecialOrthogonalOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SpecialOrthogonalOperationTpl_3_012_00_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SpecialOrthogonalOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SpecialOrthogonalOperationTpl_3_013_00_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; SpecialOrthogonalOperationTpl&lt; Dim, Scalar, Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01SpecialOrthogonalOperationTpl_3_01Dim_00_01Scalar_00_01Options_01_4_01_4.html</filename>
    <templarg>Dim</templarg>
    <templarg></templarg>
    <templarg>Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; TransformPrismaticTpl&lt; _Scalar, _Options, _axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01TransformPrismaticTpl_3_01__Scalar_00_01__Options_00_01__axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; TransformRevoluteTpl&lt; _Scalar, _Options, _axis &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01TransformRevoluteTpl_3_01__Scalar_00_01__Options_00_01__axis_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>_axis</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; TransformTranslationTpl&lt; _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01TransformTranslationTpl_3_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::traits&lt; VectorSpaceOperationTpl&lt; Dim, _Scalar, _Options &gt; &gt;</name>
    <filename>structpinocchio_1_1traits_3_01VectorSpaceOperationTpl_3_01Dim_00_01__Scalar_00_01__Options_01_4_01_4.html</filename>
    <templarg>Dim</templarg>
    <templarg></templarg>
    <templarg>_Options</templarg>
  </compound>
  <compound kind="struct">
    <name>pinocchio::TransformPrismaticTpl</name>
    <filename>structpinocchio_1_1TransformPrismaticTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>SE3Base&lt; TransformPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::TransformRevoluteTpl</name>
    <filename>structpinocchio_1_1TransformRevoluteTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <templarg>axis</templarg>
    <base>SE3Base&lt; TransformRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::TransformTranslationTpl</name>
    <filename>structpinocchio_1_1TransformTranslationTpl.html</filename>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>SE3Base&lt; TransformTranslationTpl&lt; _Scalar, _Options &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintTpl::Transpose</name>
    <filename>structpinocchio_1_1ConstraintTpl_1_1Transpose.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintIdentityTpl::TransposeConst</name>
    <filename>structpinocchio_1_1ConstraintIdentityTpl_1_1TransposeConst.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintRevoluteTpl::TransposeConst</name>
    <filename>structpinocchio_1_1ConstraintRevoluteTpl_1_1TransposeConst.html</filename>
    <member kind="function">
      <type>Eigen::MatrixBase&lt; D &gt;::ConstRowXpr</type>
      <name>operator*</name>
      <anchorfile>structpinocchio_1_1ConstraintRevoluteTpl_1_1TransposeConst.html</anchorfile>
      <anchor>a592dc78952fb300e794f30ae269fa20c</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;F) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintRevoluteUnalignedTpl::TransposeConst</name>
    <filename>structpinocchio_1_1ConstraintRevoluteUnalignedTpl_1_1TransposeConst.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintPrismatic::TransposeConst</name>
    <filename>structpinocchio_1_1ConstraintPrismatic_1_1TransposeConst.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintSphericalTpl::TransposeConst</name>
    <filename>structpinocchio_1_1ConstraintSphericalTpl_1_1TransposeConst.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::ConstraintPrismaticUnaligned::TransposeConst</name>
    <filename>structpinocchio_1_1ConstraintPrismaticUnaligned_1_1TransposeConst.html</filename>
  </compound>
  <compound kind="struct">
    <name>pinocchio::VectorSpaceOperationTpl</name>
    <filename>structpinocchio_1_1VectorSpaceOperationTpl.html</filename>
    <templarg>Dim</templarg>
    <templarg></templarg>
    <templarg>_Options</templarg>
    <base>LieGroupBase&lt; VectorSpaceOperationTpl&lt; Dim, _Scalar, _Options &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>VectorSpaceOperationTpl</name>
      <anchorfile>structpinocchio_1_1VectorSpaceOperationTpl.html</anchorfile>
      <anchor>a46fa5cd4dfe79c34abe5a03f9d660dc9</anchor>
      <arglist>(int size=boost::static_signed_max&lt; 0, Dim &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorSpaceOperationTpl</name>
      <anchorfile>structpinocchio_1_1VectorSpaceOperationTpl.html</anchorfile>
      <anchor>a6a39dfc6f2517ea3e0730b542915fc8b</anchor>
      <arglist>(const VectorSpaceOperationTpl &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>CppAD</name>
    <filename>namespaceCppAD.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Eigen</name>
    <filename>namespaceEigen.html</filename>
    <class kind="struct">Eigen::NumTraits&lt; CppAD::AD&lt; Base &gt; &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>pinocchio</name>
    <filename>namespacepinocchio.html</filename>
    <namespace>pinocchio::buildModels</namespace>
    <namespace>pinocchio::cholesky</namespace>
    <namespace>pinocchio::container</namespace>
    <namespace>pinocchio::forceSet</namespace>
    <namespace>pinocchio::lua</namespace>
    <namespace>pinocchio::motionSet</namespace>
    <namespace>pinocchio::quaternion</namespace>
    <namespace>pinocchio::regressor</namespace>
    <namespace>pinocchio::srdf</namespace>
    <namespace>pinocchio::urdf</namespace>
    <class kind="struct">pinocchio::ABAChecker</class>
    <class kind="struct">pinocchio::AlgorithmCheckerBase</class>
    <class kind="struct">pinocchio::AlgorithmCheckerList</class>
    <class kind="struct">pinocchio::BiasZeroTpl</class>
    <class kind="struct">pinocchio::CartesianAxis</class>
    <class kind="struct">pinocchio::CartesianProductOperation</class>
    <class kind="struct">pinocchio::CartesianProductOperationVariant</class>
    <class kind="struct">pinocchio::CastType</class>
    <class kind="struct">pinocchio::CastType&lt; NewScalar, JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::CastType&lt; NewScalar, JointModelPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::CastType&lt; NewScalar, JointModelRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::CastType&lt; NewScalar, JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::CastType&lt; NewScalar, JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::CodeGenABA</class>
    <class kind="struct">pinocchio::CodeGenABADerivatives</class>
    <class kind="struct">pinocchio::CodeGenBase</class>
    <class kind="struct">pinocchio::CodeGenCRBA</class>
    <class kind="struct">pinocchio::CodeGenMinv</class>
    <class kind="struct">pinocchio::CodeGenRNEA</class>
    <class kind="struct">pinocchio::CodeGenRNEADerivatives</class>
    <class kind="struct">pinocchio::CollisionPair</class>
    <class kind="class">pinocchio::ConstraintBase</class>
    <class kind="struct">pinocchio::ConstraintIdentityTpl</class>
    <class kind="struct">pinocchio::ConstraintPlanarTpl</class>
    <class kind="struct">pinocchio::ConstraintPrismatic</class>
    <class kind="struct">pinocchio::ConstraintPrismaticUnaligned</class>
    <class kind="struct">pinocchio::ConstraintRevoluteTpl</class>
    <class kind="struct">pinocchio::ConstraintRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::ConstraintSphericalTpl</class>
    <class kind="struct">pinocchio::ConstraintSphericalZYXTpl</class>
    <class kind="class">pinocchio::ConstraintTpl</class>
    <class kind="struct">pinocchio::ConstraintTranslationTpl</class>
    <class kind="struct">pinocchio::CRBAChecker</class>
    <class kind="struct">pinocchio::DataTpl</class>
    <class kind="struct">pinocchio::eval_set_dim</class>
    <class kind="struct">pinocchio::eval_set_dim&lt; dim, Eigen::Dynamic &gt;</class>
    <class kind="struct">pinocchio::eval_set_dim&lt; Eigen::Dynamic, dim &gt;</class>
    <class kind="class">pinocchio::Exception</class>
    <class kind="class">pinocchio::ForceBase</class>
    <class kind="class">pinocchio::ForceDense</class>
    <class kind="class">pinocchio::ForceRef</class>
    <class kind="class">pinocchio::ForceRef&lt; const Vector6ArgType &gt;</class>
    <class kind="class">pinocchio::ForceSetTpl</class>
    <class kind="class">pinocchio::ForceTpl</class>
    <class kind="struct">pinocchio::FrameTpl</class>
    <class kind="struct">pinocchio::GeometryData</class>
    <class kind="struct">pinocchio::GeometryModel</class>
    <class kind="struct">pinocchio::GeometryObject</class>
    <class kind="class">pinocchio::InertiaBase</class>
    <class kind="class">pinocchio::InertiaTpl</class>
    <class kind="struct">pinocchio::JointCollectionDefaultTpl</class>
    <class kind="struct">pinocchio::JointCompositeTpl</class>
    <class kind="struct">pinocchio::JointDataBase</class>
    <class kind="struct">pinocchio::JointDataCompositeTpl</class>
    <class kind="struct">pinocchio::JointDataFreeFlyerTpl</class>
    <class kind="struct">pinocchio::JointDataPlanarTpl</class>
    <class kind="struct">pinocchio::JointDataPrismaticTpl</class>
    <class kind="struct">pinocchio::JointDataPrismaticUnalignedTpl</class>
    <class kind="struct">pinocchio::JointDataRevoluteTpl</class>
    <class kind="struct">pinocchio::JointDataRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::JointDataRevoluteUnboundedTpl</class>
    <class kind="struct">pinocchio::JointDataSphericalTpl</class>
    <class kind="struct">pinocchio::JointDataSphericalZYXTpl</class>
    <class kind="struct">pinocchio::JointDataTpl</class>
    <class kind="struct">pinocchio::JointDataTranslationTpl</class>
    <class kind="struct">pinocchio::JointDataVoid</class>
    <class kind="struct">pinocchio::JointFreeFlyerTpl</class>
    <class kind="struct">pinocchio::JointModelBase</class>
    <class kind="struct">pinocchio::JointModelCompositeTpl</class>
    <class kind="struct">pinocchio::JointModelFreeFlyerTpl</class>
    <class kind="struct">pinocchio::JointModelPlanarTpl</class>
    <class kind="struct">pinocchio::JointModelPrismaticTpl</class>
    <class kind="struct">pinocchio::JointModelPrismaticUnalignedTpl</class>
    <class kind="struct">pinocchio::JointModelRevoluteTpl</class>
    <class kind="struct">pinocchio::JointModelRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::JointModelRevoluteUnboundedTpl</class>
    <class kind="struct">pinocchio::JointModelSphericalTpl</class>
    <class kind="struct">pinocchio::JointModelSphericalZYXTpl</class>
    <class kind="struct">pinocchio::JointModelTpl</class>
    <class kind="struct">pinocchio::JointModelTranslationTpl</class>
    <class kind="struct">pinocchio::JointModelVoid</class>
    <class kind="struct">pinocchio::JointPlanarTpl</class>
    <class kind="struct">pinocchio::JointPrismaticTpl</class>
    <class kind="struct">pinocchio::JointPrismaticUnalignedTpl</class>
    <class kind="struct">pinocchio::JointRevoluteTpl</class>
    <class kind="struct">pinocchio::JointRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::JointRevoluteUnboundedTpl</class>
    <class kind="struct">pinocchio::JointSphericalTpl</class>
    <class kind="struct">pinocchio::JointSphericalZYXTpl</class>
    <class kind="struct">pinocchio::JointTpl</class>
    <class kind="struct">pinocchio::JointTranslationTpl</class>
    <class kind="struct">pinocchio::LieGroup</class>
    <class kind="struct">pinocchio::LieGroupBase</class>
    <class kind="struct">pinocchio::LieGroupCollectionDefaultTpl</class>
    <class kind="struct">pinocchio::LieGroupGenericTpl</class>
    <class kind="struct">pinocchio::LieGroupMap</class>
    <class kind="struct">pinocchio::ModelTpl</class>
    <class kind="class">pinocchio::MotionBase</class>
    <class kind="class">pinocchio::MotionDense</class>
    <class kind="struct">pinocchio::MotionPlanarTpl</class>
    <class kind="struct">pinocchio::MotionPrismaticTpl</class>
    <class kind="struct">pinocchio::MotionPrismaticUnalignedTpl</class>
    <class kind="class">pinocchio::MotionRef</class>
    <class kind="class">pinocchio::MotionRef&lt; const Vector6ArgType &gt;</class>
    <class kind="struct">pinocchio::MotionRevoluteTpl</class>
    <class kind="struct">pinocchio::MotionRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::MotionSphericalTpl</class>
    <class kind="class">pinocchio::MotionTpl</class>
    <class kind="struct">pinocchio::MotionTranslationTpl</class>
    <class kind="struct">pinocchio::ParentChecker</class>
    <class kind="struct">pinocchio::SE3Base</class>
    <class kind="struct">pinocchio::SE3Tpl</class>
    <class kind="struct">pinocchio::Serialize</class>
    <class kind="struct">pinocchio::Serialize&lt; JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::SINCOSAlgo</class>
    <class kind="struct">pinocchio::SINCOSAlgo&lt; CppAD::AD&lt; Scalar &gt; &gt;</class>
    <class kind="struct">pinocchio::SINCOSAlgo&lt; double &gt;</class>
    <class kind="struct">pinocchio::SINCOSAlgo&lt; float &gt;</class>
    <class kind="struct">pinocchio::SINCOSAlgo&lt; long double &gt;</class>
    <class kind="struct">pinocchio::SizeDepType</class>
    <class kind="struct">pinocchio::SizeDepType&lt; Eigen::Dynamic &gt;</class>
    <class kind="struct">pinocchio::SpatialAxis</class>
    <class kind="struct">pinocchio::SpecialEuclideanOperationTpl</class>
    <class kind="struct">pinocchio::SpecialEuclideanOperationTpl&lt; 2, _Scalar, _Options &gt;</class>
    <class kind="struct">pinocchio::SpecialEuclideanOperationTpl&lt; 3, _Scalar, _Options &gt;</class>
    <class kind="struct">pinocchio::SpecialOrthogonalOperationTpl</class>
    <class kind="struct">pinocchio::SpecialOrthogonalOperationTpl&lt; 2, _Scalar, _Options &gt;</class>
    <class kind="struct">pinocchio::SpecialOrthogonalOperationTpl&lt; 3, _Scalar, _Options &gt;</class>
    <class kind="class">pinocchio::Symmetric3Tpl</class>
    <class kind="struct">pinocchio::TaylorSeriesExpansion</class>
    <class kind="struct">pinocchio::TaylorSeriesExpansion&lt; CppAD::AD&lt; Scalar &gt; &gt;</class>
    <class kind="struct">pinocchio::traits</class>
    <class kind="struct">pinocchio::traits&lt; BiasZeroTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; CartesianProductOperation&lt; LieGroup1, LieGroup2 &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; CartesianProductOperationVariant &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintIdentityTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintPlanarTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintPrismatic&lt; _Scalar, _Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintPrismaticUnaligned&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintSphericalTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintTpl&lt; _Dim, _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ConstraintTranslationTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ForceRef&lt; Vector6ArgType &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; ForceTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; InertiaTpl&lt; T, U &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointCompositeTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataPlanarTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataSphericalTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointDataTranslationTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointFreeFlyerTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelCompositeTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelFreeFlyerTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelPlanarTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelPrismaticTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelPrismaticUnalignedTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelRevoluteTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelRevoluteUnalignedTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelRevoluteUnboundedTpl&lt; Scalar, Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelSphericalTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelSphericalZYXTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointModelTranslationTpl&lt; Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointPlanarTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointPrismaticTpl&lt; _Scalar, _Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointRevoluteUnboundedTpl&lt; _Scalar, _Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointSphericalTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointSphericalZYXTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointTpl&lt; _Scalar, _Options, JointCollectionTpl &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; JointTranslationTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; LieGroupGenericTpl&lt; LieGroupCollection &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionPlanarTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionPrismaticTpl&lt; _Scalar, _Options, _axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionPrismaticUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionRef&lt; Vector6ArgType &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionRevoluteTpl&lt; _Scalar, _Options, axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionRevoluteUnalignedTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionSphericalTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; MotionTranslationTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SE3Tpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SpecialEuclideanOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SpecialEuclideanOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SpecialEuclideanOperationTpl&lt; Dim, Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SpecialOrthogonalOperationTpl&lt; 2, _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SpecialOrthogonalOperationTpl&lt; 3, _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; SpecialOrthogonalOperationTpl&lt; Dim, Scalar, Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; TransformPrismaticTpl&lt; _Scalar, _Options, _axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; TransformRevoluteTpl&lt; _Scalar, _Options, _axis &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; TransformTranslationTpl&lt; _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::traits&lt; VectorSpaceOperationTpl&lt; Dim, _Scalar, _Options &gt; &gt;</class>
    <class kind="struct">pinocchio::TransformPrismaticTpl</class>
    <class kind="struct">pinocchio::TransformRevoluteTpl</class>
    <class kind="struct">pinocchio::TransformTranslationTpl</class>
    <class kind="struct">pinocchio::VectorSpaceOperationTpl</class>
    <member kind="enumeration">
      <type></type>
      <name>ArgumentPosition</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1880b3dbfccb9c6eccd24e7733bd1f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FrameType</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad495a9f61af7fff07d7e97979d1ab854</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ModelFileExtensionType</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af65daba1b2dff1c39a106d9bab4f29e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>aba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a17af40dd678c172346b88297db676c27</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>aba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aafc05b31fb1ff62fa45d7a7ad7b9b83a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const container::aligned_vector&lt; ForceDerived &gt; &amp;fext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8083f70afd847e1a2b54eb125a93d5e8</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>alphaSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae9d1c38b8973397751e56ff1994cf366</anchor>
      <arglist>(const Scalar alpha, const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Vector3::Scalar, 3, 3, Vector3::Options &gt;</type>
      <name>alphaSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a987875f2366ba7e03745723c88801004</anchor>
      <arglist>(const Scalar alpha, const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>D1::Scalar PINOCCHIO_DEPRECATED</type>
      <name>angleBetweenQuaternions</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2d2b7a259f84f25827d4dbfd04af568c</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D1 &gt; &amp;q1, const Eigen::QuaternionBase&lt; D2 &gt; &amp;q2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendGeometryModel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a32df450a53e4520cdb93c2e84bba0417</anchor>
      <arglist>(GeometryModel &amp;geomModel1, const GeometryModel &amp;geomModel2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendModel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9f0ad32c7f30d577c1a42bfaff71647d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelA, const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelB, FrameIndex frameInModelA, const SE3Tpl&lt; Scalar, Options &gt; &amp;aMb, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendModel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac30b13d4acf283ad8074776a2ea58682</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelA, const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;modelB, const GeometryModel &amp;geomModelA, const GeometryModel &amp;geomModelB, FrameIndex frameInModelA, const SE3Tpl&lt; Scalar, Options &gt; &amp;aMb, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geomModel)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>axisLabel</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7a07b7bf9a1f9f0d7d95ecc9b000d7a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>bias</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>acac31723e196ccf4814db0e3c1a68598</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_aba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9868f32113862bda0c539eb5256ceed4</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata, const Eigen::MatrixBase&lt; Matrix6Type &gt; &amp;I, const bool update_I)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_first_order</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5cb87132f96527e3e3b29c45c1f1700c</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calc_zero_order</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9b71f4f705d538260a8744042859e63c</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>CastType&lt; NewScalar, JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &gt;::type</type>
      <name>cast_joint</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4c840eac08ce796d40c2dc8cec34c291</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>ccrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad37c08502defc1f71f385c82f701d515</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a429f890fcf3471e5432ba9cf55cd5666</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4f458b0b39322756ce0d7bc77d9d493c</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0874e4cd0ff771cf5744be1d6f8ebb92</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa8efddfef4810525cb1b31d54a1b0672</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const int LEVEL, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>centerOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2848bb63c4109cc4d7c5320418ab04c8</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkData</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a412c3880992c864f0223ba280ddf737b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ModelFileExtensionType</type>
      <name>checkModelFileExtension</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a74293805b9a52087c9fa447a3ba1050e</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkVersionAtLeast</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a99ce124d6accd23b7901c9b4a9edd882</anchor>
      <arglist>(unsigned int major_version, unsigned int minor_version, unsigned int patch_version)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a25641e8813ff7f8c34adf605f588b16f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;aba_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;aba_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;aba_partial_dtau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4ea4283dc0fb0d2c738bf1bde0e7e3a0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;aba_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;aba_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;aba_partial_dtau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a253867c52af4821c12e210c63727a43b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeABADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>adb5d4f92fe6de1c5660a525e15567952</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeAllTerms</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a98b0f68f6b24d6c21fb4cfce7dc47dbc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBodyRadius</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad852db1f65a4cdf9e09e27aa54427355</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const GeometryModel &amp;geomModel, GeometryData &amp;geomData)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Force &amp;</type>
      <name>computeCentroidalDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae965665a54e52dd664caf6e0d5c9ce05</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Force &amp;</type>
      <name>computeCentroidalDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab9b243f38fa25f74e314d4d7d37d2f3a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCentroidalDynamicsDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a344d8d1d4380d93f228a880b0c3361fc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const Eigen::MatrixBase&lt; Matrix6xLike0 &gt; &amp;dh_dq, const Eigen::MatrixBase&lt; Matrix6xLike1 &gt; &amp;dhdot_dq, const Eigen::MatrixBase&lt; Matrix6xLike2 &gt; &amp;dhdot_dv, const Eigen::MatrixBase&lt; Matrix6xLike3 &gt; &amp;dhdot_da)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeCollision</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa6d876b9335d68cae0c4c50996a800e0</anchor>
      <arglist>(const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const PairIndex &amp;pairId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeCollisions</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a75b1b19407b65aef0955d837fbd9cbb2</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool stopAtFirstCollision=false)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>computeCoriolisMatrix</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9d218e485952707a1103003d8fbc2622</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>fcl::DistanceResult &amp;</type>
      <name>computeDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>adcd79d0f4f2b5084215a2132bdb2c2bc</anchor>
      <arglist>(const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const PairIndex &amp;pairId)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED std::size_t</type>
      <name>computeDistances</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa68a09adb3aea19efba8b266faa8f718</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::VectorXd &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>computeDistances</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae98eb1df0dd542bf8f7e261c2d1d9153</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>computeDistances</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a20e95e39016849e98f95c8a2925b3535</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematicsDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a872e7af22fc1e5898fb44dcda16689d0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>computeGeneralizedGravity</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abba9acf2f9cc47873eb164e75171c25b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeGeneralizedGravityDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7221574a13491b62778144644141ad23</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; ReturnMatrixType &gt; &amp;gravity_partial_dq)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>computeJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1c7e37909d8e911053aa0cc58b880fc7</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>computeJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abced80fac62adc6c5293ce31d783dc38</anchor>
      <arglist>(const Model &amp;model, Data &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>computeJacobiansTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a18d587104bfb1c925b55836af2adcc45</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q, const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>computeJointJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa94eb0eb9e51486f618e49617a724d9f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>computeJointJacobians</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a020188c32122c35fa5f08b0b92a22d6d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>computeJointJacobiansTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3684c6d8fb1a0601ed6e16af89ca6a5f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::RowMatrixXs &amp;</type>
      <name>computeMinverse</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>afed6d372039ce2492aa6e273ac625ba0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2f52a3ae71206c9d57b2ddcd72cdc680</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;rnea_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;rnea_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;rnea_partial_da)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac3ba12320d0ea93687fb9d132fc9c76a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext, const Eigen::MatrixBase&lt; MatrixType1 &gt; &amp;rnea_partial_dq, const Eigen::MatrixBase&lt; MatrixType2 &gt; &amp;rnea_partial_dv, const Eigen::MatrixBase&lt; MatrixType3 &gt; &amp;rnea_partial_da)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a792a17cdc02c7ba97fe065a3d8310f20</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRNEADerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad893875b3f07842bae2f3a0fb2cabe78</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const container::aligned_vector&lt; ForceTpl&lt; Scalar, Options &gt; &gt; fext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSubtreeMasses</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0c09ef7830d6d96012559d7487f7759b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>computeTotalMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1c0edadfd90f1137df262a38d43f1011</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>computeTotalMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a71187ab703325a08e05f0d5126d435ce</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintTpl&lt; Eigen::Dynamic, Scalar, Options &gt;</type>
      <name>constraint_xd</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6d0eb68a7e6602fc12cfe0e9096c4a76</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a73027b3c9603c2abd1e5d99857dea8b7</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;origin, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;dest, int LEVEL)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>crba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad3da115c312299adc15978286aa82b10</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>crbaMinimal</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a36288ce8586bb7cb0cc5a83eefe04646</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt;</type>
      <name>createData</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1974ab87499a774521fd59eaea94bff6</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cross</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af0e2adf0128417608c54e341671e9691</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3xIn &gt; &amp;Min, const Eigen::MatrixBase&lt; Matrix3xOut &gt; &amp;Mout)</arglist>
    </member>
    <member kind="function">
      <type>Matrix3x</type>
      <name>cross</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aae6f4f3e9567553f2e1cd49f0ea22276</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3x &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix6x &amp;</type>
      <name>dccrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7003a73837453cc1c4adf3906e0b1aaf</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool PINOCCHIO_DEPRECATED</type>
      <name>defineSameRotation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad2bb6c6ed94e3ad628b568e70fc4b0d8</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D1 &gt; &amp;q1, const Eigen::QuaternionBase&lt; D2 &gt; &amp;q2, const typename D1::RealScalar &amp;prec=Eigen::NumTraits&lt; typename D1::Scalar &gt;::dummy_precision())</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, Eigen::Dynamic, Options &gt;</type>
      <name>dinv_inertia</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab8bc8b2efd1ea5aa962a97b07735823b</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>emptyForwardPass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aec46c0e7add16e2918b545f38e82b1d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Vector3Like::Scalar, 3, 3, Vector3Like::Options &gt;</type>
      <name>exp3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae39f3d8713c3220e04ff41a6b94e859b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; typename MotionDerived::Scalar, typename MotionDerived::Vector3::Options &gt;</type>
      <name>exp6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ae6181e1bb7dabb391f6b5da571cf3906</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;nu)</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; typename Vector6Like::Scalar, Vector6Like::Options &gt;</type>
      <name>exp6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a327ad93c5db523ea7e3f61d66c39fe97</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector6Like &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>extractPathFromEnvVar</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5f066ca8d343e1c0cfe53a868e6440e3</anchor>
      <arglist>(const std::string &amp;env_var_name, const std::string &amp;delimiter=&quot;:&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af39544a6069ddbb3510eb8cf6ceca33f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>finiteDifferenceIncrement</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a56c265ac1aab2ab1f66f11438e659ac8</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>void PINOCCHIO_DEPRECATED</type>
      <name>firstOrderNormalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a66b074b09cb8c63e43cd0d7b7b2c4a06</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>forwardDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8b7d42cb4e87d9de4ae108919fa3d2cc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;tau, const Eigen::MatrixBase&lt; ConstraintMatrixType &gt; &amp;J, const Eigen::MatrixBase&lt; DriftVectorType &gt; &amp;gamma, const Scalar inv_damping=0., const bool updateKinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a97be7e9cd332a591b1431e30bab2c51e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5c8fc7279a9bccdcad61964d8468b49d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a601f17282020e4bb7d3e6f72b934fbe4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>frameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a43c6840a09e0308310ae7cdef7152971</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const FrameIndex frameId, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>framesForwardKinematics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a89903169c76d3c55bacaa2479bd39f76</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCenterOfMassVelocityDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af54c11ef0377ff24c383e0c8e8df1cb1</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Matrix3xOut &gt; &amp;vcom_partial_dq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCentroidalDynamicsDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a42b251834df6908dbb7cc2f3d921b7fc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Matrix6xLike1 &gt; &amp;dh_dq, const Eigen::MatrixBase&lt; Matrix6xLike1 &gt; &amp;dhdot_dq, const Eigen::MatrixBase&lt; Matrix6xLike2 &gt; &amp;dhdot_dv, const Eigen::MatrixBase&lt; Matrix6xLike3 &gt; &amp;dhdot_da)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Vector3 &amp;</type>
      <name>getComFromCrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a865859a11422761cb1344bb9e11b35df</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>getFrameAcceleration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a06640acf7c69ffc92650e4313bded3ff</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameAcceleration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aef7023abad1eb07e3b952eb58a1b1a1e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const MotionDense&lt; MotionLike &gt; &amp;frame_a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFrameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7f7b9b75e27037e119bf53b51c2cbf47</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xLike &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af5947bb371741b04c5da1f79156edf34</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::FrameIndex frame_id, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab4c178129aa70ebfc4a9715ada2bdb96</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const Eigen::MatrixBase&lt; Matrix6xLike &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFrameJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a11687f5ab65ead25740dbe17b0b96fb6</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xLike &gt; &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a903f3f58d819923d173008c23e0654a1</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::FrameIndex frameId, Data::Matrix6x &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>getFrameVelocity</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab6978319c102621e12db0e3aa465ae13</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getFrameVelocity</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a73d25ece6b11333365bb8ff177911a47</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id, const MotionDense&lt; MotionLike &gt; &amp;frame_v)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad22964c42e4ee169dd7489388e5d4cf3</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>getJacobianComFromCrba</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac52ba2174f0159848030b9607a1253af</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aaadf4069c928394bda6102b96808f81e</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointAccelerationDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1910388040b8ff698fb59e1eac6f4bc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Model::JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xOut1 &gt; &amp;v_partial_dq, const Eigen::MatrixBase&lt; Matrix6xOut2 &gt; &amp;a_partial_dq, const Eigen::MatrixBase&lt; Matrix6xOut3 &gt; &amp;a_partial_dv, const Eigen::MatrixBase&lt; Matrix6xOut4 &gt; &amp;a_partial_da)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abadfcd21d13fa17865a189e4b47acca9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a02f079abebe1d5eb28271d3b674fbbb8</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a50c89f26935985f6fc9c96908bb855d0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>getJointJacobianTimeVariation</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a453a34c1ccaf873deb2cc0db202a2b01</anchor>
      <arglist>(const Model &amp;model, const Data &amp;data, const Model::JointIndex jointId, Data::Matrix6x &amp;dJ)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getJointVelocityDerivatives</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac19cb861bb6d753b7ec828c9237db4f7</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Model::JointIndex jointId, const ReferenceFrame rf, const Eigen::MatrixBase&lt; Matrix6xOut1 &gt; &amp;v_partial_dq, const Eigen::MatrixBase&lt; Matrix6xOut2 &gt; &amp;v_partial_dv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getKKTContactDynamicMatrixInverse</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6ebc0769bbc5aa031a70dedd631b3764</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConstraintMatrixType &gt; &amp;J, const Eigen::MatrixBase&lt; KKTMatrixType &gt; &amp;MJtJ_inv)</arglist>
    </member>
    <member kind="function">
      <type>JointIndex</type>
      <name>id</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3f1eb0ed5d11c826992c8ff058bf1dcf</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>idx_q</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad71bd4f97bc5cf78f8fecc2b37682ca2</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>idx_v</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7c675de46e040b485dd0d90e0d5e6379</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>impulseDynamics</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa39328a4233a03fcb5c5fe4a1c347416</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v_before, const Eigen::MatrixBase&lt; ConstraintMatrixType &gt; &amp;J, const Scalar r_coeff=0, const bool updateKinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a287574ae016b5828cd9ce36d3824770e</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg, const Eigen::MatrixBase&lt; ConfigIn_t &gt; &amp;q, const Eigen::MatrixBase&lt; Tangent_t &gt; &amp;v, const Eigen::MatrixBase&lt; ConfigOut_t &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>jacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aaedd3b476eb8b400c95484260c3a4cd7</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q, const Model::JointIndex jointId, Data::Matrix6x &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2c674c3969b30947e8f4128214d45453</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool computeSubtreeComs, const bool updateKinematics)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa68008ef776e6959af9884eff4514633</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>jacobianCenterOfMass</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a5a9107628d54b00bb72c021cb44dc89d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const bool computeSubtreeComs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jexp3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aac08f53125057572ac5838ec88164963</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;r, const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;Jexp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jexp6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aafe310d093976e3a3be626848c34bfda</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;nu, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;Jexp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jlog6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab17df97cd3cbec6801112c074a8b5377</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;M, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;Jlog)</arglist>
    </member>
    <member kind="function">
      <type>SE3Tpl&lt; Scalar, Options &gt;</type>
      <name>joint_transform</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aefa0ea0a3af3e75e551146593ed25058</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>jointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad90c83a5f87f766625218793316cbe40</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const JointIndex jointId, const Eigen::MatrixBase&lt; Matrix6Like &gt; &amp;J)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED const Data::Matrix6x &amp;</type>
      <name>jointJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a663e44bbdbc0c2c3aec1524cb4f162de</anchor>
      <arglist>(const Model &amp;model, Data &amp;data, const Eigen::VectorXd &amp;q, const Model::JointIndex jointId)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>kineticEnergy</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad623f1f13203331dffb22f4f51544635</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const bool update_kinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Matrix3Like::Scalar, 3, 1, Matrix3Like::Options &gt;</type>
      <name>log3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a492b8cd5fc732ad7f17b1bba731f64e6</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;R, typename Matrix3Like::Scalar &amp;theta)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Matrix3Like::Scalar, 3, 1, Matrix3Like::Options &gt;</type>
      <name>log3</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8e47a4b66d2ef7557da6100a59810a11</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>log6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0b9165aaf6d0b46d9aa2b09d96f83eaf</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; typename Matrix4Like::Scalar, Eigen::internal::traits&lt; Matrix4Like &gt;::Options &gt;</type>
      <name>log6</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4cc4429a3d2190626fc6a3a5b383d23e</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix4Like &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>AlgorithmCheckerList&lt; ParentChecker, CRBAChecker, ABAChecker &gt;</type>
      <name>makeDefaultCheckerList</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af526e1ce1a83745dddbe50b0747d0c8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MotionTpl&lt; Scalar, Options &gt;</type>
      <name>motion</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0cae76ed328e3dd51c6a0facc18a3373</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab233aae353b5732efdb8208e99c0ee32</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename LieGroupCollection::Scalar, Eigen::Dynamic, 1, LieGroupCollection::Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aaecd045e49ac75aeffcf7df22b156274</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>nonLinearEffects</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1fc4c85c53a6d7285863b73c56c955c</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nq</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a11034b5c7479bf0a48edb625df818e13</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nq</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aab744aa4e8bab6a7567d40d6d3a968bf</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nv</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0b8dbab230f00794ed4b88f5a4602850</anchor>
      <arglist>(const LieGroupGenericTpl&lt; LieGroupCollection &gt; &amp;lg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nv</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9f22c4db0ab7093c7f8276a140320d88</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>traits&lt; F1 &gt;::ForcePlain</type>
      <name>operator*</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>adf68571a3bd5d9815bb06759e70d9994</anchor>
      <arglist>(const typename traits&lt; F1 &gt;::Scalar alpha, const ForceDense&lt; F1 &gt; &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>traits&lt; M1 &gt;::MotionPlain</type>
      <name>operator^</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a367b548b411d8bf0199892b46ddd5d93</anchor>
      <arglist>(const MotionDense&lt; M1 &gt; &amp;v1, const MotionDense&lt; M2 &gt; &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>const Scalar</type>
      <name>PI</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8d70a2059ad808b77877e920e9b181bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>potentialEnergy</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac4d15224307645861962b0c4a7be8813</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const bool update_kinematics=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>printVersion</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a359eb29491fe39a5e51e9a51d84c7f9f</anchor>
      <arglist>(const std::string &amp;delimiter=&quot;.&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>randomStringGenerator</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1b50c7ed93765739fe33efb660ff4793</anchor>
      <arglist>(const int len)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>retrieveResourcePath</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ace99575de78dca42b0b7fcc916454c8f</anchor>
      <arglist>(const std::string &amp;string, const std::vector&lt; std::string &gt; &amp;package_dirs)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>rnea</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a33f3f128c9cf62407691acaedd28e68d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::TangentVectorType &amp;</type>
      <name>rnea</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a26d94ea6486d0eed1934b94767124a01</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType1 &gt; &amp;v, const Eigen::MatrixBase&lt; TangentVectorType2 &gt; &amp;a, const container::aligned_vector&lt; ForceDerived &gt; &amp;fext)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>rosPaths</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6a0530030c6aa042443e290024aaba91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndexes</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a631864068e479634131c54ca2c5616cd</anchor>
      <arglist>(JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel, JointIndex id, int q, int v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>shortname</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad6699ebd8ac20951fc7f6614b50ff423</anchor>
      <arglist>(const JointModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jmodel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SINCOS</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6d2e22bd16d5dc9bf54dd389cc429384</anchor>
      <arglist>(const Scalar &amp;a, Scalar *sa, Scalar *ca)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>afff79033b11ec2b30cba3016080747f7</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename D::Scalar, 3, 3, D::Options &gt;</type>
      <name>skew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a4fc2569a0ca4fa4f5daa6434411a93b8</anchor>
      <arglist>(const Eigen::MatrixBase&lt; D &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>skewSquare</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0548b1222261b39c25fc82ba423d8e60</anchor>
      <arglist>(const Eigen::MatrixBase&lt; V1 &gt; &amp;u, const Eigen::MatrixBase&lt; V2 &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename V1::Scalar, 3, 3, V1::Options &gt;</type>
      <name>skewSquare</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>acf305d0879ab1289a781454534cd4292</anchor>
      <arglist>(const Eigen::MatrixBase&lt; V1 &gt; &amp;u, const Eigen::MatrixBase&lt; V2 &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, 6, Eigen::Dynamic, Options &gt;</type>
      <name>u_inertia</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a834c8ccc3358a4b1c1fdcd7a8667cde0</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, 6, Eigen::Dynamic, Options &gt;</type>
      <name>udinv_inertia</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a91bb349a2440679ddb9a5bb14e1274f2</anchor>
      <arglist>(const JointDataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;jdata)</arglist>
    </member>
    <member kind="function">
      <type>void PINOCCHIO_DEPRECATED</type>
      <name>uniformRandom</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7ff7c795c2c77085f9ac47ddf6b3c71b</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>afbd162eb86b7643916c527756c2863a1</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M, const Eigen::MatrixBase&lt; Vector3 &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename Matrix3::Scalar, 3, 1, Matrix3::Options &gt;</type>
      <name>unSkew</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a59441c3f837a4bc3f39deaa66bc7ad82</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Matrix3 &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::SE3 &amp;</type>
      <name>updateFramePlacement</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0b5e76c08cdf92d6eeb5bfe3d8e439bc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::FrameIndex frame_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFramePlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a48c4aeb9f48c48a5965f44a3e18c82b2</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a57e816ce013e3746c7bfb756e9206c5e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGeometryPlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>acf09df6afb8750765f27bf1d0d25dfdf</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const GeometryModel &amp;geomModel, GeometryData &amp;geomData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGlobalPlacements</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad57a36f3b7587d1615358e34f66bdbee</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac6d83ab51df727a51d3f6caeaa0ff5d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac6cf7958cdd5fe812d3104d6586c17c3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9cfaef3e7c0afbd5a37e3eb69dce9bd0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2141d11fe93ac3cec942022202c3f878</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;dvout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a058f23612d01ee8badcd0dfc52d9a95b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;dvout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a718079ad7afb1730ac3ac8d1b58c1970</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a922787fd5fd5fc7123b91804fa6956fa</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8aa12c4444aa4425160cd60218a112d3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3ba46d5ad53ac70f33da313cb8f24a88</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1ea82f003a9814a0b1e127d42d32d73</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac45aa354d1462be2797a57f58a38d638</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a69a8ff2baaf83858c7047d61c0bbc8a4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianMatrixType &gt; &amp;J, const ArgumentPosition arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a46d4733dfbc21527c620e42d53081c39</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianMatrixType &gt; &amp;J, const ArgumentPosition arg)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistanceSum</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7eaa9b06d6b403965e1ef356e615fd01</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistanceSum</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab472f8bc3f619483d1a34c876e233ce6</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa902ab2bd9f27aed5afcb263a8f76d0e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ace191a5497cd1d24d811990a73f9aedc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abe8106929836bb8bb3337f9033dfa91b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a31f1fe39670df02204886d1542b0b34f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af93664936d67b9f00ea0045ae92d6380</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q1, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q2, const Scalar &amp;prec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a49dc8c1549ec7ea90c16e35b34b8ce54</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q1, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q2, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8c0eedf0b4f303db4c9dc7fb794ac891</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVector &gt; &amp;q, const Eigen::MatrixBase&lt; JacobianMatrix &gt; &amp;jacobian)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9c29fb6451bb60d5c88ccd1d27fe1af4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVector &gt; &amp;q, const Eigen::MatrixBase&lt; JacobianMatrix &gt; &amp;jacobian)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorType</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a97b83733a4f2430462868593b0597586</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorType</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7ee7050f6e3885edb7899caa22395b78</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>interpolate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a400f1fdfd043b0df51471771123cbd95</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Scalar &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8800f19ff99b1951f5eab32340130c93</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3d6798906dfee0ada413efae69f92fe5</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aff2aaa74a1197cd1c566ad1050e5e843</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6603005e61f44494fc60c849c13b6d0d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad3dcb99a1a65e940bb4837bead10c6df</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad7cc1483500aa546b1a920d327fb5b03</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1cfe8f3d02bd8eeb9db87ea9daca0919</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6ec116e7d3c5a22160793c8a8cf96d8a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1, Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0030d83dd0705ec95c4ebad6bb0629d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1, Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a566ad2fe023f1fd92e926efb22bcad7a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac6d83ab51df727a51d3f6caeaa0ff5d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac6cf7958cdd5fe812d3104d6586c17c3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interpolate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9cfaef3e7c0afbd5a37e3eb69dce9bd0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Scalar &amp;u, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a2141d11fe93ac3cec942022202c3f878</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;dvout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a058f23612d01ee8badcd0dfc52d9a95b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;dvout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a718079ad7afb1730ac3ac8d1b58c1970</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a922787fd5fd5fc7123b91804fa6956fa</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8aa12c4444aa4425160cd60218a112d3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3ba46d5ad53ac70f33da313cb8f24a88</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac1ea82f003a9814a0b1e127d42d32d73</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ac45aa354d1462be2797a57f58a38d638</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ReturnType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a69a8ff2baaf83858c7047d61c0bbc8a4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianMatrixType &gt; &amp;J, const ArgumentPosition arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dIntegrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a46d4733dfbc21527c620e42d53081c39</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v, const Eigen::MatrixBase&lt; JacobianMatrixType &gt; &amp;J, const ArgumentPosition arg)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistanceSum</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7eaa9b06d6b403965e1ef356e615fd01</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>squaredDistanceSum</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ab472f8bc3f619483d1a34c876e233ce6</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aa902ab2bd9f27aed5afcb263a8f76d0e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>distance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ace191a5497cd1d24d811990a73f9aedc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>abe8106929836bb8bb3337f9033dfa91b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalize</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a31f1fe39670df02204886d1542b0b34f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;qout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>af93664936d67b9f00ea0045ae92d6380</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q1, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q2, const Scalar &amp;prec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a49dc8c1549ec7ea90c16e35b34b8ce54</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q1, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q2, const Scalar &amp;prec=Eigen::NumTraits&lt; Scalar &gt;::dummy_precision())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8c0eedf0b4f303db4c9dc7fb794ac891</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVector &gt; &amp;q, const Eigen::MatrixBase&lt; JacobianMatrix &gt; &amp;jacobian)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateCoeffWiseJacobian</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a9c29fb6451bb60d5c88ccd1d27fe1af4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVector &gt; &amp;q, const Eigen::MatrixBase&lt; JacobianMatrix &gt; &amp;jacobian)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorType</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a97b83733a4f2430462868593b0597586</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorType</type>
      <name>integrate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a7ee7050f6e3885edb7899caa22395b78</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q, const Eigen::MatrixBase&lt; TangentVectorType &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>interpolate</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a400f1fdfd043b0df51471771123cbd95</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1, const Scalar &amp;u)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a8800f19ff99b1951f5eab32340130c93</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>difference</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a3d6798906dfee0ada413efae69f92fe5</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>aff2aaa74a1197cd1c566ad1050e5e843</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ConfigVectorIn1</type>
      <name>squaredDistance</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6603005e61f44494fc60c849c13b6d0d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;q0, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;q1)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad3dcb99a1a65e940bb4837bead10c6df</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>ad7cc1483500aa546b1a920d327fb5b03</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const Eigen::MatrixBase&lt; ConfigVectorIn1 &gt; &amp;lowerLimits, const Eigen::MatrixBase&lt; ConfigVectorIn2 &gt; &amp;upperLimits)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a1cfe8f3d02bd8eeb9db87ea9daca0919</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>randomConfiguration</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a6ec116e7d3c5a22160793c8a8cf96d8a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1, Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a0030d83dd0705ec95c4ebad6bb0629d9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; Scalar, Eigen::Dynamic, 1, Options &gt;</type>
      <name>neutral</name>
      <anchorfile>namespacepinocchio.html</anchorfile>
      <anchor>a566ad2fe023f1fd92e926efb22bcad7a</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::buildModels</name>
    <filename>namespacepinocchio_1_1buildModels.html</filename>
    <member kind="function">
      <type>void</type>
      <name>humanoid</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>a465d840b56978859523b353bbb6a013f</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, bool usingFF=true)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>humanoid2d</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>a8498ea70933552e082e73bda8d03bbfd</anchor>
      <arglist>(Model &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>humanoidGeometries</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>a2c6f7644017141ff6291d487de36c46b</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>humanoidRandom</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>af77eaa0f180aaaad02fbb34c13d28033</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, bool usingFF=true)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>humanoidSimple</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>aaa496a9b9607e8fc9a8dcd5a97de644a</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, bool usingFF=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>manipulator</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>accd83f24a102dbe4845cedc1c9a52f4b</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>manipulatorGeometries</name>
      <anchorfile>namespacepinocchio_1_1buildModels.html</anchorfile>
      <anchor>ada2e196460d41ed2370902462cc51014</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geom)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::cholesky</name>
    <filename>namespacepinocchio_1_1cholesky.html</filename>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>computeMinv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>acfaa6a35556fe4b225cf8b3ca8559a5e</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;Minv)</arglist>
    </member>
    <member kind="function">
      <type>const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::MatrixXs &amp;</type>
      <name>decompose</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a8dc8ac71750bc049c316ed8db347444f</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Mat</type>
      <name>Mv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>af10f75ff4b502693ff262a1267e00bc3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;min)</arglist>
    </member>
    <member kind="function">
      <type>MatRes &amp;</type>
      <name>Mv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>ac63c047d6954db023a7c9dcd2a81efd0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;min, const Eigen::MatrixBase&lt; MatRes &gt; &amp;mout)</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>solve</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a86cb6fd523777dd4e817685931caf5a3</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>UDUtv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a428d7c7f6901cfb378c775e9ce215b63</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>Uiv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a6eb82b6c9e6f8445e990553b813bc2c0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>Utiv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a55528b3d71ccd495bde2536d0d67b6a7</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>Utv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a7ffef17738ce992557ec1cf83beec351</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>Uv</name>
      <anchorfile>namespacepinocchio_1_1cholesky.html</anchorfile>
      <anchor>a60f92addc279fa892c342742e4ef8594</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; Mat &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::container</name>
    <filename>namespacepinocchio_1_1container.html</filename>
    <class kind="struct">pinocchio::container::aligned_vector</class>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::forceSet</name>
    <filename>namespacepinocchio_1_1forceSet.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>motionAction</name>
      <anchorfile>namespacepinocchio_1_1forceSet.html</anchorfile>
      <anchor>ada943976f92528eb8a01a300bb7c5f56</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;v, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>motionAction</name>
      <anchorfile>namespacepinocchio_1_1forceSet.html</anchorfile>
      <anchor>a7c33805b6cfb4b159fbb7b9af4bd014b</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;v, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3Action</name>
      <anchorfile>namespacepinocchio_1_1forceSet.html</anchorfile>
      <anchor>a13277d4a929fcf1a65fe98f7eade52c5</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3Action</name>
      <anchorfile>namespacepinocchio_1_1forceSet.html</anchorfile>
      <anchor>a1eb9c4d5ed73dd2585bba1abd999e5aa</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3ActionInverse</name>
      <anchorfile>namespacepinocchio_1_1forceSet.html</anchorfile>
      <anchor>a85f718fc0de4f19ad799daa4fc374f89</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3ActionInverse</name>
      <anchorfile>namespacepinocchio_1_1forceSet.html</anchorfile>
      <anchor>ae3047594e36e574e7ff0bedf7cea2285</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::lua</name>
    <filename>namespacepinocchio_1_1lua.html</filename>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::motionSet</name>
    <filename>namespacepinocchio_1_1motionSet.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>act</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a780f1eb47db6a1699180e971c05adf64</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Mat &gt; &amp;iV, const ForceDense&lt; ForceDerived &gt; &amp;f, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>act</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a153f58c8b0953daf520c92180a07457b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Mat &gt; &amp;iV, const ForceDense&lt; ForceDerived &gt; &amp;f, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>inertiaAction</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a6cb43ad12cb0ebf0421022db2ecbb573</anchor>
      <arglist>(const InertiaTpl&lt; Scalar, Options &gt; &amp;I, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>inertiaAction</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a8d588022909af2938fb3c60d52972539</anchor>
      <arglist>(const InertiaTpl&lt; Scalar, Options &gt; &amp;I, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>motionAction</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>ae22237945419e578dc6a625773e41ef7</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;v, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>motionAction</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a4b7c3bb5f551ae32df2c6b5cfd8942ae</anchor>
      <arglist>(const MotionDense&lt; MotionDerived &gt; &amp;v, const Eigen::MatrixBase&lt; Mat &gt; &amp;iF, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3Action</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>ad05b9382f7f8e3aea8969d5bbdc3a61b</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iV, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jV)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3Action</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>ad52fcd2e45f862c472769d0418718a56</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iV, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jV)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3ActionInverse</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a8c02f537e690fe74821f2519a4d696f6</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iV, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jV)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>se3ActionInverse</name>
      <anchorfile>namespacepinocchio_1_1motionSet.html</anchorfile>
      <anchor>a4dc16d6cda1e40935105f87c3b493d1b</anchor>
      <arglist>(const SE3Tpl&lt; Scalar, Options &gt; &amp;m, const Eigen::MatrixBase&lt; Mat &gt; &amp;iV, Eigen::MatrixBase&lt; MatRet &gt; const &amp;jV)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::quaternion</name>
    <filename>namespacepinocchio_1_1quaternion.html</filename>
    <member kind="function">
      <type>D1::Scalar</type>
      <name>angleBetweenQuaternions</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>a3d45725fac13be55e80050b998389d82</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D1 &gt; &amp;q1, const Eigen::QuaternionBase&lt; D2 &gt; &amp;q2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>defineSameRotation</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>ac054fafc1993ad7ecfeceb88b276a44d</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D1 &gt; &amp;q1, const Eigen::QuaternionBase&lt; D2 &gt; &amp;q2, const typename D1::RealScalar &amp;prec=Eigen::NumTraits&lt; typename D1::Scalar &gt;::dummy_precision())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exp3</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>a0aa22fe1862affd1b021c6357d0f0d93</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v, Eigen::QuaternionBase&lt; QuaternionLike &gt; &amp;quat_out)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaternion&lt; typename Vector3Like::Scalar, Vector3Like::Options &gt;</type>
      <name>exp3</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>a4982bc7a2a79bff05bc78b2908caa0a2</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>firstOrderNormalize</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>a3b92ee3536dc347822f8ba9d764d8d3b</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; D &gt; &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jexp3CoeffWise</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>addbd1b246b1a08c8a5e8ddaef250109b</anchor>
      <arglist>(const Eigen::MatrixBase&lt; Vector3Like &gt; &amp;v, const Eigen::MatrixBase&lt; Matrix43Like &gt; &amp;Jexp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jlog3</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>a79ca19f810141fbe03878cb7d6a8da83</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; QuaternionLike &gt; &amp;quat, const Eigen::MatrixBase&lt; Matrix3Like &gt; &amp;Jlog)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename QuaternionLike::Scalar, 3, 1, typename QuaternionLike::Vector3::Options &gt;</type>
      <name>log3</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>ab1ae93b84eda64ca178033934c1b6e31</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; QuaternionLike &gt; &amp;quat, typename QuaternionLike::Scalar &amp;theta)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; typename QuaternionLike::Scalar, 3, 1, typename QuaternionLike::Vector3::Options &gt;</type>
      <name>log3</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>abb0c952dbdc2993fc00b50c8f91a15f8</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; QuaternionLike &gt; &amp;quat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniformRandom</name>
      <anchorfile>namespacepinocchio_1_1quaternion.html</anchorfile>
      <anchor>afab9a7726ac4c77dcd2b67821ea5e36e</anchor>
      <arglist>(const Eigen::QuaternionBase&lt; Derived &gt; &amp;q)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::regressor</name>
    <filename>namespacepinocchio_1_1regressor.html</filename>
    <member kind="function">
      <type>DataTpl&lt; Scalar, Options, JointCollectionTpl &gt;::Matrix3x &amp;</type>
      <name>computeStaticRegressor</name>
      <anchorfile>namespacepinocchio_1_1regressor.html</anchorfile>
      <anchor>ad880ff73891bdcf801c32d2d5bc75ad0</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, DataTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;data, const Eigen::MatrixBase&lt; ConfigVectorType &gt; &amp;q)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::srdf</name>
    <filename>namespacepinocchio_1_1srdf.html</filename>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>getNeutralConfiguration</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>abe41ce4d7638d93b185990ff1bb87c81</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::ConfigVectorType</type>
      <name>getNeutralConfigurationFromSrdf</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>af697015780eec95c08a0c47b816c6251</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadReferenceConfigurations</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>a691ad7cf74f90f9ef2b98d087a8d18df</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadReferenceConfigurationsFromXML</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>aa35bbf64713469d017053c5f44a464b5</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, std::istream &amp;xmlStream, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadRotorParameters</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>aaf31a4ea6c3ab99633f05acfd30da23b</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED bool</type>
      <name>loadRotorParamsFromSrdf</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>adaf931c4127695367390bf28c2d37ca6</anchor>
      <arglist>(ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollisionPairs</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>ab22cf4b17fa599de7d8da158ff78cc2d</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geomModel, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>removeCollisionPairsFromSrdf</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>ac612656815743fabd543586f45f5bffc</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geomModel, const std::string &amp;filename, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>PINOCCHIO_DEPRECATED void</type>
      <name>removeCollisionPairsFromSrdfString</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>ae4917b0c8cac4f4374cec176613d0290</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geomModel, const std::string &amp;xmlString, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollisionPairsFromXML</name>
      <anchorfile>namespacepinocchio_1_1srdf.html</anchorfile>
      <anchor>a2611946f9758ba5c7856f275585f36d1</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, GeometryModel &amp;geomModel, const std::string &amp;xmlString, const bool verbose=false)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>pinocchio::urdf</name>
    <filename>namespacepinocchio_1_1urdf.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>CartesianAxis</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a24de679725508b8eb9c1f3a971b19627</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GeometryModel &amp;</type>
      <name>buildGeom</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a1c6a3c34e0c6cd342ae5f06b0ae272e9</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const GeometryType type, GeometryModel &amp;geomModel, const std::vector&lt; std::string &gt; &amp;packageDirs=std::vector&lt; std::string &gt;(),::hpp::fcl::MeshLoaderPtr meshLoader=::hpp::fcl::MeshLoaderPtr())</arglist>
    </member>
    <member kind="function">
      <type>GeometryModel &amp;</type>
      <name>buildGeom</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a2d4d5e0be6ec4288a707e372d12dbae4</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::string &amp;filename, const GeometryType type, GeometryModel &amp;geomModel, const std::string &amp;packageDir, hpp::fcl::MeshLoaderPtr meshLoader=hpp::fcl::MeshLoaderPtr())</arglist>
    </member>
    <member kind="function">
      <type>GeometryModel &amp;</type>
      <name>buildGeom</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a8058ce6f27e1cebcaaa2c9e8c7694cac</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::istream &amp;xmlStream, const GeometryType type, GeometryModel &amp;geomModel, const std::vector&lt; std::string &gt; &amp;packageDirs=std::vector&lt; std::string &gt;(), hpp::fcl::MeshLoaderPtr meshLoader=hpp::fcl::MeshLoaderPtr())</arglist>
    </member>
    <member kind="function">
      <type>GeometryModel &amp;</type>
      <name>buildGeom</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>ab9225094fa2b762d820e7643d28f9e24</anchor>
      <arglist>(const ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const std::istream &amp;xmlStream, const GeometryType type, GeometryModel &amp;geomModel, const std::string &amp;packageDir, hpp::fcl::MeshLoaderPtr meshLoader=hpp::fcl::MeshLoaderPtr())</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;</type>
      <name>buildModel</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a9222e9df7754648584079ac37836c163</anchor>
      <arglist>(const std::string &amp;filename, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::JointModel &amp;rootJoint, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;</type>
      <name>buildModel</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a4a7ad8b23f7ea794ca939b152ffc489c</anchor>
      <arglist>(const std::string &amp;filename, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;</type>
      <name>buildModel</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>aaaf564ed54410da8061e2db7e2581b16</anchor>
      <arglist>(const ::urdf::ModelInterfaceSharedPtr &amp;urdfTree, const typename ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt;::JointModel &amp;rootJoint, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;</type>
      <name>buildModel</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>ac98ef0ced8a5579de0491a9211f46c44</anchor>
      <arglist>(const ::urdf::ModelInterfaceSharedPtr &amp;urdfTree, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;</type>
      <name>buildModelFromXML</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>aa3b5d5721a92542626e0169cb7c1eeea</anchor>
      <arglist>(const std::string &amp;xmlStream, const JointModelVariant &amp;rootJoint, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;</type>
      <name>buildModelFromXML</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>acd60b68cf1f19d64efd7be6fd4a92bc6</anchor>
      <arglist>(const std::string &amp;xmlStream, ModelTpl&lt; Scalar, Options, JointCollectionTpl &gt; &amp;model, const bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>Inertia</type>
      <name>convertFromUrdf</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>ada557966cf1436e07b313fee85f46efb</anchor>
      <arglist>(const ::urdf::Inertial &amp;Y)</arglist>
    </member>
    <member kind="function">
      <type>SE3</type>
      <name>convertFromUrdf</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>a787a76d34f511dcb9a60cb6d80eeafe8</anchor>
      <arglist>(const ::urdf::Pose &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>CartesianAxis</type>
      <name>extractCartesianAxis</name>
      <anchorfile>namespacepinocchio_1_1urdf.html</anchorfile>
      <anchor>ab9c726cc5dc77866f06cb0421f1ba93f</anchor>
      <arglist>(const ::urdf::Vector3 &amp;axis)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>spatial</name>
    <title>Spatial</title>
    <filename>group__spatial.html</filename>
  </compound>
  <compound kind="group">
    <name>multibody</name>
    <title>Multibody</title>
    <filename>group__multibody.html</filename>
  </compound>
  <compound kind="group">
    <name>joint</name>
    <title>Joint</title>
    <filename>group__joint.html</filename>
    <class kind="struct">pinocchio::JointCollectionDefaultTpl</class>
    <class kind="struct">pinocchio::JointDataCompositeTpl</class>
    <class kind="struct">pinocchio::JointDataFreeFlyerTpl</class>
    <class kind="struct">pinocchio::JointDataPlanarTpl</class>
    <class kind="struct">pinocchio::JointDataPrismaticTpl</class>
    <class kind="struct">pinocchio::JointDataPrismaticUnalignedTpl</class>
    <class kind="struct">pinocchio::JointDataRevoluteTpl</class>
    <class kind="struct">pinocchio::JointDataRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::JointDataRevoluteUnboundedTpl</class>
    <class kind="struct">pinocchio::JointDataSphericalTpl</class>
    <class kind="struct">pinocchio::JointDataSphericalZYXTpl</class>
    <class kind="struct">pinocchio::JointDataTpl</class>
    <class kind="struct">pinocchio::JointDataTranslationTpl</class>
    <class kind="struct">pinocchio::JointDataVoid</class>
    <class kind="struct">pinocchio::JointModelCompositeTpl</class>
    <class kind="struct">pinocchio::JointModelFreeFlyerTpl</class>
    <class kind="struct">pinocchio::JointModelPlanarTpl</class>
    <class kind="struct">pinocchio::JointModelPrismaticTpl</class>
    <class kind="struct">pinocchio::JointModelPrismaticUnalignedTpl</class>
    <class kind="struct">pinocchio::JointModelRevoluteTpl</class>
    <class kind="struct">pinocchio::JointModelRevoluteUnalignedTpl</class>
    <class kind="struct">pinocchio::JointModelRevoluteUnboundedTpl</class>
    <class kind="struct">pinocchio::JointModelSphericalTpl</class>
    <class kind="struct">pinocchio::JointModelSphericalZYXTpl</class>
    <class kind="struct">pinocchio::JointModelTpl</class>
    <class kind="struct">pinocchio::JointModelTranslationTpl</class>
    <class kind="struct">pinocchio::JointModelVoid</class>
  </compound>
  <compound kind="group">
    <name>parsers</name>
    <title>Parsers</title>
    <filename>group__parsers.html</filename>
  </compound>
  <compound kind="group">
    <name>algorithms</name>
    <title>Algorithms</title>
    <filename>group__algorithms.html</filename>
  </compound>
  <compound kind="page">
    <name>md_doc__porting</name>
    <title>Porting from Pinocchio 1.3.3 to 2.0.0</title>
    <filename>md_doc__porting</filename>
    <docanchor file="md_doc__porting" title="What is included">PortingIntro</docanchor>
    <docanchor file="md_doc__porting" title="Changes in C++">PortingC</docanchor>
    <docanchor file="md_doc__porting" title="Header-only">PortingCHeaderonly</docanchor>
    <docanchor file="md_doc__porting" title="Namespace">PortingCNamespace</docanchor>
    <docanchor file="md_doc__porting" title="Deprecated macros">PortingCMacros</docanchor>
    <docanchor file="md_doc__porting" title="Method signatures">PortingCSignature</docanchor>
    <docanchor file="md_doc__porting" title="Changes in Python">PortingPython</docanchor>
    <docanchor file="md_doc__porting" title="Namespace">PortingPythonNamespace</docanchor>
    <docanchor file="md_doc__porting" title="RobotWrapper">PortingPythonRobotWrapper</docanchor>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_a-spatial</name>
    <title>Spatial Algebra module</title>
    <filename>md_doc_a-features_a-spatial</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_b-model-data</name>
    <title>Model and data</title>
    <filename>md_doc_a-features_b-model-data</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_c-joints</name>
    <title>Joints</title>
    <filename>md_doc_a-features_c-joints</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_d-model</name>
    <title>Loading the model</title>
    <filename>md_doc_a-features_d-model</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_e-lie</name>
    <title>Dealing with Lie group geometry</title>
    <filename>md_doc_a-features_e-lie</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_f-kinematic</name>
    <title>Kinematic algorithms</title>
    <filename>md_doc_a-features_f-kinematic</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_g-dynamic</name>
    <title>Dynamc algorithms</title>
    <filename>md_doc_a-features_g-dynamic</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_h-frames</name>
    <title>Operational frames</title>
    <filename>md_doc_a-features_h-frames</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_i-geometric-models</name>
    <title>Geometric models</title>
    <filename>md_doc_a-features_i-geometric-models</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_intro</name>
    <title>Main features of Pinocchio</title>
    <filename>md_doc_a-features_intro</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_j-analytical-derivatives</name>
    <title>Analytical derivatives</title>
    <filename>md_doc_a-features_j-analytical-derivatives</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_k-automatic-differentiation</name>
    <title>Automatic differentiation and source code generation</title>
    <filename>md_doc_a-features_k-automatic-differentiation</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_l-python</name>
    <title>Python bindings</title>
    <filename>md_doc_a-features_l-python</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_a-features_m-tests</name>
    <title>Unit tests</title>
    <filename>md_doc_a-features_m-tests</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_a-model</name>
    <title>Loading the model</title>
    <filename>md_doc_b-examples_a-model</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_b-dynamics</name>
    <title>Computing the dynamics RNEA, bias forces b(q,v), gravity g(q), CRBA M(q)</title>
    <filename>md_doc_b-examples_b-dynamics</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_c-contact</name>
    <title>Contact dynamics</title>
    <filename>md_doc_b-examples_c-contact</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_d-display</name>
    <title>Loading and displaying the model</title>
    <filename>md_doc_b-examples_d-display</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_e-collisions</name>
    <title>Collision detection and distances</title>
    <filename>md_doc_b-examples_e-collisions</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_f-derivatives</name>
    <title>Derivatives of the dynamics (with finite diff checking)</title>
    <filename>md_doc_b-examples_f-derivatives</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_g-code-generation</name>
    <title>Code generation</title>
    <filename>md_doc_b-examples_g-code-generation</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_h-inverse-geometry</name>
    <title>Inverse geometry</title>
    <filename>md_doc_b-examples_h-inverse-geometry</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_i-inverse-kinematics</name>
    <title>Inverse kinematics (clik)</title>
    <filename>md_doc_b-examples_i-inverse-kinematics</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_intro</name>
    <title>Examples</title>
    <filename>md_doc_b-examples_intro</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_j-tsid</name>
    <title>Task space inverse dynamics</title>
    <filename>md_doc_b-examples_j-tsid</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_k-qp</name>
    <title>QP (normal forces) unilateral contact dynamics (if we can write it concise enough)</title>
    <filename>md_doc_b-examples_k-qp</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_l-postures</name>
    <title>Posture generation using derivatives (if we can write it concise enough)</title>
    <filename>md_doc_b-examples_l-postures</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_m-rrt</name>
    <title>A RRT planner for a robot arm (if we can write it concise enough)</title>
    <filename>md_doc_b-examples_m-rrt</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_b-examples_n-rl</name>
    <title>A RL tensorflow example (if we can write it concise enough)</title>
    <filename>md_doc_b-examples_n-rl</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_a-overview</name>
    <title>Overview</title>
    <filename>md_doc_c-maths_a-overview</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_b-rigid-bodies</name>
    <title>Rigid Bodies</title>
    <filename>md_doc_c-maths_b-rigid-bodies</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_c-joints</name>
    <title>Joint dynamics</title>
    <filename>md_doc_c-maths_c-joints</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_d-articulated</name>
    <title>Articulated Dynamics</title>
    <filename>md_doc_c-maths_d-articulated</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_dynamics</name>
    <title>Dynamics</title>
    <filename>md_doc_c-maths_dynamics</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_e-collisions</name>
    <title>Collision volumes</title>
    <filename>md_doc_c-maths_e-collisions</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_e-miscs</name>
    <title>Going further</title>
    <filename>md_doc_c-maths_e-miscs</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_f-algorithms</name>
    <title>Main algorithm</title>
    <filename>md_doc_c-maths_f-algorithms</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_intro</name>
    <title>Mathematical formulation</title>
    <filename>md_doc_c-maths_intro</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_c-maths_se3</name>
    <title>CheatSheet: SE(3) operations</title>
    <filename>md_doc_c-maths_se3</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_1-directgeom</name>
    <title>1) Move your body (aka direct geometry)</title>
    <filename>md_doc_d-practical-exercises_1-directgeom</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_2-invgeom</name>
    <title>2) Grasp an object (aka inverse Geometry)</title>
    <filename>md_doc_d-practical-exercises_2-invgeom</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_3-invkine</name>
    <title>3) Drag and Drop (aka Inverse kinematics)</title>
    <filename>md_doc_d-practical-exercises_3-invkine</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_4-dyn</name>
    <title>4) Snap your fingers (aka direct and inverse dynamics)</title>
    <filename>md_doc_d-practical-exercises_4-dyn</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_5-planner</name>
    <title>5) look ahead (aka motion planning)</title>
    <filename>md_doc_d-practical-exercises_5-planner</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_6-wpg</name>
    <title>6) Take a walk (aka optimal control)</title>
    <filename>md_doc_d-practical-exercises_6-wpg</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_7-learn</name>
    <title>7) Learning to flight (aka policy learning)</title>
    <filename>md_doc_d-practical-exercises_7-learn</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_d-practical-exercises_intro</name>
    <title>Practical Exercises</title>
    <filename>md_doc_d-practical-exercises_intro</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_e-implementation_a-overview</name>
    <title>Overview: what is making Pinocchio efficient</title>
    <filename>md_doc_e-implementation_a-overview</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_e-implementation_b-sparsity</name>
    <title>Handling the sparsity</title>
    <filename>md_doc_e-implementation_b-sparsity</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_e-implementation_c-crtp</name>
    <title>Curiously recurring template pattern</title>
    <filename>md_doc_e-implementation_c-crtp</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_e-implementation_d-miscs</name>
    <title>Templatization, autodiff, code gen</title>
    <filename>md_doc_e-implementation_d-miscs</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_e-implementation_intro</name>
    <title>Implementation / Technical details</title>
    <filename>md_doc_e-implementation_intro</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_f-benchmarks_a-overview</name>
    <title>Overview of algo with plots</title>
    <filename>md_doc_f-benchmarks_a-overview</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_f-benchmarks_b-howto</name>
    <title>Description of how to run the benchmarks</title>
    <filename>md_doc_f-benchmarks_b-howto</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_f-benchmarks_intro</name>
    <title>Benchmarks</title>
    <filename>md_doc_f-benchmarks_intro</filename>
  </compound>
  <compound kind="page">
    <name>md_doc_g-success-stories_intro</name>
    <title>Success Stories</title>
    <filename>md_doc_g-success-stories_intro</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Overview</title>
    <filename>index</filename>
    <docanchor file="index" title="What is Pinocchio?">OverviewIntro</docanchor>
    <docanchor file="index" title="How to install Pinocchio?">OverviewInstall</docanchor>
    <docanchor file="index" title="Simplest example with compilation command">OverviewSimple</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewSimpleCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewSimpleExplain</docanchor>
    <docanchor file="index" title="More complex example with C++ and Python">OverviewComplex</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewComplexCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewComplexExplain</docanchor>
    <docanchor file="index" title="About Python wrappings">OverviewPython</docanchor>
    <docanchor file="index" title="How to cite Pinocchio">OverviewCite</docanchor>
    <docanchor file="index" title="Where to go from here?">OverviewConclu</docanchor>
  </compound>
</tagfile>
