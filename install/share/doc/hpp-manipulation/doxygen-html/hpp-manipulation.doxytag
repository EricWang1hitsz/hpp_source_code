<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>connected-component.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00006</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ConnectedComponent</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>constraint-set.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00005</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ConstraintSet</class>
    <class kind="struct">hpp::manipulation::ConstraintAndComplement_t</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <member kind="typedef">
      <type>std::vector&lt; ConstraintAndComplement_t &gt;</type>
      <name>ConstraintsAndComplements_t</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>ga1f2f76e306fa8dce51b0f651f5a320bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cross-state-optimization.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/steering-method/</path>
    <filename>a00058</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00003" name="problem.hh" local="no" imported="no">hpp/manipulation/problem.hh</includes>
    <includes id="a00066" name="steering-method/fwd.hh" local="no" imported="no">hpp/manipulation/steering-method/fwd.hh</includes>
    <includes id="a00072" name="steering-method/graph.hh" local="no" imported="no">hpp/manipulation/steering-method/graph.hh</includes>
    <class kind="class">hpp::manipulation::steeringMethod::CrossStateOptimization</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::steeringMethod</namespace>
  </compound>
  <compound kind="file">
    <name>device.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00059</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::Device</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>dot.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00060</filename>
    <class kind="struct">hpp::manipulation::graph::dot::DrawingAttributes</class>
    <class kind="struct">hpp::manipulation::graph::dot::Tooltip</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <namespace>hpp::manipulation::graph::dot</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>insertComments</name>
      <anchorfile>a00094.html</anchorfile>
      <anchor>a88158dbb5ae7e9b30d2c87747f9a023d</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00094.html</anchorfile>
      <anchor>a6c930bffec5bfa6b1490e243c6de5744</anchor>
      <arglist>(std::ostream &amp;os, const DrawingAttributes &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>edge.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00061</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00071" name="graph/graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <class kind="class">hpp::manipulation::graph::Edge</class>
    <class kind="class">hpp::manipulation::graph::WaypointEdge</class>
    <class kind="class">hpp::manipulation::graph::LevelSetEdge</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>end-effector-trajectory.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/steering-method/</path>
    <filename>a00062</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::steeringMethod::EndEffectorTrajectory</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::steeringMethod</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; EndEffectorTrajectory &gt;</type>
      <name>EndEffectorTrajectoryPtr_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>afc484d8828ebb2de65d11b7329fefd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>ac8f09eed268c58ffe32c7003ac8331e3</anchor>
      <arglist>(EndEffectorTrajectory)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>enforce-transition-semantic.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/path-optimization/</path>
    <filename>a00063</filename>
    <includes id="a00003" name="problem.hh" local="no" imported="no">hpp/manipulation/problem.hh</includes>
    <class kind="class">hpp::manipulation::pathOptimization::EnforceTransitionSemantic</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
  </compound>
  <compound kind="file">
    <name>function.cc</name>
    <path>/local/devel/hpp/src/hpp-manipulation/src/steering-method/cross-state-optimization/</path>
    <filename>a00064</filename>
    <class kind="class">hpp::manipulation::steeringMethod::StateFunction</class>
    <class kind="class">hpp::manipulation::steeringMethod::EdgeFunction</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::steeringMethod</namespace>
    <member kind="typedef">
      <type>core::segment_t</type>
      <name>segment_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a7cc8ea51c79c52ca3fe7c1fe21d7f9d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fwd.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00001</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
    <namespace>hpp::manipulation::problemTarget</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Device &gt;</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad782ecbe33604e227e8d8ffaa3614906</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Device &gt;</type>
      <name>DeviceConstPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a69f5e0fb94ffdc8334ba82cbb0d56b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Joint</type>
      <name>Joint</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9822fce9a89dc5153976a2fda9655a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointPtr_t</type>
      <name>JointPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a03e67a33feabcfd0eda5bbfc6e886f24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointIndex</type>
      <name>JointIndex</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aa197725d05714d428788323fe0f5dd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; JointIndex &gt;</type>
      <name>JointIndices_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a1b1adc34de37f5e018c2b72c4dc61816</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::FrameIndex</type>
      <name>FrameIndex</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a393d57e83475a4cd52c21fca00461272</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; pinocchio::FrameIndex &gt;</type>
      <name>FrameIndices_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a6d23539b40ea79adbef0f9bf5265853e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a225947946a98a0e7f6cd0eeec025261e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::ConfigurationIn_t</type>
      <name>ConfigurationIn_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac65f45e2b50138b4c0befe489bb2e7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::ConfigurationOut_t</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7c79d4e1d0e580de24cdf0f96aca5071</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationPtr_t</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0719f134157b008578bdbb637bd7c502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::GripperPtr_t</type>
      <name>GripperPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a37965524bf9e2b854b1e600957146448</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupElement</type>
      <name>LiegroupElement</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a53b65b3b520852c5c65ffbe356aedfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpace</type>
      <name>LiegroupSpace</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a66dc424f27f1b08698de99880ca8127e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpacePtr_t</type>
      <name>LiegroupSpacePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5431baa683a2d7bff2b62dbff173eff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; AxialHandle &gt;</type>
      <name>AxialHandlePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0684e45fa926cbb65b9df8272bb24a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Handle &gt;</type>
      <name>HandlePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a92732c6c727613b61716ad124a6a9d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Object &gt;</type>
      <name>ObjectPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>abb0c5d5ccdb621475b2797eef462c4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Object &gt;</type>
      <name>ObjectConstPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a50bc6e8ea2712047a6805e69e930e0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProblemSolver *</type>
      <name>ProblemSolverPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a608debc446da69af3feadf4c39f78246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Problem &gt;</type>
      <name>ProblemPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac67581d5f4396aeece59289edc73a5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Roadmap &gt;</type>
      <name>RoadmapPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0c28dd700f352653af9666049279d3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RoadmapNode *</type>
      <name>RoadmapNodePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>adaf8da46b37f1942734d58b272a952fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RoadmapNodePtr_t &gt;</type>
      <name>RoadmapNodes_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>af6616156c00aa80db17dfc0f24725f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConnectedComponent &gt;</type>
      <name>ConnectedComponentPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8e9ef6a3200682acf79c032b0dd4bf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LeafConnectedComp &gt;</type>
      <name>LeafConnectedCompPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0024e46a9c267803d0e0bbcaf21e4a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const LeafConnectedComp &gt;</type>
      <name>LeafConnectedCompConstPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aa71136518f3e6c211cfa85b7ffc8ed8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; LeafConnectedCompPtr_t &gt;</type>
      <name>LeafConnectedComps_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac1001276d7e6741407f627fce801d43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WeighedLeafConnectedComp &gt;</type>
      <name>WeighedLeafConnectedCompPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a71bca0b9f578404c1478474b8a7862de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WeighedDistance &gt;</type>
      <name>WeighedDistancePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9a7b15d5a7f059a2ab41f9a933a543d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientation</type>
      <name>RelativeOrientation</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a23228c696526a79a6c6f6f0514cda71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePosition</type>
      <name>RelativePosition</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aa1fe652c389244e999ea148b04ec52de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientationPtr_t</type>
      <name>RelativeOrientationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a83d1833e1da6222d4c203ad837356e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePositionPtr_t</type>
      <name>RelativePositionPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a81ad9eeab8f2c2632c2e52bbf7843502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformation</type>
      <name>RelativeTransformation</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>abc2663e5c21b5802d547fdd11f53941c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformationPtr_t</type>
      <name>RelativeTransformationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8e62be0d61f84f3c67b5106da63db983</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::value_type</type>
      <name>value_type</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac007ccc56320eb7b5748ad259fe4a9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::size_type</type>
      <name>size_type</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a86f423dcee19dfc5cb8769273d2d09a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a76203ca1e66dcf3c0d0544e5de1f9043</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vector_t</type>
      <name>vector_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad2d9aa3123e8b63655032fbae67d8e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vectorIn_t</type>
      <name>vectorIn_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad97f5e61fe751d9a07b8d0c11d264aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vectorOut_t</type>
      <name>vectorOut_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a368b89d05e614a9ce9795a6598c36832</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ManipulationPlanner &gt;</type>
      <name>ManipulationPlannerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a3180586c1bd5703bbb8d5d386215b9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphPathValidation &gt;</type>
      <name>GraphPathValidationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a06e1192f8e68967eb7102d1eb38efc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SteeringMethod &gt;</type>
      <name>SteeringMethodPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab226a620a75c7988def52aa6e8922e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizer</type>
      <name>PathOptimizer</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5636b04594dffd6bfad225b069c0c0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizerPtr_t</type>
      <name>PathOptimizerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5e1c635c1a0881ccbc2229d049c7f02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphOptimizer &gt;</type>
      <name>GraphOptimizerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab48442b4dadade45ec31c70bd7a7f2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphNodeOptimizer &gt;</type>
      <name>GraphNodeOptimizerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7e55377231d6e301b9208c5335ff62c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathProjectorPtr_t</type>
      <name>PathProjectorPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a111ec48114fff48949b1661a563ed992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; pinocchio::DevicePtr_t &gt;</type>
      <name>Devices_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a02ea60b4197d290e481f1b6cecf6f933</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ObjectPtr_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a25076831a140495234778ddf75ce8441</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Constraint</type>
      <name>Constraint</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aba6f9feb2949e5da227f8fa4aa9a7209</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConstraintPtr_t</type>
      <name>ConstraintPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>afc4cdb920936f0196fe98045485da1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::ImplicitPtr_t</type>
      <name>ImplicitPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7957a424db93e121dc606be4db3a0869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>acf9261eff2522ea3e7a719c595226f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ae0b1cd51caf9529ab905358183509af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ComparisonTypes_t</type>
      <name>ComparisonTypes_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aac800cac9e95d3bd72a7f994b917b801</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjector</type>
      <name>ConfigProjector</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a1dcc36804edf6d230dc7d25e99d6ccdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjectorPtr_t</type>
      <name>ConfigProjectorPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7fe50e8ceaee83f3c26bac0019fe8a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConstraintSet &gt;</type>
      <name>ConstraintSetPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>afeac6b2dff035785fcf8901c13bfb916</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DifferentiableFunctionPtr_t</type>
      <name>DifferentiableFunctionPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a09b7c812dd9f9d7cce1d6c705e758ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooter</type>
      <name>ConfigurationShooter</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aedc4023cf0088c70cd97134ceb174fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooterPtr_t</type>
      <name>ConfigurationShooterPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac43851bbd27162488b16452412e7d62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ValidationReport</type>
      <name>ValidationReport</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a659be0f00813e134c888ac1473d8e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationPtr_t</type>
      <name>PathValidationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a33d8f036bac085399633803b68166512</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationReportPtr_t</type>
      <name>PathValidationReportPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a99f3a6bb901058f0d5a131c4ec5fe6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrix_t</type>
      <name>matrix_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad0909318f61ecc99e11c76cf15b7d5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixIn_t</type>
      <name>matrixIn_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a63539e7146401f235bce0818b9c5c7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixOut_t</type>
      <name>matrixOut_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5b57fec16e81aa95544067a9d955b266</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vector3_t</type>
      <name>vector3_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a24c129a3bd161824758d2ca4fa5d8de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrix3_t</type>
      <name>matrix3_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a76c997fb3a34baec536e3205787a5062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Shape_t</type>
      <name>Shape_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac7c1e49664209d6e11af5c22cbcd5964</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::JointAndShape_t</type>
      <name>JointAndShape_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad2f2a6cfabe1ac3bc5c729f0d8a4c30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::JointAndShapes_t</type>
      <name>JointAndShapes_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9af3a83737bd02bb4471fc01aa5d944e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>StringList_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8cccc2c73f80a309b4eb35824c05984e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SmallSteps &gt;</type>
      <name>SmallStepsPtr_t</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a60604613f6178214b820fa687c0b36d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Keypoints &gt;</type>
      <name>KeypointsPtr_t</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a1bae1e111c6fcee6e2e4ffdc8d6ae17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; State &gt;</type>
      <name>StatePtr_t</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a527151e04a61505e2f31b18501fab5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>af4699e4830401075367c8905798c0c0f</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a69828fdc6347a6a64ede6faefe5675fb</anchor>
      <arglist>(AxialHandle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a2501eb4647dda7ee50714bca99bd46a2</anchor>
      <arglist>(Handle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9e798463bb2770a7606de13815f9c489</anchor>
      <arglist>(Object)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8de0acc9a402e5584de79595d31d256f</anchor>
      <arglist>(ProblemSolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab0a488840c517e5b6ec45ef7044c72c7</anchor>
      <arglist>(Problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a42f3996e834f4c74e87e3f6cce12a895</anchor>
      <arglist>(Roadmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8fc81d1898468dd479a2c8d11e6ddb01</anchor>
      <arglist>(RoadmapNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>afb1d58021ff588ec2bb9446327424ea7</anchor>
      <arglist>(ConnectedComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac3c9894b3afe415765e6627a2db8269c</anchor>
      <arglist>(LeafConnectedComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a30d8a0ee4bb11a93bc2e4c59baf879f9</anchor>
      <arglist>(WeighedLeafConnectedComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a662d5d4e06314436f51f277f86a61b0c</anchor>
      <arglist>(WeighedDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a6ea0b209a0e13971d352a276bfc414f8</anchor>
      <arglist>(ManipulationPlanner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab5076cf1c1f42bea2d843d91b23b5196</anchor>
      <arglist>(GraphPathValidation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9b0c1bf2a7331c6e86b95cc9b2a84b91</anchor>
      <arglist>(SteeringMethod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a3e1d04a56375b80dbc77768cabbe8100</anchor>
      <arglist>(GraphOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>acae5af5babe429a887c70aa30ddbe4d5</anchor>
      <arglist>(GraphNodeOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a753c71e72904db352d7dbf5bcbdc452e</anchor>
      <arglist>(ConstraintSet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a9bcb36b9db6a66f0a4ef9b7d63bd42ac</anchor>
      <arglist>(SmallSteps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a75cfedd5569a9592680b72934dec3d07</anchor>
      <arglist>(Keypoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a179736902093be361591064a1100b3e7</anchor>
      <arglist>(State)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph/fwd.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00065</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Graph &gt;</type>
      <name>GraphPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a257c3360cdfb57cbd0ef0737d83cac6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; State &gt;</type>
      <name>StatePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ab07d088b872bc0146572aa4563fee759</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Edge &gt;</type>
      <name>EdgePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a77db730f566f1145010038dc24ccc28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WaypointEdge &gt;</type>
      <name>WaypointEdgePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ad86dfdc7bb030250836cb12e5f6535b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LevelSetEdge &gt;</type>
      <name>LevelSetEdgePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a1cc611aca73322cebcfd33bb268fa851</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateSelector &gt;</type>
      <name>StateSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a08fcf6fd69d96baa836a21de0db805ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GuidedStateSelector &gt;</type>
      <name>GuidedStateSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a75c43bc9b7100c2e090d83ffa5da2f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphComponent &gt;</type>
      <name>GraphComponentPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ae3026579f1a2d453a718d0d9c05c66ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GraphComponentWkPtr_t &gt;</type>
      <name>GraphComponents_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>af3e3db6d9da4187a0b717eb3b6c88cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; StatePtr_t &gt;</type>
      <name>States_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a2d567224d90b31e5f3a34d55930eab42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; EdgePtr_t &gt;</type>
      <name>Edges_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a3d2d73780ca32e3d43a675baef077d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;::Weight_t</type>
      <name>Weight_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a947f707f7974f48a233f1a712d2efd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;</type>
      <name>Neighbors_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ad891d4c3c9017e903ec0d1a0fa4f5b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; StateSelectorPtr_t &gt;</type>
      <name>StateSelectors_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a2c89ea1b0b8387c9dac8a4888e7fed97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::segments_t</type>
      <name>segments_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a16a60f76f1a95c8a84c3cf749489b71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; segments_t &gt;</type>
      <name>IntervalsContainer_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a9195ea63fc2405820f19c041d596412f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::NumericalConstraints_t</type>
      <name>NumericalConstraints_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a0cec6bc1d90a0442cc2b151f5d550a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJoints_t</type>
      <name>LockedJoints_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a964f21f1e2ae8ce3b0832ed2fb42f9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Histogram &gt;</type>
      <name>HistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a6fd2e0379a89f5a7210cde5e963819ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateHistogram &gt;</type>
      <name>StateHistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a869c0d44f4d94150948045a1b55014d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LeafHistogram &gt;</type>
      <name>LeafHistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a1f6d90fd4d05abfa738c42cf597e61d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; HistogramPtr_t &gt;</type>
      <name>Histograms_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ac7330af86b49294209bbf99753cc7d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a809fc7b720a5165b42538624f785fb55</anchor>
      <arglist>(Graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>abbd93f93a2c484f6cb4c2f2ddef1ee6d</anchor>
      <arglist>(Edge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a9c437d33b7253911017116e4b7defdea</anchor>
      <arglist>(State)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a1816e3003adaa327c9221f2ffb45f829</anchor>
      <arglist>(WaypointEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a49ba99ccaf2e8567a15d296ce0dce78a</anchor>
      <arglist>(LevelSetEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ad3ddfd1bb41fb7718ec1f57c53d4beee</anchor>
      <arglist>(StateSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a553ef2c3a861a8628b2e6ea4e6de2527</anchor>
      <arglist>(GraphComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a9d40c72a9aa2e9c7bea61319e341977b</anchor>
      <arglist>(GuidedStateSelector)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>steering-method/fwd.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/steering-method/</path>
    <filename>a00066</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::steeringMethod</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Graph &gt;</type>
      <name>GraphPtr_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>aae1a09476a6a72adc3739b64b4c647cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CrossStateOptimization &gt;</type>
      <name>CrossStateOptimizationPtr_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a0cfac0b05fb3191496d7455175ea00f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>ace0e8c39107eccba72ce9237bb917a79</anchor>
      <arglist>(Graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>aa8400224ba7790d4d4135734c8e1fbe8</anchor>
      <arglist>(CrossStateOptimization)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph-component.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00067</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00060" name="dot.hh" local="yes" imported="no">hpp/manipulation/graph/dot.hh</includes>
    <class kind="class">hpp::manipulation::graph::GraphComponent</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>aa0601a4def88d5f7d289a439a06967db</anchor>
      <arglist>(HPP_MANIPULATION_DLLAPI, Bad_function_call)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00101.html</anchorfile>
      <anchor>ga78dea138fa29161df8601cf75cdce66f</anchor>
      <arglist>(std::ostream &amp;os, const GraphComponent &amp;graphComp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph-node-optimizer.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00068</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00005" name="constraint-set.hh" local="no" imported="no">hpp/manipulation/constraint-set.hh</includes>
    <class kind="class">hpp::manipulation::GraphNodeOptimizer</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph-optimizer.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00069</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::GraphOptimizer</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph-path-validation.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00070</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::GraphPathValidation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph/graph.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00071</filename>
    <includes id="a00005" name="constraint-set.hh" local="yes" imported="no">hpp/manipulation/constraint-set.hh</includes>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00067" name="graph-component.hh" local="yes" imported="no">hpp/manipulation/graph/graph-component.hh</includes>
    <class kind="class">hpp::manipulation::graph::Graph</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>steering-method/graph.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/steering-method/</path>
    <filename>a00072</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00066" name="steering-method/fwd.hh" local="no" imported="no">hpp/manipulation/steering-method/fwd.hh</includes>
    <class kind="class">hpp::manipulation::SteeringMethod</class>
    <class kind="class">hpp::manipulation::steeringMethod::Graph</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::steeringMethod</namespace>
  </compound>
  <compound kind="file">
    <name>guided-node-selector.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00073</filename>
    <includes id="a00074" name="guided-state-selector.hh" local="yes" imported="no">hpp/manipulation/graph/guided-state-selector.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="typedef">
      <type>GuidedStateSelector GuidedNodeSelector</type>
      <name>HPP_MANIPULATION_DEPRECATED</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ab3362553d2fc56a85abad90cad530937</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GuidedNodeSelector &gt;</type>
      <name>GuidedNodeSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a8b60a02ae9eea238dd29322f189cf68c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>guided-state-selector.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00074</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00087" name="state-selector.hh" local="yes" imported="no">hpp/manipulation/graph/state-selector.hh</includes>
    <class kind="class">hpp::manipulation::graph::GuidedStateSelector</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>handle.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00075</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::Handle</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aadf512ba33cbe149b0b4823dd674c4ad</anchor>
      <arglist>(std::ostream &amp;os, const Handle &amp;handle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>helper.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00076</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="struct">hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</class>
    <class kind="struct">hpp::manipulation::graph::helper::FoliatedManifold</class>
    <class kind="struct">hpp::manipulation::graph::helper::Rule</class>
    <class kind="struct">hpp::manipulation::graph::helper::ObjectDef_t</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <namespace>hpp::manipulation::graph::helper</namespace>
    <member kind="typedef">
      <type>std::vector&lt; Rule &gt;</type>
      <name>Rules_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gae3d440380470ebfeb6dea2e7ba596dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; ImplicitPtr_t, ImplicitPtr_t, LockedJoints_t &gt;</type>
      <name>PlacementConstraint_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga6d1fc2e5c47147016ec891af2331b488</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; HandlePtr_t &gt;</type>
      <name>Handles_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga55c2291d9ab4f12153077dae8139f584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gacb22f07ba9e56b4ac19caca53f4210b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; PlacementConstraint_t, Handles_t, std::size_t &gt;</type>
      <name>Object_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaca9c547a1170b04b1d8b337a7a221b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Object_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga762238bdac56082281461e3bd90b797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraspingCase</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gac90bb5d288151a336e55106c7a10023f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGrasp</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa9c34b5fd3c9e3502bedab4d57817504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GraspOnly</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa51b2d0534ecf569c08cc969997990590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPreGrasp</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fac13fb09f8eee1b95978decceaa88dc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacementCase</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gabf7d2d056c919423d6ddc30c2216a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPlace</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a018c646c44b4380f51af97e5673932ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlaceOnly</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a3486c8460f482c55a2f68bc1ac7fc8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPrePlace</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1ab4dcacb6faa315def204d72abed90ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>createEdges</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga5605709698aa19de334ce2fc73ac0077</anchor>
      <arglist>(const std::string &amp;forwName, const std::string &amp;backName, const StatePtr_t &amp;from, const StatePtr_t &amp;to, const size_type &amp;wForw, const size_type &amp;wBack, const FoliatedManifold &amp;grasp, const FoliatedManifold &amp;pregrasp, const FoliatedManifold &amp;place, const FoliatedManifold &amp;preplace, const bool levelSetGrasp, const bool levelSetPlace, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>createLoopEdge</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga06e563f3e459f49107c046576452c58a</anchor>
      <arglist>(const std::string &amp;loopName, const StatePtr_t &amp;state, const size_type &amp;w, const bool levelSet, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graspManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaffa0005f5fe2ec45f29806dd0ff6e58f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle, FoliatedManifold &amp;grasp, FoliatedManifold &amp;pregrasp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strictPlacementManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gab4c1b3b73f1cbc7de0e96a9f360ccf64</anchor>
      <arglist>(const ImplicitPtr_t placement, const ImplicitPtr_t preplacement, const ImplicitPtr_t placementComplement, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relaxedPlacementManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaccdfacd3e9e9d6358063baf971015f31</anchor>
      <arglist>(const ImplicitPtr_t placement, const ImplicitPtr_t preplacement, const LockedJoints_t objectLocks, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphBuilder</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga6b61df8cd6a7f97155d562165eebb340</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const Objects_t &amp;objects, const Grippers_t &amp;grippers, GraphPtr_t graph, const Rules_t &amp;rules=Rules_t())</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>graphBuilder</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gafba4fe2d23444b07261811c33f53282d</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const std::string &amp;graphName, const StringList_t &amp;griNames, const std::list&lt; ObjectDef_t &gt; &amp;objs, const StringList_t &amp;envNames, const Rules_t &amp;rules, const value_type &amp;prePlaceWidth=0.05)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>leaf-connected-comp.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00077</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00083" name="roadmap-node.hh" local="no" imported="no">hpp/manipulation/roadmap-node.hh</includes>
    <class kind="class">hpp::manipulation::LeafConnectedComp</class>
    <class kind="class">hpp::manipulation::WeighedLeafConnectedComp</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>main.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/build-rel/doc/</path>
    <filename>a00078</filename>
  </compound>
  <compound kind="file">
    <name>manipulation-planner.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00079</filename>
    <includes id="a00090" name="statistics.hh" local="yes" imported="no">hpp/manipulation/graph/statistics.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00071" name="graph/graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ManipulationPlanner</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>node-selector.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00080</filename>
    <includes id="a00087" name="state-selector.hh" local="yes" imported="no">hpp/manipulation/graph/state-selector.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; NodeSelector &gt;</type>
      <name>NodeSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a191baca9df5e148bd5d73ffed81c5b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodeSelectorPtr_t &gt;</type>
      <name>NodeSelectors_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a48894cedddbeb769db212e741d647935</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>node.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00002</filename>
    <includes id="a00088" name="graph/state.hh" local="no" imported="no">hpp/manipulation/graph/state.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Node &gt;</type>
      <name>NodePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a6ebe66d313d1e16d116ce13a01b00d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodePtr_t &gt;</type>
      <name>Nodes_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a0574ffae3e378053e8ca72f5de62f34b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>problem-solver.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00081</filename>
    <includes id="a00005" name="constraint-set.hh" local="yes" imported="no">hpp/manipulation/constraint-set.hh</includes>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00059" name="device.hh" local="yes" imported="no">hpp/manipulation/device.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ProblemSolver</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>problem.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00003</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00059" name="device.hh" local="no" imported="no">hpp/manipulation/device.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::Problem</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>random-shortcut.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/path-optimization/</path>
    <filename>a00082</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::pathOptimization::RandomShortcut</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; RandomShortcut &gt;</type>
      <name>RandomShortcutPtr_t</name>
      <anchorfile>a00104.html</anchorfile>
      <anchor>ga240c6b86af69fab31e4526f6d4a7a590</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00104.html</anchorfile>
      <anchor>gabaa9ce3f801a84aaa9429272db7a6dcf</anchor>
      <arglist>(RandomShortcut)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>roadmap-node.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00083</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00006" name="connected-component.hh" local="no" imported="no">hpp/manipulation/connected-component.hh</includes>
    <class kind="class">hpp::manipulation::RoadmapNode</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>roadmap.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00084</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00077" name="leaf-connected-comp.hh" local="no" imported="no">hpp/manipulation/leaf-connected-comp.hh</includes>
    <class kind="class">hpp::manipulation::Roadmap</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>small-steps.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/path-optimization/</path>
    <filename>a00085</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::pathOptimization::SmallSteps</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
  </compound>
  <compound kind="file">
    <name>spline-gradient-based.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/path-optimization/</path>
    <filename>a00086</filename>
    <includes id="a00003" name="problem.hh" local="no" imported="no">hpp/manipulation/problem.hh</includes>
    <class kind="class">hpp::manipulation::pathOptimization::SplineGradientBased</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
  </compound>
  <compound kind="file">
    <name>state-selector.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00087</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00071" name="graph/graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00088" name="graph/state.hh" local="yes" imported="no">hpp/manipulation/graph/state.hh</includes>
    <class kind="class">hpp::manipulation::graph::StateSelector</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>graph/state.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00088</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00061" name="edge.hh" local="yes" imported="no">hpp/manipulation/graph/edge.hh</includes>
    <includes id="a00067" name="graph-component.hh" local="yes" imported="no">hpp/manipulation/graph/graph-component.hh</includes>
    <class kind="class">hpp::manipulation::graph::State</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>problem-target/state.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/problem-target/</path>
    <filename>a00089</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::problemTarget::State</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::problemTarget</namespace>
  </compound>
  <compound kind="file">
    <name>statistics.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00090</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00071" name="graph/graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00088" name="graph/state.hh" local="yes" imported="no">hpp/manipulation/graph/state.hh</includes>
    <includes id="a00083" name="roadmap-node.hh" local="no" imported="no">hpp/manipulation/roadmap-node.hh</includes>
    <class kind="class">hpp::manipulation::graph::LeafBin</class>
    <class kind="class">hpp::manipulation::graph::NodeBin</class>
    <class kind="class">hpp::manipulation::graph::Histogram</class>
    <class kind="class">hpp::manipulation::graph::Foliation</class>
    <class kind="class">hpp::manipulation::graph::LeafHistogram</class>
    <class kind="class">hpp::manipulation::graph::StateHistogram</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateHistogram &gt;</type>
      <name>NodeHistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a8c24af9828066db087db70b9b7a33f2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>weighed-distance.hh</name>
    <path>/local/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00004</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00065" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::WeighedDistance</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ConnectedComponent</name>
    <filename>a00011.html</filename>
    <base>hpp::core::ConnectedComponent</base>
    <member kind="typedef">
      <type>std::map&lt; graph::StatePtr_t, RoadmapNodes_t &gt;</type>
      <name>GraphStates_t</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>affd4294bdd1a02ff1e7848f66cd879b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectedComponent</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a782380c08562bb27fc16584c65ebdf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a2021bafa6f48cfa5fcb52a7e361c76d5</anchor>
      <arglist>(const core::ConnectedComponentPtr_t &amp;otherCC)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>aa28b13b1f447cc1f6934d5d586c7676c</anchor>
      <arglist>(const core::NodePtr_t &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>const RoadmapNodes_t &amp;</type>
      <name>getRoadmapNodes</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a4c41257a3333d5aeea12507d55424730</anchor>
      <arglist>(const graph::StatePtr_t graphState) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConnectedComponentPtr_t</type>
      <name>create</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a97142512425088a4bbd2de4d641b3eb9</anchor>
      <arglist>(const RoadmapWkPtr_t &amp;roadmap)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::ConstraintAndComplement_t</name>
    <filename>a00012.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstraintAndComplement_t</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a9d3e691202af52899d146df16f7d49f7</anchor>
      <arglist>(const ImplicitPtr_t &amp;constr, const ImplicitPtr_t &amp;comp, const ImplicitPtr_t &amp;b)</arglist>
    </member>
    <member kind="variable">
      <type>ImplicitPtr_t</type>
      <name>constraint</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a1ffa2443e0c0a3290652c55f46a52027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ImplicitPtr_t</type>
      <name>complement</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>ac5c21d9cf8fb26963af57ee9c4d9280c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ImplicitPtr_t</type>
      <name>both</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a50ce0d9a67671094d2dfa6d8c94bb913</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ConstraintSet</name>
    <filename>a00013.html</filename>
    <base>hpp::core::ConstraintSet</base>
    <member kind="typedef">
      <type>core::ConstraintSet</type>
      <name>Parent_t</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a078eced613319de426bd3e0e686ef483</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConstraintPtr_t</type>
      <name>copy</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a494922a36c533d8609844bbee4dd8818</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edge</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a7e7eec606ea2f829c9737354420e605d</anchor>
      <arglist>(graph::EdgePtr_t edge)</arglist>
    </member>
    <member kind="function">
      <type>graph::EdgePtr_t</type>
      <name>edge</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>af94d5d28ae11ca0dfd1bcecdbc0255de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConstraintSetPtr_t</type>
      <name>create</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ae5fb4224ef17aad9b078b3f36ebe63fb</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConstraintSetPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a92f3d95a40ebc7b8c4186c34d881138b</anchor>
      <arglist>(const ConstraintSetPtr_t &amp;cs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintSet</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>acfa9a2b1e8d11ef64efadaeedb9f2f21</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintSet</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a99bfc9a3df87717f68d1acd9b7c42a90</anchor>
      <arglist>(const ConstraintSet &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>aea996d54b8ec7030cd8dd76372fdc612</anchor>
      <arglist>(const ConstraintSetPtr_t &amp;self)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ab17c0f8890c8718316f4e2da33ecbeca</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::steeringMethod::CrossStateOptimization</name>
    <filename>a00014.html</filename>
    <base>hpp::manipulation::SteeringMethod</base>
    <member kind="function">
      <type>core::SteeringMethodPtr_t</type>
      <name>copy</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a54928b7db06288ce61139bfac40739b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CrossStateOptimizationPtr_t</type>
      <name>create</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>ae2ae7d8f9762276fe491068f4b160c1c</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CrossStateOptimizationPtr_t</type>
      <name>create</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>ab95b4800718e19e5f21efff8bc4cb8f6</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CrossStateOptimizationPtr_t</type>
      <name>create</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a50b8fbc1c62f915081cb430294355028</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CrossStateOptimization</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a4d63b76632f770a36b63013b9ff88cfa</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CrossStateOptimization</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a89da461cdd1d55aebb04b844bbfbff6f</anchor>
      <arglist>(const CrossStateOptimization &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>core::PathPtr_t</type>
      <name>impl_compute</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a22957a7c9d3d57d48ec1938503161c28</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a2d09cd2530e747b1780d17203268eedb</anchor>
      <arglist>(CrossStateOptimizationWkPtr_t weak)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Device</name>
    <filename>a00015.html</filename>
    <member kind="typedef">
      <type>pinocchio::HumanoidRobot</type>
      <name>Parent_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a864bfbad93949c188de4705d0c1077ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>ab95c350a06c535e0bc94529f0dbbff24</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRobotRootPosition</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4df6a8cc5f02727c3b4a74e78e47b3cc</anchor>
      <arglist>(const std::string &amp;robotName, const Transform3f &amp;positionWRTParentJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual pinocchio::DevicePtr_t</type>
      <name>clone</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a652c8ec074fd372e8951f460070b26d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>robotNames</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa9fb0060808f1241d2e7b1f09d383c90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FrameIndices_t</type>
      <name>robotFrames</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a0a62720f806e76ec2aaedc428f59fa81</anchor>
      <arglist>(const std::string &amp;robotName) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DevicePtr_t</type>
      <name>create</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a1f65e5ff510c76e211d2f5cd9fe4e5c3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="variable">
      <type>core::Container&lt; HandlePtr_t &gt;</type>
      <name>handles</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a9f96c6e320eac24f8e1aff052643d2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>core::Container&lt; GripperPtr_t &gt;</type>
      <name>grippers</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aeb0a749be8ae019f1c91cd2fa34bd3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>core::Container&lt; JointAndShapes_t &gt;</type>
      <name>jointAndShapes</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a95d85a7c3d350599f4b552621f324d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Device</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>ab1fd2bc4c56098a6201d2fb33705caa4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a1e0716036cd88472c65fe0386be9a38b</anchor>
      <arglist>(const DeviceWkPtr_t &amp;self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initCopy</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a8ce68fa4617aba20238ba2f1603439df</anchor>
      <arglist>(const DeviceWkPtr_t &amp;self, const Device &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::dot::DrawingAttributes</name>
    <filename>a00016.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>Pair</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>aa9a92d6635abce340c2f918714c34587</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>Map</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>aa2a8e859b0b57993fa397cdde6a81ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWithQuote</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>aa76fc207ea516fb32676891f6e692ed2</anchor>
      <arglist>(const std::string &amp;K, const std::string &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>af8e0b18601df42534fc304272d3d81e5</anchor>
      <arglist>(const std::string &amp;K, const std::string &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>operator[]</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>abc305b0dcf0c8c67b7090dd02d5b23c0</anchor>
      <arglist>(const std::string &amp;K)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingAttributes</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a44c4b5be51522572bad9d59317668ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>separator</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a73192764040618aa641e30d0f590cf9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>openSection</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a1337b759f4ef2e9362c48c5e31acb333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>closeSection</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>ab118306b4157a542808da9bdd6d3247f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map</type>
      <name>attr</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>ab7cabb3192d3637e2d466294c46f8c21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Edge</name>
    <filename>a00017.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="typedef">
      <type>core::RelativeMotion</type>
      <name>RelativeMotion</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>af15781647af3906307b47001fef3bba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Edge</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a6b4582b2e4da2724ba9119565be32361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a3f0e717e11b72395b5258efd7a593085</anchor>
      <arglist>(core::NodePtr_t nnear, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a52b5230505e49570c4517b0763a1df7d</anchor>
      <arglist>(ConfigurationIn_t qoffset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canConnect</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ac5b67a222b94437f5d5ca1bd6b677514</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>build</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a30b9f2c067bd6dba622c1df36d987d12</anchor>
      <arglist>(core::PathPtr_t &amp;path, ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>to</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a7208437dbbacdbd2f4eb0bbd94a3f4cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>from</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a243570273b9995057f8f3c3232f5301f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>state</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a7c6b7a8c674198a9822394849809c0b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>state</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>adf60f0c128f1d1a5b742e1999e0106db</anchor>
      <arglist>(StatePtr_t state)</arglist>
    </member>
    <member kind="function">
      <type>const core::SteeringMethodPtr_t &amp;</type>
      <name>steeringMethod</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a198ae27963e2ee152a7fd769d7a25086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const core::PathValidationPtr_t &amp;</type>
      <name>pathValidation</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a259891832534030456b28b911184c58a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RelativeMotion::matrix_type &amp;</type>
      <name>relativeMotion</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>aed8b2033aa0cf47a712a88e708caef39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relativeMotion</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a57091ebb064ca927b95094132088b515</anchor>
      <arglist>(const RelativeMotion::matrix_type &amp;m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>direction</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a84fed04fde008d4d87ddbff2dc86d55d</anchor>
      <arglist>(const core::PathPtr_t &amp;path) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intersectionConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a11c8e58a0d252ddd76eb81c80d99e97b</anchor>
      <arglist>(const EdgePtr_t &amp;other, ConfigProjectorPtr_t projector) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a066026040e0520c1c9e8001d05b60806</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>afcbe6ff60075f64e5112e8daf9428baa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShort</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>af29f04ed207730075c24c96557b3a8b3</anchor>
      <arglist>(bool isShort)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isShort</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a6fa0410a3a7bc027badd9c5f13c16a26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>pathConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>afbda0beca4bc55832f6f938a3e93cf1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EdgePtr_t</type>
      <name>create</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a722f74c28f45287391ec1467a49e2ed6</anchor>
      <arglist>(const std::string &amp;name, const GraphWkPtr_t &amp;graph, const StateWkPtr_t &amp;from, const StateWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ad41ee4c2c8aa9d504264a7bab5b3625a</anchor>
      <arglist>(const EdgeWkPtr_t &amp;weak, const GraphWkPtr_t &amp;graph, const StateWkPtr_t &amp;from, const StateWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Edge</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a8590b47b16242269ef5286f7c53e2a07</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ConstraintSetPtr_t</type>
      <name>buildConfigConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a542e126349a52381518f98ef09dcab47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ConstraintSetPtr_t</type>
      <name>buildPathConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a663f733917aae11e399638e7829ea7ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a268be07a219594af1582b5caf1da1f26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>adac3a575584b392c5cf0ab0394fc5def</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isShort_</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a6af1f9cfbb34f640eddc9dcf6c9f9749</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Graph</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>afab89afd724f1b07b1aaad6bdc61c47a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::steeringMethod::EdgeFunction</name>
    <filename>a00018.html</filename>
    <base>hpp::constraints::DifferentiableFunction</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; EdgeFunction &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ac6a9ca4da5a4207bf470d7721dd91e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeFunction</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a13a608d73988e4cbf9e84512cc05ffd6</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;inner, const size_type &amp;nArgs, const size_type &amp;nDers, const segment_t &amp;lInArgs, const segment_t &amp;lInDers, const segment_t &amp;rInArgs, const segment_t &amp;rInDers)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>impl_compute</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ac7edd1a5b5e37543f3283cef410dc329</anchor>
      <arglist>(pinocchio::LiegroupElementRef y, vectorIn_t arg) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>impl_jacobian</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>acea7d2facd2aab6a45a85629fa043461</anchor>
      <arglist>(matrixOut_t J, vectorIn_t arg) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>afcd9ba4ee78c6b63915281cf2990baf2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DifferentiableFunctionPtr_t</type>
      <name>inner_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a0104eb82196fb370e67979e5ef82921e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const segment_t</type>
      <name>lsa_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a1944d91f77c3fae2a1a3d143da5714ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const segment_t</type>
      <name>lsd_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ab22e53c2777ed8ddcaa928a63bd338b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const segment_t</type>
      <name>rsa_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a60752036bb39404de17462711f8f816c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const segment_t</type>
      <name>rsd_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a5a2c43f42ccc7d89e0f270710653a30a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LiegroupElement</type>
      <name>l_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a98699c357542b7d1ad863e62eaa09b9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LiegroupElement</type>
      <name>r_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a5fac84c0a2ca9661fea035d324661074</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::steeringMethod::EndEffectorTrajectory</name>
    <filename>a00019.html</filename>
    <base>hpp::core::SteeringMethod</base>
    <member kind="typedef">
      <type>core::interval_t</type>
      <name>interval_t</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a88b502a9f237e206d806b41270166511</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trajectoryConstraint</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a9db42bc00f20f5a464408e8b1f9638d1</anchor>
      <arglist>(const constraints::ImplicitPtr_t &amp;ic)</arglist>
    </member>
    <member kind="function">
      <type>const constraints::ImplicitPtr_t &amp;</type>
      <name>trajectoryConstraint</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ada5a2d0609115dba964f737042f623ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trajectory</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>aea40665ad5c2e3554de4cede5b6c7153</anchor>
      <arglist>(const PathPtr_t &amp;eeTraj, bool se3Output)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trajectory</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>aea6c097f2634b344af8cca83b57f1cdb</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;eeTraj, const interval_t &amp;timeRange)</arglist>
    </member>
    <member kind="function">
      <type>const DifferentiableFunctionPtr_t &amp;</type>
      <name>trajectory</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>af802bfc35897a5103859dfe5bbd9eb70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const interval_t &amp;</type>
      <name>timeRange</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a91efc0f4da61060638dadb2a77f1dd57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>core::SteeringMethodPtr_t</type>
      <name>copy</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ad9ef2edc6985b1c1370d26987ae9b6fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EndEffectorTrajectoryPtr_t</type>
      <name>create</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a9c51621ff0d1f1553b9dafb0d43c47d7</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EndEffectorTrajectory</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a16940b7f14a264f5eb784e82c6d54c93</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EndEffectorTrajectory</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>aa7e4d91b8c239ebd243d8fe59287c1d2</anchor>
      <arglist>(const EndEffectorTrajectory &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PathPtr_t</type>
      <name>impl_compute</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>abc89ab050729bdff8d27ccab5a4eaf08</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::pathOptimization::EnforceTransitionSemantic</name>
    <filename>a00020.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="typedef">
      <type>hpp::core::PathVectorPtr_t</type>
      <name>PathVectorPtr_t</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>adbe52f59866c4640ef81bc7e6756a9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; EnforceTransitionSemantic &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a13af591942785b41d1a03adf0b5af4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a0509c9147f65160a5f4b80677ae459bf</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>create</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a7b5642d623b6b2d2f504d68de15965f2</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EnforceTransitionSemantic</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a06ff9a256b10a163d9e0bc6d70b5800c</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::FoliatedManifold</name>
    <filename>a00021.html</filename>
    <member kind="function">
      <type>FoliatedManifold</type>
      <name>merge</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a4a07b139fa29df2dbc2b8691236c27ae</anchor>
      <arglist>(const FoliatedManifold &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToState</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a69d6469335d0ca904c3806c8d6ef6ad3</anchor>
      <arglist>(StatePtr_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToEdge</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a37cb30132708a5f038f00c8e04ce201d</anchor>
      <arglist>(EdgePtr_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>specifyFoliation</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>ae023c6838a9d89ccd57dca6d03838de1</anchor>
      <arglist>(LevelSetEdgePtr_t lse) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>foliated</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a9d3a51d41ef5a85d59291d659677486a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>af2514bab235e33bae0ae8d1881964bc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>nc</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a1b89c1adf3b4500638b71dcafe2ef841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LockedJoints_t</type>
      <name>lj</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>aedd498bd97a8f7782d04411897e23d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>nc_path</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a7a9fb8a5016a92c2efd4a9d1ac3ca0f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>nc_fol</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a9a2c3b86b41e131563c8861dbeadb783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LockedJoints_t</type>
      <name>lj_fol</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>aae1c32437bb60b7db776fab626005f12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Foliation</name>
    <filename>a00022.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a1148fec57ce0b69435337aea78517f55</anchor>
      <arglist>(ConfigurationIn_t q) const </arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>parameter</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a5498be61110c2a6805cf65ed18333c47</anchor>
      <arglist>(ConfigurationIn_t q) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>condition</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a4c166f406e8dcc42039016ff92f73dd9</anchor>
      <arglist>(const ConstraintSetPtr_t c)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>condition</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>afd662d87e361630066bdf8749f381ea7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parametrizer</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a072e218398c94ff42909e00002c80c46</anchor>
      <arglist>(const ConstraintSetPtr_t p)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>parametrizer</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a1e141a930ad1e125c75a24034aabe74d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Graph</name>
    <filename>a00023.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="function">
      <type>StateSelectorPtr_t</type>
      <name>createNodeSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a12cfa1acae373be3637322d80cfc6db7</anchor>
      <arglist>(const std::string &amp;name) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>StateSelectorPtr_t</type>
      <name>createStateSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a09ad5b63159bd794a4460e9a2204c4c6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nodeSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a26d4a2b68365a50b57559bce04fc08af</anchor>
      <arglist>(StateSelectorPtr_t ns) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stateSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a02ed8e8e8a92a68c5661e27cc47855bc</anchor>
      <arglist>(StateSelectorPtr_t ns)</arglist>
    </member>
    <member kind="function">
      <type>StateSelectorPtr_t</type>
      <name>nodeSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a60a5c690fda17c30898cb90744682540</anchor>
      <arglist>() const HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>StateSelectorPtr_t</type>
      <name>stateSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>abf3e1a71226048a003bc1e118c9eab9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a7c831f261acb27436d0defe1551a951a</anchor>
      <arglist>(ConfigurationIn_t config) const HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>getState</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a491148c91f61d4c1668ff97158ca44c0</anchor>
      <arglist>(ConfigurationIn_t config) const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a5da54f6df44b63a1379c68356a59d8e2</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>getState</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a6f13db2b7a9e0eb25b86ec186ecd24ae</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>getEdges</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ac95facfa39fd3345b06372995a32127f</anchor>
      <arglist>(const StatePtr_t &amp;from, const StatePtr_t &amp;to) const </arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>chooseEdge</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a28d64ee136edd1b264d61ae648d159ca</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerConstraints</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a8f647de3e2f8aa80b5d0ebea236e29f2</anchor>
      <arglist>(const ImplicitPtr_t &amp;constraint, const ImplicitPtr_t &amp;complement, const ImplicitPtr_t &amp;both)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComplement</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a5f929eadbb9266e1ce00fac6bf85473d</anchor>
      <arglist>(const ImplicitPtr_t &amp;constraint, const ImplicitPtr_t &amp;complement, ImplicitPtr_t &amp;combinationOfBoth) const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a17275b4a9a53ab1ef374eaef2a2c90d8</anchor>
      <arglist>(const StatePtr_t &amp;state) const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aed4367002b0a6a24ee6456d6c782f59a</anchor>
      <arglist>(const EdgePtr_t &amp;edge) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigErrorForNode</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a85e781211be64c9bd5ba619a00340e12</anchor>
      <arglist>(ConfigurationIn_t config, const StatePtr_t &amp;state, vector_t &amp;error) const HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigErrorForState</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ae1615baed205a0dd0aeb63713e515094</anchor>
      <arglist>(ConfigurationIn_t config, const StatePtr_t &amp;state, vector_t &amp;error) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigErrorForEdge</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a9bf85ba323042de9eaed508a4660ef12</anchor>
      <arglist>(ConfigurationIn_t config, const EdgePtr_t &amp;edge, vector_t &amp;error) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigErrorForEdgeLeaf</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ade03836d231a63cb28290417728b5087</anchor>
      <arglist>(ConfigurationIn_t leafConfig, ConfigurationIn_t config, const EdgePtr_t &amp;edge, vector_t &amp;error) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigErrorForEdgeTarget</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aefbee57da0eed06188805f5d14be0ffb</anchor>
      <arglist>(ConfigurationIn_t leafConfig, ConfigurationIn_t config, const EdgePtr_t &amp;edge, vector_t &amp;error) const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>pathConstraint</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ab19db54e67e5c20939da6e2e026083f0</anchor>
      <arglist>(const EdgePtr_t &amp;edge) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxIterations</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a8412430d426fd98410aeeded13044567</anchor>
      <arglist>(size_type iterations)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>maxIterations</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a0033a5aeab390e4532dd3bbb0b6800b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>errorThreshold</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a1871cf066a56f7b919e5d691f30982f7</anchor>
      <arglist>(const value_type &amp;threshold)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>errorThreshold</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a3e8f8e296e68bd15d5f5666700011c73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DevicePtr_t &amp;</type>
      <name>robot</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>af0fa6b7edefbf2e912f7fdf6a288499d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ProblemPtr_t &amp;</type>
      <name>problem</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aa7197d55c6992454b8619bd78aa64dd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>problem</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a301cf01b6c575234b4e146506bc9be39</anchor>
      <arglist>(const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertHistogram</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a5602b407515fdbd571c313b0741dc141</anchor>
      <arglist>(const graph::HistogramPtr_t &amp;hist)</arglist>
    </member>
    <member kind="function">
      <type>const Histograms_t &amp;</type>
      <name>histograms</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a3634c2922f8dfffca1904327062ce31f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GraphComponentWkPtr_t</type>
      <name>get</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a8d2526219011d9139dbbbde0f474a33a</anchor>
      <arglist>(std::size_t id) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>nbComponents</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a013884a40fe2b45581d29eeb0612022d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a385ba9d297dc65ea008f8b081d8c835c</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a2491d96eeef7a291f0307b8b5eab5945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPtr_t</type>
      <name>create</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a800af9882f25664e1b33e456f2c08315</anchor>
      <arglist>(const std::string &amp;name, DevicePtr_t robot, const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>aee8328c7048f3355bdb0357d745886ca</anchor>
      <arglist>(const GraphWkPtr_t &amp;weak, DevicePtr_t robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Graph</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a8253a23465bd966c99ecd5edc553f3b0</anchor>
      <arglist>(const std::string &amp;name, const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a6367fce066d165ae96afe012d0ad2247</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>GraphComponent</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>adf168ba55ef34e12cdeb4600f46fd6cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::steeringMethod::Graph</name>
    <filename>a00024.html</filename>
    <base>hpp::manipulation::SteeringMethod</base>
    <member kind="function" virtualness="virtual">
      <type>virtual core::SteeringMethodPtr_t</type>
      <name>copy</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a452b981e2ce0ac3d42a625df3a2a8212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPtr_t</type>
      <name>create</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>aa30e782cf8539960a57ed1bed7552c9b</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPtr_t</type>
      <name>create</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a9f69b294560aaf2c793e2392ef1b0d31</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPtr_t</type>
      <name>create</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a5e503b04bc7a65df5d2e9d94de45d19b</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>aad862ae6e26c2cd4389af1bbc246df76</anchor>
      <arglist>(const GraphPtr_t &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Graph</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a67b20de244090f36e322d84a50ac53c8</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Graph</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a20dd276dba383bba428a933e8acc65ad</anchor>
      <arglist>(const Graph &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>impl_compute</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>ae545b1bb6400f9065224fd9aa2a7d948</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a28cf29e7d48648c5fb1d742b54f2d0c0</anchor>
      <arglist>(GraphWkPtr_t weak)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::GraphComponent</name>
    <filename>a00025.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GraphComponent</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a969b1070c165b878aa43758b11689a00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a5d2bdfdcd38b9b159659d373e46846ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::size_t &amp;</type>
      <name>id</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>af407f56ed6855a39c7cd9b8607996ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraint</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a5f267153a3dd04484f85e2902a549021</anchor>
      <arglist>(const ImplicitPtr_t &amp;numConstraint, const segments_t &amp;passiveDofs=segments_t())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraint</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ad8d9c8e0065511a0ce191f229569ab4e</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;function, const ComparisonTypes_t &amp;ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetNumericalConstraints</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>afc406cf26a4770a6268662314e48ac15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addLockedJointConstraint</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ab0086fb0e65ac892f4725848cd0ad128</anchor>
      <arglist>(const LockedJointPtr_t &amp;constraint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetLockedJoints</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a4e227f91b67e24ca7ada4ce63ea5e5ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertNumericalConstraints</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a324b9b745a76b62df8c83886e88c9b01</anchor>
      <arglist>(ConfigProjectorPtr_t &amp;proj) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertLockedJoints</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ac69c292b44abb3b00abaa98a2030dd69</anchor>
      <arglist>(ConfigProjectorPtr_t &amp;cs) const </arglist>
    </member>
    <member kind="function">
      <type>const NumericalConstraints_t &amp;</type>
      <name>numericalConstraints</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a1cf6ba63ed55804f0eb74b6664c9bef6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntervalsContainer_t &amp;</type>
      <name>passiveDofs</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a669f3be51c9181d726e231dbfaf4137a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LockedJoints_t &amp;</type>
      <name>lockedJoints</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>aef50a1aeed6aba33f02d1b5cc92f25cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parentGraph</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ad6742d2949cfcef0644e29e94ef0ddd9</anchor>
      <arglist>(const GraphWkPtr_t &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>parentGraph</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a444922ea4fba79a24c0a27ef5992b1c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a9b32e1df3c9b03a58bf2d5455e56ef45</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirty</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a2d060a5ad1a51a3827ebf54f2b927716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a27677b746f0318c020109ec24f9e3c8b</anchor>
      <arglist>(const GraphComponentWkPtr_t &amp;weak)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphComponent</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a66cff50d76f0c677b9eb9878e904dcdd</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>throwIfNotInitialized</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a5b6f50c1b992acc2f36f242a8653ec7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a7acc4b17f1c2282d7fc18737e94b21c5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populateTooltip</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ad6925c0e0fc006caaf2a05673d06badf</anchor>
      <arglist>(dot::Tooltip &amp;tp) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a34eb6db497340e1b8aca353ef9a46d99</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NumericalConstraints_t</type>
      <name>numericalConstraints_</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a84f9f1f4935552eaa6ec7c6b8d4eb884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IntervalsContainer_t</type>
      <name>passiveDofs_</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a0ae5dfeb19fb0c029324854e2d9b08e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LockedJoints_t</type>
      <name>lockedJoints_</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a3dc5d1eee204ae60582d2d32a26d8cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GraphWkPtr_t</type>
      <name>graph_</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a8c2fca4a984f25bc0d158a4e1ce11c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isInit_</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>af23ceccbe402195932402634ac1fb9b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Graph</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>afab89afd724f1b07b1aaad6bdc61c47a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>aaf955390a43450024b3bd4d154500af0</anchor>
      <arglist>(std::ostream &amp;, const GraphComponent &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphNodeOptimizer</name>
    <filename>a00026.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a928b1813ed42292d2afd9f99aaf127e3</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphNodeOptimizerPtr_t</type>
      <name>create</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a0d6736d481c3847387bb2f6cf27a28a0</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphNodeOptimizer</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a58a6f13ac1b3fbc9f608d73367433f43</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphOptimizer</name>
    <filename>a00027.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="typedef">
      <type>core::PathOptimizerBuilder_t</type>
      <name>PathOptimizerBuilder_t</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a381d6fd0abe50d01f60bf32e9e3356f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>afff0aff038baabbffc84774e511148f7</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const PathOptimizerPtr_t &amp;</type>
      <name>innerOptimizer</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a25954205610304e985567d19aac61a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphOptimizerPtr_t</type>
      <name>create</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a619a27d479550d081d0b6bdfd6b2355e</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphOptimizer</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a3a9337cf6c5bc43785f42b2a629ce31b</anchor>
      <arglist>(const core::Problem &amp;problem, PathOptimizerBuilder_t factory)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphPathValidation</name>
    <filename>a00028.html</filename>
    <base>hpp::core::PathValidation</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validate</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a3ba6e17df7f3ffcb4912b2a081f97cc0</anchor>
      <arglist>(const PathPtr_t &amp;path, bool reverse, PathPtr_t &amp;validPart, PathValidationReportPtr_t &amp;report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>innerValidation</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a1e62742f0ac7bb9cf2ff1d8e3626da07</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
    <member kind="function">
      <type>const PathValidationPtr_t &amp;</type>
      <name>innerValidation</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a15d34d0c6327bfcb1382ecce24b11deb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a2bde6aeba21641a3b75eb83a3bac336d</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a18cc2a77202ccb5ab42f427fed147815</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addObstacle</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a7249a1755194ffee366a36148a78052d</anchor>
      <arglist>(const hpp::core::CollisionObjectPtr_t &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a80eda64b2a1e60e84b6ace96a90c7855</anchor>
      <arglist>(const JointPtr_t &amp;joint, const pinocchio::CollisionObjectPtr_t &amp;obstacle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPathValidationPtr_t</type>
      <name>create</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a11b9111422f3319b9e9d42c8c05c5519</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPathValidationPtr_t</type>
      <name>create</name>
      <anchorfile>a00105.html</anchorfile>
      <anchor>gadf460ee8623133b7b8d45a3a33bafa3a</anchor>
      <arglist>(const pinocchio::DevicePtr_t &amp;robot, const value_type &amp;stepSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphPathValidation</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a28aed4e82d15a366ab69785b05865407</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::GuidedStateSelector</name>
    <filename>a00029.html</filename>
    <base>hpp::manipulation::graph::StateSelector</base>
    <member kind="function">
      <type>void</type>
      <name>setStateList</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a460396c01cfceff326bab080f4ee8270</anchor>
      <arglist>(const States_t &amp;stateList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EdgePtr_t</type>
      <name>chooseEdge</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a080c5a2d791361ae0a17e6c40a685a80</anchor>
      <arglist>(RoadmapNodePtr_t from) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a4dd9c38bce6cc24427e3781d29779833</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GuidedStateSelectorPtr_t</type>
      <name>create</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ab0973e30a748880927dc16e364058428</anchor>
      <arglist>(const std::string &amp;name, const core::RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a45461db3d5636cc6e341f357aa904671</anchor>
      <arglist>(const GuidedStateSelectorPtr_t &amp;weak)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GuidedStateSelector</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a5d877a0da60ecc1e863b2988b54317b2</anchor>
      <arglist>(const std::string &amp;name, const core::RoadmapPtr_t roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aabcaf092c04421b995cfb8c5039193c6</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Handle</name>
    <filename>a00030.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Handle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a160cc40b9894e0fd0768c09868a2c66b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual HandlePtr_t</type>
      <name>clone</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>abdf248e636fbc8c6218d88711e964818</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>localPosition</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a3d24cf11101836fe4f96d37d8ad1fb39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mask</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ad5e8ff4d3b6e9be7d8c3074107276384</anchor>
      <arglist>(const std::vector&lt; bool &gt; &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; bool &gt; &amp;</type>
      <name>mask</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a895086df93b2b88d5a1e5a56b8615d09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImplicitPtr_t</type>
      <name>createGrasp</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ad6ab4d4bd13165af3e3b34368b5b9e3d</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, std::string name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImplicitPtr_t</type>
      <name>createGraspComplement</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a8e3053990a89b22bd2b1f02dd4bf3226</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, std::string name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImplicitPtr_t</type>
      <name>createGraspAndComplement</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a377418408508ccb952281a47cb4de768</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, std::string name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ImplicitPtr_t</type>
      <name>createPreGrasp</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a0f380802486a86ef9c1d4d9b1bf065e1</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const value_type &amp;shift, std::string name) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>clearance</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a42df3d0825f7c564d12836aed67989a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearance</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a137340cabb79f3ace6e5f7d14fc55980</anchor>
      <arglist>(const value_type &amp;clearance)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a4916889801255e09619d2104c63e8feb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>abb0fa15ad91d4749fcf872ab4b5ef306</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>const JointPtr_t &amp;</type>
      <name>joint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a63155f90cd889eb4b13601f27e7576c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>joint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a36fedb55d701d0a77313de46f1a65d10</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>robot</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a7c54e08b211809b87818ffa5f4288409</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HandlePtr_t</type>
      <name>create</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ac725671c6e1aa2fc6d567b50925f460b</anchor>
      <arglist>(const std::string &amp;name, const Transform3f &amp;localPosition, const DeviceWkPtr_t &amp;robot, const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::string</type>
      <name>className</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a1d6ff6dcc96b240e4d4e1bcf2f436a77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Handle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ad3296462d296368e2a04449e9bcd61dd</anchor>
      <arglist>(const std::string &amp;name, const Transform3f &amp;localPosition, const DeviceWkPtr_t &amp;robot, const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a674d359edd8c9e98d1b0b03021f14ae8</anchor>
      <arglist>(HandleWkPtr_t weakPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a6af09a705b645b4a9cd833f6c61c2df5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>af93f7a84bbdb3b4930a1efb6ab77bdcb</anchor>
      <arglist>(std::ostream &amp;, const Handle &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a4916889801255e09619d2104c63e8feb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>abb0fa15ad91d4749fcf872ab4b5ef306</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>const JointPtr_t &amp;</type>
      <name>joint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a63155f90cd889eb4b13601f27e7576c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>joint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a36fedb55d701d0a77313de46f1a65d10</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>robot</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a7c54e08b211809b87818ffa5f4288409</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Histogram</name>
    <filename>a00031.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Histogram</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>aa0570b7bc8d6e5a389c80f4de9b5d3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a00b47650ba617b060654bc2b3e040b6a</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HistogramPtr_t</type>
      <name>clone</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>adbf646773ba8897809e9c447b24a945c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a204fa767d896c9bd7edce9f89c3229ac</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::LeafBin</name>
    <filename>a00032.html</filename>
    <base>hpp::statistics::Bin</base>
    <member kind="typedef">
      <type>::hpp::statistics::Bin</type>
      <name>Parent</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a83514cb94b0f62464441be884ad81011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; RoadmapNodePtr_t &gt;</type>
      <name>RoadmapNodes_t</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a47a9b74d98ab99526bba4d3085748787</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LeafBin</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a0d9048625be718066e840bc834ca5d35</anchor>
      <arglist>(const vector_t &amp;v, value_type *threshold_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>aba5668d2c9c61539c34319f1e4c69806</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a5ff092b7801dea8926e053a16841bbf0</anchor>
      <arglist>(const LeafBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a970f97f750f41992b7b8e453ebb553f7</anchor>
      <arglist>(const LeafBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>value</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>adf7bbc066d91f8f822adad5cd54bf2d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a387d7aaae6c94f3dace1e39f367e70da</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>numberOfObsOutOfConnectedComponent</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>afced5249a7a534fc85e6700a5ae1c9aa</anchor>
      <arglist>(const core::ConnectedComponentPtr_t &amp;cc) const </arglist>
    </member>
    <member kind="function">
      <type>const RoadmapNodes_t &amp;</type>
      <name>nodes</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>acfda6fee32affbc5f7aae3dc10e0116b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::LeafConnectedComp</name>
    <filename>a00033.html</filename>
    <member kind="typedef">
      <type>LeafConnectedComp *</type>
      <name>RawPtr_t</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a97fae7e61ac04552cbfefb0806a66fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; RawPtr_t &gt;</type>
      <name>LeafConnectedComps_t</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a7f7423cfdb6a149467236ba50b09ffb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>merge</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ac3fdb4979d67489e6b3ccb2f690da426</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;otherCC)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canReach</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a4311d85afe3528a6c2d40b76c6d8d2df</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;cc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canReach</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ac3e19557a7b8054f19885950aabd4148</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;cc, LeafConnectedComp::LeafConnectedComps_t &amp;cc2Tocc1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a9eda41b0b208af0e5a2fe467e570a772</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;node)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFirstNode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a03c2b05cdc573b7881b37ae0ddcf3c4a</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>core::ConnectedComponentPtr_t</type>
      <name>connectedComponent</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>adcd8fb2daab6d8806add9ab3c9aae0b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RoadmapNodes_t &amp;</type>
      <name>nodes</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a66f72a33238b8eee8040ab175049ee12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LeafConnectedCompPtr_t</type>
      <name>self</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a28c7fd076f360faa78a5b8fe2c7bbc6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const LeafConnectedComp::LeafConnectedComps_t &amp;</type>
      <name>from</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ad4bb568453e6a6bf2b433c154552cf40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LeafConnectedComp::LeafConnectedComps_t &amp;</type>
      <name>to</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a2a584b70a293803724849b5eb9f85465</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafConnectedCompPtr_t</type>
      <name>create</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>aa31e2a45a8e94558281e35b688491a15</anchor>
      <arglist>(const RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LeafConnectedComp</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a2ea042ffad70792f9494f819424e4a87</anchor>
      <arglist>(const RoadmapPtr_t &amp;r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a135d80cb9cd81f0b1289c8cf734229e1</anchor>
      <arglist>(const LeafConnectedCompWkPtr_t &amp;shPtr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>graph::StatePtr_t</type>
      <name>state_</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>aa9000b305f6ff0a0e2e9851c3447d389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RoadmapNodes_t</type>
      <name>nodes_</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a04bf3e0d8806ed25886adf8f1286e6de</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Roadmap</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a07fbd00a87b2baaf8091241bdc6ef7c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::LeafHistogram</name>
    <filename>a00034.html</filename>
    <base>Statistics&lt; LeafBin &gt;</base>
    <base>hpp::manipulation::graph::Histogram</base>
    <member kind="typedef">
      <type>::hpp::statistics::Statistics&lt; LeafBin &gt;</type>
      <name>Parent</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a14b8265d06c78f8cdf0d27c1f666450b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>aba7484cd7fda7a22d79003c24fa6d972</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a2b32c2639bc17a521f25ad6e7d848501</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual HistogramPtr_t</type>
      <name>clone</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a3b69abb4f9174fe546bf2d9ecc9ce4fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>statistics::DiscreteDistribution&lt; RoadmapNodePtr_t &gt;</type>
      <name>getDistribOutOfConnectedComponent</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ad4f80ac3b700fad2810023f0d2429788</anchor>
      <arglist>(const core::ConnectedComponentPtr_t &amp;cc) const </arglist>
    </member>
    <member kind="function">
      <type>statistics::DiscreteDistribution&lt; RoadmapNodePtr_t &gt;</type>
      <name>getDistrib</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a803c8ba2ad98a2fdddf25e13517d0d83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a0370c287d633e5b96e332bd48a43ac49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Foliation &amp;</type>
      <name>foliation</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a1ca84a7c3e2d96172fb8aca26b78d1bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafHistogramPtr_t</type>
      <name>create</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a63227c9aadcb50e77539ce63a86021fa</anchor>
      <arglist>(const Foliation f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LeafHistogram</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a9e7ccaac391ed8622534f53b1282f7a7</anchor>
      <arglist>(const Foliation f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::LevelSetEdge</name>
    <filename>a00035.html</filename>
    <base>hpp::manipulation::graph::Edge</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LevelSetEdge</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a12d49dc1de9e8aa3b88a1110cb1f62ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>abae038861b5de86d5587006937c95151</anchor>
      <arglist>(ConfigurationIn_t qoffset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a8abd6a4aa3f01bac5d40819ac3a739ea</anchor>
      <arglist>(core::NodePtr_t n_offset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConstraintSetPtr_t</type>
      <name>buildConfigConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ac15ca9c6f3bb1722aedf0a5126551406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildHistogram</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ab3a1501b583d393ab8901aa962c7edc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LeafHistogramPtr_t</type>
      <name>histogram</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a53bff8987647abb9c4612efa700e1539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a7de60b1888fc90fc5629b1225a8d34ac</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a1993c49dfc5b03954a05cc920e3df132</anchor>
      <arglist>(const ImplicitPtr_t &amp;nm, const segments_t &amp;passiveDofs=segments_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a502e2746aa6d29db79f3d3e9c2852f6d</anchor>
      <arglist>(const DifferentiableFunctionPtr_t function, const ComparisonTypes_t ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ab44efbfd114bcb2cbbff881cf7a1d848</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a8acf3e61337d5f8b70c3d4a9ce1557f8</anchor>
      <arglist>(const ImplicitPtr_t &amp;nm, const segments_t &amp;passiveDofs=segments_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a327389a39c1b769bdea4c55cd0fac94d</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LevelSetEdgePtr_t</type>
      <name>create</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>aee81128bcc1b5b422e1ba83f81a3b58e</anchor>
      <arglist>(const std::string &amp;name, const GraphWkPtr_t &amp;graph, const StateWkPtr_t &amp;from, const StateWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a0447a89760f57b16290e137410fad32f</anchor>
      <arglist>(const LevelSetEdgeWkPtr_t &amp;weak, const GraphWkPtr_t &amp;graph, const StateWkPtr_t &amp;from, const StateWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LevelSetEdge</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a53ae261b60d0abeeb820c31a1c3835c0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a5b1fee54925a0370d5128ec5af9c88dc</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populateTooltip</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a89c7ed2905a024d8476e295d19d83111</anchor>
      <arglist>(dot::Tooltip &amp;tp) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a5e81907a12e84eee246d21cbece673a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a1993c49dfc5b03954a05cc920e3df132</anchor>
      <arglist>(const ImplicitPtr_t &amp;nm, const segments_t &amp;passiveDofs=segments_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a502e2746aa6d29db79f3d3e9c2852f6d</anchor>
      <arglist>(const DifferentiableFunctionPtr_t function, const ComparisonTypes_t ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>ab44efbfd114bcb2cbbff881cf7a1d848</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a8acf3e61337d5f8b70c3d4a9ce1557f8</anchor>
      <arglist>(const ImplicitPtr_t &amp;nm, const segments_t &amp;passiveDofs=segments_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a327389a39c1b769bdea4c55cd0fac94d</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ManipulationPlanner</name>
    <filename>a00036.html</filename>
    <base>hpp::core::PathPlanner</base>
    <member kind="typedef">
      <type>std::list&lt; std::size_t &gt;</type>
      <name>ErrorFreqs_t</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a0911cdddf3c4cf9d79d3e10a4b88cbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>oneStep</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a4d695d06f24314127d2276c1217c4d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extend</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ac4236433001133fdc6b06d6ed735d29c</anchor>
      <arglist>(RoadmapNodePtr_t q_near, const ConfigurationPtr_t &amp;q_rand, core::PathPtr_t &amp;validPath)</arglist>
    </member>
    <member kind="function">
      <type>ErrorFreqs_t</type>
      <name>getEdgeStat</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a0474df09dad59f247ed86dd952cbd344</anchor>
      <arglist>(const graph::EdgePtr_t &amp;edge) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ManipulationPlannerPtr_t</type>
      <name>create</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a7a1124e3643fcff7b6a58dd8d4478b3f</anchor>
      <arglist>(const core::Problem &amp;problem, const core::RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StringList_t</type>
      <name>errorList</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a9ab3793777d8057c6a12a7495b12d36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ManipulationPlanner</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a08c271a3c8722f298edf1f8ebedd6ea2</anchor>
      <arglist>(const Problem &amp;problem, const RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ae957d0607f73d71d47764708ef6d02c7</anchor>
      <arglist>(const ManipulationPlannerWkPtr_t &amp;weak)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::NodeBin</name>
    <filename>a00037.html</filename>
    <base>hpp::statistics::Bin</base>
    <member kind="typedef">
      <type>::hpp::statistics::Bin</type>
      <name>Parent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ad512ed79f65cd4ebe4d3eb02b60279d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeBin</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a23931dafd2906352064e65feb27c8151</anchor>
      <arglist>(const StatePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ab4627c3572d14af6cc9483ce66d32a5a</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a617656ee64aa25a4d23710e8af9f63ec</anchor>
      <arglist>(const NodeBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a42c931bdebb891ff67cb25b9ffd1b748</anchor>
      <arglist>(const NodeBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const StatePtr_t &amp;</type>
      <name>state</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a79725682adf86415c6b80f59c1a7edd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a5e9614bcb671ee6a126b7e5f801d4fa2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</name>
    <filename>a00038.html</filename>
    <member kind="function">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>merge</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a2bfe4edcdd3f12e336ca54a55579bae6</anchor>
      <arglist>(const NumericalConstraintsAndPassiveDofs &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToComp</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a9e7fb8467bab2b1ce5cc395cfdb90ec7</anchor>
      <arglist>(GraphComponentPtr_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>specifyFoliation</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>abeceba700deb75c6de7685b85fd81b8c</anchor>
      <arglist>(LevelSetEdgePtr_t lse) const </arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraints_t</type>
      <name>nc</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a7119a1955003ac409c37e0539fafb50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IntervalsContainer_t</type>
      <name>pdof</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a32f302a567f6e297a3702d338c9eaa8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::ObjectDef_t</name>
    <filename>a00039.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a32006df23526d74ac4eeb2481edcf74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringList_t</type>
      <name>handles</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa9ed2c28f383a98f05671e57fecac0f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringList_t</type>
      <name>shapes</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa51e3ace425a877f80971df5d93962c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Problem</name>
    <filename>a00040.html</filename>
    <base>hpp::core::Problem</base>
    <member kind="typedef">
      <type>core::Problem</type>
      <name>Parent</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>abf0562f074347e9edee4722c06b2b233</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5917e233457c37391720f844b71559c8</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7d02f53811676ee3d561f882b536f09b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkProblem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab443477c6c41778e3f0ebf622595bbac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PathValidationPtr_t</type>
      <name>pathValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a08a9ed97ad655635315591c3f0bc86f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pathValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab1d0f8eda4825a79b54af0f701ec1b9b</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
    <member kind="function">
      <type>SteeringMethodPtr_t</type>
      <name>steeringMethod</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab256e27068b76a5c0e55e5b3c3cb2bd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>steeringMethod</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a701afafa00d685f1c9e3d9c2d46822bb</anchor>
      <arglist>(core::SteeringMethodPtr_t sm)</arglist>
    </member>
    <member kind="function">
      <type>PathValidationPtr_t</type>
      <name>pathValidationFactory</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2d23ae4180330441f0d973658d9f27b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPathValidationFactory</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7bdbe598677daa7ecc2de2851fadc61e</anchor>
      <arglist>(const core::PathValidationBuilder_t &amp;factory, const value_type &amp;tol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProblemPtr_t</type>
      <name>create</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7dd02a3f1b969c237f6bf4b88602229b</anchor>
      <arglist>(DevicePtr_t robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Problem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5fa00ba1c5b29aff8c9c8b3338710fcb</anchor>
      <arglist>(DevicePtr_t robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af597f8898b63d16a664900b8f78fe251</anchor>
      <arglist>(ProblemWkPtr_t wkPtr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ProblemSolver</name>
    <filename>a00041.html</filename>
    <base>hpp::core::ProblemSolver</base>
    <member kind="typedef">
      <type>core::ProblemSolver</type>
      <name>parent_t</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a3ea543ce7576c211ce808ac0caf82269</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>Names_t</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a37d61097868fcc695c42e0652c839993</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProblemSolver</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>abdc936250ef45d9fd9760ef8d4161cd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProblemSolver</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>aab7337ae83fa8beacca4f1354b0aa090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>robot</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a8d80f345da77e62302661425e46337ad</anchor>
      <arglist>(const core::DevicePtr_t &amp;robot)</arglist>
    </member>
    <member kind="function">
      <type>const DevicePtr_t &amp;</type>
      <name>robot</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>aefc0afa71a55f998d076e593d3e09898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPlacementConstraint</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a4eb8033c2fbc7fa0517319927a4e609a</anchor>
      <arglist>(const std::string &amp;name, const StringList_t &amp;surface1, const StringList_t &amp;surface2, const value_type &amp;margin=1e-4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPrePlacementConstraint</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a2c1bb1907e10499d3de3c0fa35892b85</anchor>
      <arglist>(const std::string &amp;name, const StringList_t &amp;surface1, const StringList_t &amp;surface2, const value_type &amp;width, const value_type &amp;margin=1e-4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createGraspConstraint</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>affa4460f09a49c167d2d26080a14644a</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;gripper, const std::string &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPreGraspConstraint</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a187ca552878311344aaf42c6058ca2bb</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;gripper, const std::string &amp;handle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pathValidationType</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>adc7709e196eaf2384c224164ef90e8d3</anchor>
      <arglist>(const std::string &amp;type, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetProblem</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a366e896cf9765f7b93b1bc3814fa8eca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetRoadmap</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a3455bd10d95a75709c0af648cf0e0ef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProblemPtr_t</type>
      <name>problem</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ab604990db5a8e985a8714394267433ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTargetState</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ae665abe9a40ed209a2031ecdb3a1dee6</anchor>
      <arglist>(const graph::StatePtr_t state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a285cc252d16799f4ab12e7626d9ace0d</anchor>
      <arglist>(const std::string &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a941b2081aaa3ccf185e35244006a8980</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initConstraintGraph</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>abae803f3b6b580f3979291b45db1cf66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProblemSolverPtr_t</type>
      <name>create</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>afcb6d4d0b7778be7e7bfa66ec74ed316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>core::Container&lt; graph::GraphPtr_t &gt;</type>
      <name>graphs</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a5ce153121454be65f4f1919e09da5ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConstraintsAndComplements_t</type>
      <name>constraintsAndComplements</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ac73b586c14e5e9645c903c5cd6b5cef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeProblem</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a2c9256e8d6ed5901ac0134a4f1fc9345</anchor>
      <arglist>(ProblemPtr_t problem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a285cc252d16799f4ab12e7626d9ace0d</anchor>
      <arglist>(const std::string &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a941b2081aaa3ccf185e35244006a8980</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initConstraintGraph</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>abae803f3b6b580f3979291b45db1cf66</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::pathOptimization::RandomShortcut</name>
    <filename>a00042.html</filename>
    <base>hpp::core::pathOptimization::RandomShortcut</base>
    <member kind="function" static="yes">
      <type>static RandomShortcutPtr_t</type>
      <name>create</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a3fda831186e0f6cfbd2254d0e8494806</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RandomShortcut</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aef7df8193533c57c79eb1769af18267f</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>shootTimes</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aef4b92b9d33099030f6d0aca72a3d10a</anchor>
      <arglist>(const core::PathVectorPtr_t &amp;currentOpt, const value_type &amp;t0, value_type &amp;t1, value_type &amp;t2, const value_type &amp;t3)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Roadmap</name>
    <filename>a00043.html</filename>
    <base>hpp::core::Roadmap</base>
    <member kind="typedef">
      <type>core::Roadmap</type>
      <name>Parent</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a0ff87d00a45e700f78718cb827c4491b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertHistogram</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ab851a4cf0b759dacd80a157d44bad4e4</anchor>
      <arglist>(const graph::HistogramPtr_t hist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a3e90972b8f415e37c5357536ea6e82eb</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>afdf0ab6cb8862e361901d975147046ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_node</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ae8177585fca28cb6e0e6ce4ca64250bf</anchor>
      <arglist>(const core::NodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>RoadmapNodePtr_t</type>
      <name>nearestNode</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a3c77547f6284aa745528a83eebb8fa57</anchor>
      <arglist>(const ConfigurationPtr_t &amp;configuration, const ConnectedComponentPtr_t &amp;connectedComponent, const graph::StatePtr_t &amp;state, value_type &amp;minDistance) const </arglist>
    </member>
    <member kind="function">
      <type>graph::StatePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ac59daa84bcef5a513ddce63efff158ce</anchor>
      <arglist>(RoadmapNodePtr_t node) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a700410e58854bfa5a8d2b30c4f945c45</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;cc1, const LeafConnectedCompPtr_t &amp;cc2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a91daff67ed3ef3811d49438be7580025</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;cc1, LeafConnectedComp::LeafConnectedComps_t &amp;ccs)</arglist>
    </member>
    <member kind="function">
      <type>graph::StatePtr_t</type>
      <name>getState</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ab7ebc2a1b5d858d9d9b751f68c2c1b27</anchor>
      <arglist>(RoadmapNodePtr_t node)</arglist>
    </member>
    <member kind="function">
      <type>const LeafConnectedComps_t &amp;</type>
      <name>leafConnectedComponents</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a9ec78ccd621d3c9444dd0a3e8bcab5d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RoadmapPtr_t</type>
      <name>create</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>af428a6a6e557cbd8752ec4cb0649e3e2</anchor>
      <arglist>(const core::DistancePtr_t &amp;distance, const core::DevicePtr_t &amp;robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>statInsert</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a84dfc62ab7274726edef9b1635cc9758</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Roadmap</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a3b4b960c1e465ff3b02332d927014e56</anchor>
      <arglist>(const core::DistancePtr_t &amp;distance, const core::DevicePtr_t &amp;robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>core::NodePtr_t</type>
      <name>createNode</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a612161cf33cca8cd04dab5ef2de693b7</anchor>
      <arglist>(const ConfigurationPtr_t &amp;config) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>aefd9d6355ef08e28189d6e572664f542</anchor>
      <arglist>(const RoadmapPtr_t &amp;shPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addEdge</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a914cb4a938310ba9171d8d1af192bb5a</anchor>
      <arglist>(const core::EdgePtr_t &amp;edge)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::RoadmapNode</name>
    <filename>a00044.html</filename>
    <base>hpp::core::Node</base>
    <member kind="enumvalue">
      <name>CACHE_DISABLED</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892aca34c188eb2bd4add70d87c0c497050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_UP_TO_DATE</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892ab5e44abceb6b86685d599b688eb72d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_NEED_UPDATE</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892abd691b7189eb70d13b0371f661920405</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RoadmapNode</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a51b71cde2a1b3d9f3fb76d940319dc2f</anchor>
      <arglist>(const ConfigurationPtr_t &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RoadmapNode</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad6b21d32d47fdaf9bfce8456dbb312ab</anchor>
      <arglist>(const ConfigurationPtr_t &amp;configuration, ConnectedComponentPtr_t cc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leafConnectedComponent</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aafe8a266dce6c4de1ed1c045e4a25c7e</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;sc)</arglist>
    </member>
    <member kind="function">
      <type>LeafConnectedCompPtr_t</type>
      <name>leafConnectedComponent</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af53492624ccaa2d8489ce0d558d69885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CachingSystem</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_DISABLED</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892aca34c188eb2bd4add70d87c0c497050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_UP_TO_DATE</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892ab5e44abceb6b86685d599b688eb72d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_NEED_UPDATE</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892abd691b7189eb70d13b0371f661920405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CachingSystem</type>
      <name>defaultCachingSystem</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a845bb4f0fbc96d68eb56b0e2325b95cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CachingSystem</type>
      <name>cachingSystem</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9626013b903e649323dba597beae6a99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>graph::StatePtr_t</type>
      <name>graphNode</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae1157131e854c48319107d3f6772a9b0</anchor>
      <arglist>() const HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>graph::StatePtr_t</type>
      <name>graphState</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a2e44e7734f46f8a669810c2a49c8b258</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphNode</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a442245e06bd3d24e2fca7372418adb17</anchor>
      <arglist>(const graph::StatePtr_t &amp;state) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphState</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afa305704833899c75ef9fb0169d8a57f</anchor>
      <arglist>(const graph::StatePtr_t &amp;state)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::Rule</name>
    <filename>a00045.html</filename>
    <member kind="function">
      <type></type>
      <name>Rule</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a61d43c5fc046ff4942d0d821e1d9ccd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>grippers_</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a560e21dbcc69b952f479d08b2b529584</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>handles_</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a7a4d537643d0fcfd83f7aaaaa103e447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>link_</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>ab3615d90dd4e6038f2df98333270e1d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::pathOptimization::SmallSteps</name>
    <filename>a00046.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="function">
      <type>PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a57bf3955078ec94c065124bf5af147be</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SmallStepsPtr_t</type>
      <name>create</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a89220c0d2fa36ddaaacc17f0214092c7</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SmallSteps</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a005e70360e7fee254244cfebc06dc81d</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::pathOptimization::SplineGradientBased</name>
    <filename>a00047.html</filename>
    <templarg>_PolynomeBasis</templarg>
    <templarg>_SplineOrder</templarg>
    <base>hpp::core::pathOptimization::SplineGradientBased</base>
    <member kind="enumvalue">
      <name>PolynomeBasis</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7c137f76cb226e809091798e95cec0a7a70da967725e7e7816f254db4fe138472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SplineOrder</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7c137f76cb226e809091798e95cec0a7a209df02f657c5bb7f7c4ef0ca89a5544</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::pathOptimization::SplineGradientBased&lt; PolynomeBasis, SplineOrder &gt;</type>
      <name>Parent_t</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a40e51f7c8c80de6c2a7f68a923bb1253</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SplineGradientBased &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a226a1dd216c7101e9e7a7cf451af6caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>path::Spline&lt; PolynomeBasis, SplineOrder &gt;</type>
      <name>Spline</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7a79cb327a37ddaef9a4a17056b997f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Spline::Ptr_t</type>
      <name>SplinePtr_t</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab616672d13265007e6216138092b0616</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; SplinePtr_t &gt;</type>
      <name>Splines_t</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aebf204730d791748c30939d6a98ee711</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PolynomeBasis</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7c137f76cb226e809091798e95cec0a7a70da967725e7e7816f254db4fe138472</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SplineOrder</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7c137f76cb226e809091798e95cec0a7a209df02f657c5bb7f7c4ef0ca89a5544</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>create</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a858c7ad79448389e5f73792c36b300d8</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>createFromCore</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab6697f14843c8a6ee9b50495e8665ee2</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>hpp::core::pathOptimization::LinearConstraint</type>
      <name>LinearConstraint</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>af507a835f04ffd96031e48a95281718a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; SplineOptimizationData &gt;</type>
      <name>SplineOptimizationDatas_t</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a906ffde222f61735c59ca2c2c2b457e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SplineGradientBased</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a21fc8dc0d0f34ddf40ee8e4a3f6ed3ac</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializePathValidation</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a9edc94eb29dfa2dd7cff072360c7af4b</anchor>
      <arglist>(const Splines_t &amp;splines)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addProblemConstraints</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a68944779aea3f611d5139683937bf20a</anchor>
      <arglist>(const core::PathVectorPtr_t &amp;init, const Splines_t &amp;splines, LinearConstraint &amp;lc, SplineOptimizationDatas_t &amp;sods) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>constrainEndIntoState</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a93468941ff32474b18f03645ed84a9f7</anchor>
      <arglist>(const core::PathPtr_t &amp;path, const size_type &amp;idxSpline, const SplinePtr_t &amp;spline, const graph::StatePtr_t state, LinearConstraint &amp;lc) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>constraintDerivativesAtEndOfSpline</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a19b22a0d3ae0c9535ea2b8904b443516</anchor>
      <arglist>(const size_type &amp;idxSpline, const SplinePtr_t &amp;spline, LinearConstraint &amp;lc) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::problemTarget::State</name>
    <filename>a00048.html</filename>
    <base>hpp::core::ProblemTarget</base>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a36f1e0b8d1c12eca19da82441b027655</anchor>
      <arglist>(const core::RoadmapPtr_t &amp;roadmap) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reached</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a477f3e2d389dccb87d1a64e7d10184ad</anchor>
      <arglist>(const core::RoadmapPtr_t &amp;roadmap) const </arglist>
    </member>
    <member kind="function">
      <type>core::PathVectorPtr_t</type>
      <name>computePath</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a6c4c0abd9459f1993aabed47ec88c847</anchor>
      <arglist>(const core::RoadmapPtr_t &amp;roadmap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>target</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aecd11b7ea1bd9748f45d850c86395877</anchor>
      <arglist>(const graph::StatePtr_t &amp;state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StatePtr_t</type>
      <name>create</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>acf87e14e9af97385e774584493dea4d7</anchor>
      <arglist>(const core::ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>State</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>adcff4506856396c487f37e51d19dff31</anchor>
      <arglist>(const core::ProblemPtr_t &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::State</name>
    <filename>a00049.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="typedef">
      <type>boost::function&lt; EdgePtr_t(const std::string &amp;, const GraphWkPtr_t &amp;, const StateWkPtr_t &amp;, const StateWkPtr_t &amp;) &gt;</type>
      <name>EdgeFactory</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abf333d519cbc14a041c2b50ffe2c3026</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~State</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a537d2cde36b6daf38be10022b0b2ee0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>linkTo</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ad6317fe9db6a967fc174b08e4a917b34</anchor>
      <arglist>(const std::string &amp;name, const StatePtr_t &amp;to, const size_type &amp;w=1, EdgeFactory create=Edge::create)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aaacb003cbc2694de646f9ccfcb2a60ba</anchor>
      <arglist>(ConfigurationIn_t config) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaypoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a283faef672f62232f3420249f9e76be4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isWaypoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a555282fb709688fcf172d9fea6431b46</anchor>
      <arglist>(bool isWaypoint)</arglist>
    </member>
    <member kind="function">
      <type>StateSelectorWkPtr_t</type>
      <name>stateSelector</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a7c33c319b930900c122f491878cb21b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stateSelector</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2d92c660770726f1d49f1f6b642b79bb</anchor>
      <arglist>(const StateSelectorWkPtr_t &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>const Neighbors_t &amp;</type>
      <name>neighbors</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>acf8ad5a96f539bdea5f5a713f46ac7fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>neighborEdges</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>afff8c76af22cb9fcf0730c61fec98a5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Edges_t &amp;</type>
      <name>hiddenNeighbors</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6c1efad0c49ae1e64c7892b0d3bed3f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateWeight</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af53d2c60123b504261936d415cb5c12c</anchor>
      <arglist>(const EdgePtr_t &amp;edge, const Weight_t &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>Weight_t</type>
      <name>getWeight</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aef610ecb7a04c7b8cd7341fc93ca267f</anchor>
      <arglist>(const EdgePtr_t &amp;edge)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a7935eac0ea89f02968fc735588b88af6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraintForPath</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af8474a8e79b175f3dd66e36ef7fa82c4</anchor>
      <arglist>(const ImplicitPtr_t &amp;nm, const segments_t &amp;passiveDofs=segments_t())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraintForPath</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae58875f5df0ef6d15565eec3e0c8e0f7</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;function, const ComparisonTypes_t &amp;ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertNumericalConstraintsForPath</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abbd284a2dbd954d89b1f7cfcc2c05fcb</anchor>
      <arglist>(ConfigProjectorPtr_t &amp;proj) const </arglist>
    </member>
    <member kind="function">
      <type>const NumericalConstraints_t &amp;</type>
      <name>numericalConstraintsForPath</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5bbfd667ab538cbd139800109c983ae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a55e0990e6657e44ba2eed7992f587c81</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StatePtr_t</type>
      <name>create</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a979c9b02032f6466529b665f7f7a52f6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ace69fcfd6636b52e09601b6bc4127579</anchor>
      <arglist>(const StateWkPtr_t &amp;self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>State</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abc1490519223b01e3205e990eb2a184f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a98b2dc3cdc283ec6b427bfd325404e59</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populateTooltip</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abb8035f16eb2913e3f18799f979f520b</anchor>
      <arglist>(dot::Tooltip &amp;tp) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a0f24c98c8e3855452ab699b028f118ff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::steeringMethod::StateFunction</name>
    <filename>a00050.html</filename>
    <base>hpp::constraints::DifferentiableFunction</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateFunction &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>ad3eaf2ec29a95eab72425dceabd65788</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateFunction</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>ab0860f002a7d21eb1ac43bff2121cc65</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;inner, const size_type &amp;nArgs, const size_type &amp;nDers, const segment_t &amp;inArgs, const segment_t &amp;inDers)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>impl_compute</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a94caaf9ace59e1cd10134fd4ccc640f4</anchor>
      <arglist>(pinocchio::LiegroupElementRef y, vectorIn_t arg) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>impl_jacobian</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a0f3b7a28bf8fd2ecd215bd2f3ab44318</anchor>
      <arglist>(matrixOut_t J, vectorIn_t arg) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a51510d64d1f7b923d7c1d7ba0f3ca887</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DifferentiableFunctionPtr_t</type>
      <name>inner_</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a62af8743f0a4353558ea87b685730778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const segment_t</type>
      <name>sa_</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a2514d4bc463a3195732bf67a69ee349b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const segment_t</type>
      <name>sd_</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a82c6f8d3e153e06b18aa7d2b53c3e32d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::StateHistogram</name>
    <filename>a00051.html</filename>
    <base>Statistics&lt; NodeBin &gt;</base>
    <base>hpp::manipulation::graph::Histogram</base>
    <member kind="typedef">
      <type>::hpp::statistics::Statistics&lt; NodeBin &gt;</type>
      <name>Parent</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa97127474dc9cf0b72ae63ef353c383f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateHistogram</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a6cb95add7f2100dd6ed9e877d5678fb6</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa5aa521e979a79d702f8410f45775e94</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a2cb1a7c9f5748be019dc26612d707be6</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const graph::GraphPtr_t &amp;</type>
      <name>constraintGraph</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a711bb97d0fced3784c976c21573cc783</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual HistogramPtr_t</type>
      <name>clone</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>ae3bef14aa7cdb2fca88d112818c2ffa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3972ae40878c952fcf9db871031dc6dd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::StateSelector</name>
    <filename>a00052.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StateSelector</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a396a6c7cc68266226ebeada4637b6058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>createState</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ac660240731d3c1985ad66443c1221b43</anchor>
      <arglist>(const std::string &amp;name, bool waypoint=false, const int w=0)</arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>getState</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>afda5d1e7a88e78ea2b21e7115aed7f52</anchor>
      <arglist>(ConfigurationIn_t config) const </arglist>
    </member>
    <member kind="function">
      <type>StatePtr_t</type>
      <name>getState</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a84946d3005e78be7577d6e424c134f82</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>States_t</type>
      <name>getStates</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>af74619c029873da2b51386d6cf351075</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EdgePtr_t</type>
      <name>chooseEdge</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>adad6fc324b722cc297bd7ec1069277ac</anchor>
      <arglist>(RoadmapNodePtr_t from) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNumericalConstraint</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a523a9efae890ef6fda5aac1e7e648bba</anchor>
      <arglist>(const constraints::ImplicitPtr_t &amp;, const segments_t &amp;=segments_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLockedJointConstraint</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ab1b221833b3a6e4bcc3ecf9c2e93bca8</anchor>
      <arglist>(const constraints::LockedJoint &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>aa679d195f62a87c7d11310b592bbc270</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StateSelectorPtr_t</type>
      <name>create</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ab0f7daa7357c89edc49b736ae1f4457d</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::pair&lt; int, StatePtr_t &gt;</type>
      <name>WeighedState_t</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a5a7892f22bff71fe270dfd72a11c67e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::list&lt; WeighedState_t &gt;</type>
      <name>WeighedStates_t</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>aeb50739d5f8b71879e7ce3c817410a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a65ff31f5e8d52aa0424c705ff99e6710</anchor>
      <arglist>(const StateSelectorPtr_t &amp;weak)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StateSelector</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a599cf8847ce94b01747814289aef127a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a759aceccce0d1004fdd0fff7f870df8f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a6a24b498111b9a5bc7070eca6d41cfe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WeighedStates_t</type>
      <name>orderedStates_</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a820477a1d4f01b33bf41bbb121ab800f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>States_t</type>
      <name>waypoints_</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a6cb195d6091c8421fb229bb4b658461e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::SteeringMethod</name>
    <filename>a00053.html</filename>
    <base>hpp::core::SteeringMethod</base>
    <member kind="function">
      <type>const core::SteeringMethodPtr_t &amp;</type>
      <name>innerSteeringMethod</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>ac8e836bb814de2f6d941bada0496ccf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>innerSteeringMethod</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a97caf616dddf0711ebbaf0d0b3f9000b</anchor>
      <arglist>(const core::SteeringMethodPtr_t &amp;sm)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SteeringMethod</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a1f35642bc290dd4a2815bd3706d65b0b</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SteeringMethod</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a37b09ffdd5f3416829457fcf61b48e88</anchor>
      <arglist>(const SteeringMethod &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>aee3562a25cc6e13ac6fa8815219cd48e</anchor>
      <arglist>(SteeringMethodWkPtr_t weak)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Problem &amp;</type>
      <name>problem_</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>aaea2086bc0c26ac8754cf35fc9fb0943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>core::SteeringMethodPtr_t</type>
      <name>steeringMethod_</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>aad3af379369fb972c765301a94d803b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::dot::Tooltip</name>
    <filename>a00054.html</filename>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>TooltipLineVector</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ad2d2ec7dc54bdca166b3b73ded92a5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tooltip</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ab4844fe2954b42007b69b29a90f51606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toStr</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a3772baf8f42789c8eecd62b29e75f9ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLine</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a31cad46fb447eab3e4cfbe2a9134e7a6</anchor>
      <arglist>(const std::string &amp;l)</arglist>
    </member>
    <member kind="variable">
      <type>TooltipLineVector</type>
      <name>v</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a2f37df2cdaf58ad544460dd66cd9aef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>tooltipendl</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>acb56b7c65b494ec62c5fb8ce369c0102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::WaypointEdge</name>
    <filename>a00055.html</filename>
    <base>hpp::manipulation::graph::Edge</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canConnect</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>afa01c62a6a73071b04a1745ad7110588</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>build</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ac752dc1f7fc023d9d42ff2ec0765efe8</anchor>
      <arglist>(core::PathPtr_t &amp;path, ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>af41961fc5b598054f7ab5903b71a6bf1</anchor>
      <arglist>(ConfigurationIn_t qoffset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function">
      <type>const EdgePtr_t &amp;</type>
      <name>waypoint</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a7d005e2f12081d3d536233bb8228d5ea</anchor>
      <arglist>(const std::size_t index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a01b2c2660ae70e39eb7dd7f979f96da3</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nbWaypoints</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a426fe9704fd03e6f5d4ca837b1710725</anchor>
      <arglist>(const size_type number)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>nbWaypoints</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a5bbdaa43f45318f86e96c0e6d1c141ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaypoint</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a59f1e11d8a7f73be2809f3960d93d5ad</anchor>
      <arglist>(const std::size_t index, const EdgePtr_t wEdge, const StatePtr_t wTo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WaypointEdgePtr_t</type>
      <name>create</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ac0863199fc4113d319d9095b4d6449af</anchor>
      <arglist>(const std::string &amp;name, const GraphWkPtr_t &amp;graph, const StateWkPtr_t &amp;from, const StateWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WaypointEdge</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a6a71e1a18114f5a7210f42b970bc37a5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ac0b227c74df874bd7cf59175e5413972</anchor>
      <arglist>(const WaypointEdgeWkPtr_t &amp;weak, const GraphWkPtr_t &amp;graph, const StateWkPtr_t &amp;from, const StateWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a46f933540867bebb7536f1add959bf2e</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::WeighedDistance</name>
    <filename>a00056.html</filename>
    <base>hpp::core::WeighedDistance</base>
    <member kind="function" virtualness="virtual">
      <type>virtual core::DistancePtr_t</type>
      <name>clone</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a5822cf3fdb6fc85deaf23a99f16094c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a7031b24a4aab9ed25b9892a35e6ff540</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a6d09fb37b80ced9e6d8f2842ab173d71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WeighedDistancePtr_t</type>
      <name>create</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a472d37430ce60fee5ede526a89b473df</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WeighedDistancePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>aac7b677b91f2e0b124afe860bbaeda07</anchor>
      <arglist>(const WeighedDistancePtr_t &amp;distance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeighedDistance</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a7bfbc254b363fd28473008f3d20a0e6a</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const graph::GraphPtr_t graph)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeighedDistance</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>afbf52a0da1becaefb8332dbc525edb91</anchor>
      <arglist>(const WeighedDistance &amp;distance)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual value_type</type>
      <name>impl_distance</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a41054ea700a63e7780fed7e7cd518ad4</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual value_type</type>
      <name>impl_distance</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a480788fefcfbf236241b53afa907d4fc</anchor>
      <arglist>(core::NodePtr_t n1, core::NodePtr_t n2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>abc070e16d1e96d5d1002da5787556a0f</anchor>
      <arglist>(WeighedDistanceWkPtr_t self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::WeighedLeafConnectedComp</name>
    <filename>a00057.html</filename>
    <base>hpp::manipulation::LeafConnectedComp</base>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ab6584d7cf55de9d74b7ed7d8d06f3225</anchor>
      <arglist>(const LeafConnectedCompPtr_t &amp;otherCC)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirstNode</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a45ed31daf22451cad30038c880e8c04d</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>indexOf</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a3ac641ef7dbff9bb1c50c401fbebeb8a</anchor>
      <arglist>(const graph::EdgePtr_t e) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normalizeProba</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>aa00d3825c4b37ad88d55cb328c62507f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WeighedLeafConnectedCompPtr_t</type>
      <name>create</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a36318ef149aabd1b96cc699fb86edb88</anchor>
      <arglist>(const RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="variable">
      <type>value_type</type>
      <name>weight_</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>aff7e983d4ce73a5872fc7e2182682de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_t</type>
      <name>p_</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a91175f6d41af73a74367b4b19588d787</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; graph::EdgePtr_t &gt;</type>
      <name>edges_</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a57c2ef96555045e811b5e451b12dade4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeighedLeafConnectedComp</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a70ca450c01b2ca5f6a29371a7a9b640b</anchor>
      <arglist>(const RoadmapPtr_t &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp</name>
    <filename>a00091.html</filename>
    <namespace>hpp::manipulation</namespace>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a19f2d09243fdd6828b4d40953f4f413f</anchor>
      <arglist>(HPP_UTIL_DLLAPI, AssertionError)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a0bcb296b7ca1dab3382f49953c92a853</anchor>
      <arglist>(std::ostream &amp;o, const Exception &amp;exception)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI long &amp;</type>
      <name>indent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a16259580a8f0a07bad42458aa65963f3</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a669ea668296b2ed089b72c3a1dce688e</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>afaf02e3dd1c3eaf21e287dc4c825cc89</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>resetindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a011dc7bc6e7c975fdc993c5b7abbac56</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>iendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ab2e087df519f97420058c160b8313be4</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a49bcbcf63c92e671f9aa3c737b8a2852</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a8d7bf72162e22331e54b3c387651ed95</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>setpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaf0a4b5cf356013ff921516719a6b9cf0</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>unsetpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9ebdb5b7e4ea691aa1cc921cacd64b28</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, PrettyOutput &gt;</type>
      <name>pretty_print</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaa29fa2d7b51bc30954dd1e77c1163eca</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, CondensedOutput &gt;</type>
      <name>condensed</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga88b06fbd68a50ab03ddc565e58e9817e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, OneLineOutput &gt;</type>
      <name>one_line</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9a8cb47183de8943e9e57cb92659d5aa</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation</name>
    <filename>a00092.html</filename>
    <namespace>hpp::manipulation::graph</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
    <namespace>hpp::manipulation::problemTarget</namespace>
    <namespace>hpp::manipulation::steeringMethod</namespace>
    <class kind="class">hpp::manipulation::ConnectedComponent</class>
    <class kind="struct">hpp::manipulation::ConstraintAndComplement_t</class>
    <class kind="class">hpp::manipulation::ConstraintSet</class>
    <class kind="class">hpp::manipulation::Device</class>
    <class kind="class">hpp::manipulation::GraphNodeOptimizer</class>
    <class kind="class">hpp::manipulation::GraphOptimizer</class>
    <class kind="class">hpp::manipulation::GraphPathValidation</class>
    <class kind="class">hpp::manipulation::Handle</class>
    <class kind="class">hpp::manipulation::LeafConnectedComp</class>
    <class kind="class">hpp::manipulation::ManipulationPlanner</class>
    <class kind="class">hpp::manipulation::Problem</class>
    <class kind="class">hpp::manipulation::ProblemSolver</class>
    <class kind="class">hpp::manipulation::Roadmap</class>
    <class kind="class">hpp::manipulation::RoadmapNode</class>
    <class kind="class">hpp::manipulation::SteeringMethod</class>
    <class kind="class">hpp::manipulation::WeighedDistance</class>
    <class kind="class">hpp::manipulation::WeighedLeafConnectedComp</class>
    <member kind="typedef">
      <type>std::vector&lt; ConstraintAndComplement_t &gt;</type>
      <name>ConstraintsAndComplements_t</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>ga1f2f76e306fa8dce51b0f651f5a320bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Device &gt;</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad782ecbe33604e227e8d8ffaa3614906</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Device &gt;</type>
      <name>DeviceConstPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a69f5e0fb94ffdc8334ba82cbb0d56b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Joint</type>
      <name>Joint</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9822fce9a89dc5153976a2fda9655a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointPtr_t</type>
      <name>JointPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a03e67a33feabcfd0eda5bbfc6e886f24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointIndex</type>
      <name>JointIndex</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aa197725d05714d428788323fe0f5dd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; JointIndex &gt;</type>
      <name>JointIndices_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a1b1adc34de37f5e018c2b72c4dc61816</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::FrameIndex</type>
      <name>FrameIndex</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a393d57e83475a4cd52c21fca00461272</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; pinocchio::FrameIndex &gt;</type>
      <name>FrameIndices_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a6d23539b40ea79adbef0f9bf5265853e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a225947946a98a0e7f6cd0eeec025261e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::ConfigurationIn_t</type>
      <name>ConfigurationIn_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac65f45e2b50138b4c0befe489bb2e7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::ConfigurationOut_t</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7c79d4e1d0e580de24cdf0f96aca5071</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationPtr_t</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0719f134157b008578bdbb637bd7c502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::GripperPtr_t</type>
      <name>GripperPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a37965524bf9e2b854b1e600957146448</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupElement</type>
      <name>LiegroupElement</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a53b65b3b520852c5c65ffbe356aedfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpace</type>
      <name>LiegroupSpace</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a66dc424f27f1b08698de99880ca8127e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpacePtr_t</type>
      <name>LiegroupSpacePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5431baa683a2d7bff2b62dbff173eff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; AxialHandle &gt;</type>
      <name>AxialHandlePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0684e45fa926cbb65b9df8272bb24a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Handle &gt;</type>
      <name>HandlePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a92732c6c727613b61716ad124a6a9d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Object &gt;</type>
      <name>ObjectPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>abb0c5d5ccdb621475b2797eef462c4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Object &gt;</type>
      <name>ObjectConstPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a50bc6e8ea2712047a6805e69e930e0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProblemSolver *</type>
      <name>ProblemSolverPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a608debc446da69af3feadf4c39f78246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Problem &gt;</type>
      <name>ProblemPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac67581d5f4396aeece59289edc73a5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Roadmap &gt;</type>
      <name>RoadmapPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0c28dd700f352653af9666049279d3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RoadmapNode *</type>
      <name>RoadmapNodePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>adaf8da46b37f1942734d58b272a952fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RoadmapNodePtr_t &gt;</type>
      <name>RoadmapNodes_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>af6616156c00aa80db17dfc0f24725f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConnectedComponent &gt;</type>
      <name>ConnectedComponentPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8e9ef6a3200682acf79c032b0dd4bf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LeafConnectedComp &gt;</type>
      <name>LeafConnectedCompPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a0024e46a9c267803d0e0bbcaf21e4a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const LeafConnectedComp &gt;</type>
      <name>LeafConnectedCompConstPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aa71136518f3e6c211cfa85b7ffc8ed8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; LeafConnectedCompPtr_t &gt;</type>
      <name>LeafConnectedComps_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac1001276d7e6741407f627fce801d43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WeighedLeafConnectedComp &gt;</type>
      <name>WeighedLeafConnectedCompPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a71bca0b9f578404c1478474b8a7862de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WeighedDistance &gt;</type>
      <name>WeighedDistancePtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9a7b15d5a7f059a2ab41f9a933a543d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientation</type>
      <name>RelativeOrientation</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a23228c696526a79a6c6f6f0514cda71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePosition</type>
      <name>RelativePosition</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aa1fe652c389244e999ea148b04ec52de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientationPtr_t</type>
      <name>RelativeOrientationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a83d1833e1da6222d4c203ad837356e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePositionPtr_t</type>
      <name>RelativePositionPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a81ad9eeab8f2c2632c2e52bbf7843502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformation</type>
      <name>RelativeTransformation</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>abc2663e5c21b5802d547fdd11f53941c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformationPtr_t</type>
      <name>RelativeTransformationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8e62be0d61f84f3c67b5106da63db983</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::value_type</type>
      <name>value_type</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac007ccc56320eb7b5748ad259fe4a9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::size_type</type>
      <name>size_type</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a86f423dcee19dfc5cb8769273d2d09a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a76203ca1e66dcf3c0d0544e5de1f9043</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vector_t</type>
      <name>vector_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad2d9aa3123e8b63655032fbae67d8e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vectorIn_t</type>
      <name>vectorIn_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad97f5e61fe751d9a07b8d0c11d264aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vectorOut_t</type>
      <name>vectorOut_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a368b89d05e614a9ce9795a6598c36832</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ManipulationPlanner &gt;</type>
      <name>ManipulationPlannerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a3180586c1bd5703bbb8d5d386215b9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphPathValidation &gt;</type>
      <name>GraphPathValidationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a06e1192f8e68967eb7102d1eb38efc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SteeringMethod &gt;</type>
      <name>SteeringMethodPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab226a620a75c7988def52aa6e8922e68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizer</type>
      <name>PathOptimizer</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5636b04594dffd6bfad225b069c0c0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizerPtr_t</type>
      <name>PathOptimizerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5e1c635c1a0881ccbc2229d049c7f02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphOptimizer &gt;</type>
      <name>GraphOptimizerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab48442b4dadade45ec31c70bd7a7f2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphNodeOptimizer &gt;</type>
      <name>GraphNodeOptimizerPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7e55377231d6e301b9208c5335ff62c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathProjectorPtr_t</type>
      <name>PathProjectorPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a111ec48114fff48949b1661a563ed992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; pinocchio::DevicePtr_t &gt;</type>
      <name>Devices_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a02ea60b4197d290e481f1b6cecf6f933</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ObjectPtr_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a25076831a140495234778ddf75ce8441</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Constraint</type>
      <name>Constraint</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aba6f9feb2949e5da227f8fa4aa9a7209</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConstraintPtr_t</type>
      <name>ConstraintPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>afc4cdb920936f0196fe98045485da1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::ImplicitPtr_t</type>
      <name>ImplicitPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7957a424db93e121dc606be4db3a0869</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>acf9261eff2522ea3e7a719c595226f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ae0b1cd51caf9529ab905358183509af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ComparisonTypes_t</type>
      <name>ComparisonTypes_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aac800cac9e95d3bd72a7f994b917b801</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjector</type>
      <name>ConfigProjector</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a1dcc36804edf6d230dc7d25e99d6ccdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjectorPtr_t</type>
      <name>ConfigProjectorPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a7fe50e8ceaee83f3c26bac0019fe8a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConstraintSet &gt;</type>
      <name>ConstraintSetPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>afeac6b2dff035785fcf8901c13bfb916</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DifferentiableFunctionPtr_t</type>
      <name>DifferentiableFunctionPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a09b7c812dd9f9d7cce1d6c705e758ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooter</type>
      <name>ConfigurationShooter</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aedc4023cf0088c70cd97134ceb174fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooterPtr_t</type>
      <name>ConfigurationShooterPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac43851bbd27162488b16452412e7d62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ValidationReport</type>
      <name>ValidationReport</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a659be0f00813e134c888ac1473d8e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationPtr_t</type>
      <name>PathValidationPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a33d8f036bac085399633803b68166512</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationReportPtr_t</type>
      <name>PathValidationReportPtr_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a99f3a6bb901058f0d5a131c4ec5fe6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrix_t</type>
      <name>matrix_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad0909318f61ecc99e11c76cf15b7d5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixIn_t</type>
      <name>matrixIn_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a63539e7146401f235bce0818b9c5c7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixOut_t</type>
      <name>matrixOut_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a5b57fec16e81aa95544067a9d955b266</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vector3_t</type>
      <name>vector3_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a24c129a3bd161824758d2ca4fa5d8de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrix3_t</type>
      <name>matrix3_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a76c997fb3a34baec536e3205787a5062</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Shape_t</type>
      <name>Shape_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac7c1e49664209d6e11af5c22cbcd5964</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::JointAndShape_t</type>
      <name>JointAndShape_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ad2f2a6cfabe1ac3bc5c729f0d8a4c30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::JointAndShapes_t</type>
      <name>JointAndShapes_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9af3a83737bd02bb4471fc01aa5d944e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>StringList_t</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8cccc2c73f80a309b4eb35824c05984e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>af4699e4830401075367c8905798c0c0f</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a69828fdc6347a6a64ede6faefe5675fb</anchor>
      <arglist>(AxialHandle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a2501eb4647dda7ee50714bca99bd46a2</anchor>
      <arglist>(Handle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9e798463bb2770a7606de13815f9c489</anchor>
      <arglist>(Object)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8de0acc9a402e5584de79595d31d256f</anchor>
      <arglist>(ProblemSolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab0a488840c517e5b6ec45ef7044c72c7</anchor>
      <arglist>(Problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a42f3996e834f4c74e87e3f6cce12a895</anchor>
      <arglist>(Roadmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a8fc81d1898468dd479a2c8d11e6ddb01</anchor>
      <arglist>(RoadmapNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>afb1d58021ff588ec2bb9446327424ea7</anchor>
      <arglist>(ConnectedComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ac3c9894b3afe415765e6627a2db8269c</anchor>
      <arglist>(LeafConnectedComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a30d8a0ee4bb11a93bc2e4c59baf879f9</anchor>
      <arglist>(WeighedLeafConnectedComp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a662d5d4e06314436f51f277f86a61b0c</anchor>
      <arglist>(WeighedDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a6ea0b209a0e13971d352a276bfc414f8</anchor>
      <arglist>(ManipulationPlanner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>ab5076cf1c1f42bea2d843d91b23b5196</anchor>
      <arglist>(GraphPathValidation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a9b0c1bf2a7331c6e86b95cc9b2a84b91</anchor>
      <arglist>(SteeringMethod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a3e1d04a56375b80dbc77768cabbe8100</anchor>
      <arglist>(GraphOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>acae5af5babe429a887c70aa30ddbe4d5</anchor>
      <arglist>(GraphNodeOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>a753c71e72904db352d7dbf5bcbdc452e</anchor>
      <arglist>(ConstraintSet)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00092.html</anchorfile>
      <anchor>aadf512ba33cbe149b0b4823dd674c4ad</anchor>
      <arglist>(std::ostream &amp;os, const Handle &amp;handle)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::graph</name>
    <filename>a00093.html</filename>
    <namespace>hpp::manipulation::graph::dot</namespace>
    <namespace>hpp::manipulation::graph::helper</namespace>
    <class kind="class">hpp::manipulation::graph::Edge</class>
    <class kind="class">hpp::manipulation::graph::Foliation</class>
    <class kind="class">hpp::manipulation::graph::Graph</class>
    <class kind="class">hpp::manipulation::graph::GraphComponent</class>
    <class kind="class">hpp::manipulation::graph::GuidedStateSelector</class>
    <class kind="class">hpp::manipulation::graph::Histogram</class>
    <class kind="class">hpp::manipulation::graph::LeafBin</class>
    <class kind="class">hpp::manipulation::graph::LeafHistogram</class>
    <class kind="class">hpp::manipulation::graph::LevelSetEdge</class>
    <class kind="class">hpp::manipulation::graph::NodeBin</class>
    <class kind="class">hpp::manipulation::graph::State</class>
    <class kind="class">hpp::manipulation::graph::StateHistogram</class>
    <class kind="class">hpp::manipulation::graph::StateSelector</class>
    <class kind="class">hpp::manipulation::graph::WaypointEdge</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Graph &gt;</type>
      <name>GraphPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a257c3360cdfb57cbd0ef0737d83cac6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; State &gt;</type>
      <name>StatePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ab07d088b872bc0146572aa4563fee759</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Edge &gt;</type>
      <name>EdgePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a77db730f566f1145010038dc24ccc28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WaypointEdge &gt;</type>
      <name>WaypointEdgePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ad86dfdc7bb030250836cb12e5f6535b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LevelSetEdge &gt;</type>
      <name>LevelSetEdgePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a1cc611aca73322cebcfd33bb268fa851</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateSelector &gt;</type>
      <name>StateSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a08fcf6fd69d96baa836a21de0db805ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GuidedStateSelector &gt;</type>
      <name>GuidedStateSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a75c43bc9b7100c2e090d83ffa5da2f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphComponent &gt;</type>
      <name>GraphComponentPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ae3026579f1a2d453a718d0d9c05c66ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GraphComponentWkPtr_t &gt;</type>
      <name>GraphComponents_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>af3e3db6d9da4187a0b717eb3b6c88cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; StatePtr_t &gt;</type>
      <name>States_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a2d567224d90b31e5f3a34d55930eab42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; EdgePtr_t &gt;</type>
      <name>Edges_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a3d2d73780ca32e3d43a675baef077d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;::Weight_t</type>
      <name>Weight_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a947f707f7974f48a233f1a712d2efd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;</type>
      <name>Neighbors_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ad891d4c3c9017e903ec0d1a0fa4f5b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; StateSelectorPtr_t &gt;</type>
      <name>StateSelectors_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a2c89ea1b0b8387c9dac8a4888e7fed97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::segments_t</type>
      <name>segments_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a16a60f76f1a95c8a84c3cf749489b71d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; segments_t &gt;</type>
      <name>IntervalsContainer_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a9195ea63fc2405820f19c041d596412f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::NumericalConstraints_t</type>
      <name>NumericalConstraints_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a0cec6bc1d90a0442cc2b151f5d550a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJoints_t</type>
      <name>LockedJoints_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a964f21f1e2ae8ce3b0832ed2fb42f9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Histogram &gt;</type>
      <name>HistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a6fd2e0379a89f5a7210cde5e963819ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateHistogram &gt;</type>
      <name>StateHistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a869c0d44f4d94150948045a1b55014d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LeafHistogram &gt;</type>
      <name>LeafHistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a1f6d90fd4d05abfa738c42cf597e61d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; HistogramPtr_t &gt;</type>
      <name>Histograms_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ac7330af86b49294209bbf99753cc7d1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GuidedStateSelector GuidedNodeSelector</type>
      <name>HPP_MANIPULATION_DEPRECATED</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ab3362553d2fc56a85abad90cad530937</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GuidedNodeSelector &gt;</type>
      <name>GuidedNodeSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a8b60a02ae9eea238dd29322f189cf68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; NodeSelector &gt;</type>
      <name>NodeSelectorPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a191baca9df5e148bd5d73ffed81c5b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodeSelectorPtr_t &gt;</type>
      <name>NodeSelectors_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a48894cedddbeb769db212e741d647935</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Node &gt;</type>
      <name>NodePtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a6ebe66d313d1e16d116ce13a01b00d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodePtr_t &gt;</type>
      <name>Nodes_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a0574ffae3e378053e8ca72f5de62f34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; StateHistogram &gt;</type>
      <name>NodeHistogramPtr_t</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a8c24af9828066db087db70b9b7a33f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a809fc7b720a5165b42538624f785fb55</anchor>
      <arglist>(Graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>abbd93f93a2c484f6cb4c2f2ddef1ee6d</anchor>
      <arglist>(Edge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a9c437d33b7253911017116e4b7defdea</anchor>
      <arglist>(State)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a1816e3003adaa327c9221f2ffb45f829</anchor>
      <arglist>(WaypointEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a49ba99ccaf2e8567a15d296ce0dce78a</anchor>
      <arglist>(LevelSetEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>ad3ddfd1bb41fb7718ec1f57c53d4beee</anchor>
      <arglist>(StateSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a553ef2c3a861a8628b2e6ea4e6de2527</anchor>
      <arglist>(GraphComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>a9d40c72a9aa2e9c7bea61319e341977b</anchor>
      <arglist>(GuidedStateSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00093.html</anchorfile>
      <anchor>aa0601a4def88d5f7d289a439a06967db</anchor>
      <arglist>(HPP_MANIPULATION_DLLAPI, Bad_function_call)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00101.html</anchorfile>
      <anchor>ga78dea138fa29161df8601cf75cdce66f</anchor>
      <arglist>(std::ostream &amp;os, const GraphComponent &amp;graphComp)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::graph::dot</name>
    <filename>a00094.html</filename>
    <class kind="struct">hpp::manipulation::graph::dot::DrawingAttributes</class>
    <class kind="struct">hpp::manipulation::graph::dot::Tooltip</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>insertComments</name>
      <anchorfile>a00094.html</anchorfile>
      <anchor>a88158dbb5ae7e9b30d2c87747f9a023d</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00094.html</anchorfile>
      <anchor>a6c930bffec5bfa6b1490e243c6de5744</anchor>
      <arglist>(std::ostream &amp;os, const DrawingAttributes &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::graph::helper</name>
    <filename>a00095.html</filename>
    <class kind="struct">hpp::manipulation::graph::helper::FoliatedManifold</class>
    <class kind="struct">hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</class>
    <class kind="struct">hpp::manipulation::graph::helper::ObjectDef_t</class>
    <class kind="struct">hpp::manipulation::graph::helper::Rule</class>
    <member kind="typedef">
      <type>std::vector&lt; Rule &gt;</type>
      <name>Rules_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gae3d440380470ebfeb6dea2e7ba596dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; ImplicitPtr_t, ImplicitPtr_t, LockedJoints_t &gt;</type>
      <name>PlacementConstraint_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga6d1fc2e5c47147016ec891af2331b488</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; HandlePtr_t &gt;</type>
      <name>Handles_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga55c2291d9ab4f12153077dae8139f584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gacb22f07ba9e56b4ac19caca53f4210b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; PlacementConstraint_t, Handles_t, std::size_t &gt;</type>
      <name>Object_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaca9c547a1170b04b1d8b337a7a221b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Object_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga762238bdac56082281461e3bd90b797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraspingCase</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gac90bb5d288151a336e55106c7a10023f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGrasp</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa9c34b5fd3c9e3502bedab4d57817504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GraspOnly</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa51b2d0534ecf569c08cc969997990590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPreGrasp</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fac13fb09f8eee1b95978decceaa88dc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacementCase</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gabf7d2d056c919423d6ddc30c2216a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPlace</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a018c646c44b4380f51af97e5673932ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlaceOnly</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a3486c8460f482c55a2f68bc1ac7fc8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPrePlace</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1ab4dcacb6faa315def204d72abed90ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>createEdges</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga5605709698aa19de334ce2fc73ac0077</anchor>
      <arglist>(const std::string &amp;forwName, const std::string &amp;backName, const StatePtr_t &amp;from, const StatePtr_t &amp;to, const size_type &amp;wForw, const size_type &amp;wBack, const FoliatedManifold &amp;grasp, const FoliatedManifold &amp;pregrasp, const FoliatedManifold &amp;place, const FoliatedManifold &amp;preplace, const bool levelSetGrasp, const bool levelSetPlace, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>createLoopEdge</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga06e563f3e459f49107c046576452c58a</anchor>
      <arglist>(const std::string &amp;loopName, const StatePtr_t &amp;state, const size_type &amp;w, const bool levelSet, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graspManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaffa0005f5fe2ec45f29806dd0ff6e58f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle, FoliatedManifold &amp;grasp, FoliatedManifold &amp;pregrasp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strictPlacementManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gab4c1b3b73f1cbc7de0e96a9f360ccf64</anchor>
      <arglist>(const ImplicitPtr_t placement, const ImplicitPtr_t preplacement, const ImplicitPtr_t placementComplement, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relaxedPlacementManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaccdfacd3e9e9d6358063baf971015f31</anchor>
      <arglist>(const ImplicitPtr_t placement, const ImplicitPtr_t preplacement, const LockedJoints_t objectLocks, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphBuilder</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga6b61df8cd6a7f97155d562165eebb340</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const Objects_t &amp;objects, const Grippers_t &amp;grippers, GraphPtr_t graph, const Rules_t &amp;rules=Rules_t())</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>graphBuilder</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gafba4fe2d23444b07261811c33f53282d</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const std::string &amp;graphName, const StringList_t &amp;griNames, const std::list&lt; ObjectDef_t &gt; &amp;objs, const StringList_t &amp;envNames, const Rules_t &amp;rules, const value_type &amp;prePlaceWidth=0.05)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::pathOptimization</name>
    <filename>a00096.html</filename>
    <class kind="class">hpp::manipulation::pathOptimization::EnforceTransitionSemantic</class>
    <class kind="class">hpp::manipulation::pathOptimization::RandomShortcut</class>
    <class kind="class">hpp::manipulation::pathOptimization::SmallSteps</class>
    <class kind="class">hpp::manipulation::pathOptimization::SplineGradientBased</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SmallSteps &gt;</type>
      <name>SmallStepsPtr_t</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a60604613f6178214b820fa687c0b36d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Keypoints &gt;</type>
      <name>KeypointsPtr_t</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a1bae1e111c6fcee6e2e4ffdc8d6ae17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; RandomShortcut &gt;</type>
      <name>RandomShortcutPtr_t</name>
      <anchorfile>a00104.html</anchorfile>
      <anchor>ga240c6b86af69fab31e4526f6d4a7a590</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a9bcb36b9db6a66f0a4ef9b7d63bd42ac</anchor>
      <arglist>(SmallSteps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a75cfedd5569a9592680b72934dec3d07</anchor>
      <arglist>(Keypoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00104.html</anchorfile>
      <anchor>gabaa9ce3f801a84aaa9429272db7a6dcf</anchor>
      <arglist>(RandomShortcut)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::problemTarget</name>
    <filename>a00097.html</filename>
    <class kind="class">hpp::manipulation::problemTarget::State</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; State &gt;</type>
      <name>StatePtr_t</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a527151e04a61505e2f31b18501fab5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a179736902093be361591064a1100b3e7</anchor>
      <arglist>(State)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::steeringMethod</name>
    <filename>a00098.html</filename>
    <class kind="class">hpp::manipulation::steeringMethod::CrossStateOptimization</class>
    <class kind="class">hpp::manipulation::steeringMethod::EdgeFunction</class>
    <class kind="class">hpp::manipulation::steeringMethod::EndEffectorTrajectory</class>
    <class kind="class">hpp::manipulation::steeringMethod::Graph</class>
    <class kind="class">hpp::manipulation::steeringMethod::StateFunction</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; EndEffectorTrajectory &gt;</type>
      <name>EndEffectorTrajectoryPtr_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>afc484d8828ebb2de65d11b7329fefd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Graph &gt;</type>
      <name>GraphPtr_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>aae1a09476a6a72adc3739b64b4c647cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CrossStateOptimization &gt;</type>
      <name>CrossStateOptimizationPtr_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a0cfac0b05fb3191496d7455175ea00f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::segment_t</type>
      <name>segment_t</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>a7cc8ea51c79c52ca3fe7c1fe21d7f9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>ac8f09eed268c58ffe32c7003ac8331e3</anchor>
      <arglist>(EndEffectorTrajectory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>ace0e8c39107eccba72ce9237bb917a79</anchor>
      <arglist>(Graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00098.html</anchorfile>
      <anchor>aa8400224ba7790d4d4135734c8e1fbe8</anchor>
      <arglist>(CrossStateOptimization)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>constraint_graph</name>
    <title>Constraint Graph</title>
    <filename>a00101.html</filename>
    <class kind="class">hpp::manipulation::graph::Edge</class>
    <class kind="class">hpp::manipulation::graph::WaypointEdge</class>
    <class kind="class">hpp::manipulation::graph::LevelSetEdge</class>
    <class kind="class">hpp::manipulation::graph::GraphComponent</class>
    <class kind="class">hpp::manipulation::graph::Graph</class>
    <class kind="class">hpp::manipulation::graph::State</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00101.html</anchorfile>
      <anchor>ga78dea138fa29161df8601cf75cdce66f</anchor>
      <arglist>(std::ostream &amp;os, const GraphComponent &amp;graphComp)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>constraints</name>
    <title>Constraints</title>
    <filename>a00102.html</filename>
    <class kind="class">hpp::manipulation::ConstraintSet</class>
    <class kind="struct">hpp::manipulation::ConstraintAndComplement_t</class>
    <member kind="typedef">
      <type>std::vector&lt; ConstraintAndComplement_t &gt;</type>
      <name>ConstraintsAndComplements_t</name>
      <anchorfile>a00102.html</anchorfile>
      <anchor>ga1f2f76e306fa8dce51b0f651f5a320bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00151.html</anchorfile>
      <anchor>ga962ff736acd3e22ec80fd5c21a729c26</anchor>
      <arglist>(std::ostream &amp;os, const DifferentiableFunction &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00236.html</anchorfile>
      <anchor>gac19b1e5c7ce1ad90ee52aa3491bd2e9f</anchor>
      <arglist>(std::ostream &amp;os, const Constraint &amp;constraint)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>helper</name>
    <title>Helpers to build the graph of constraints</title>
    <filename>a00103.html</filename>
    <class kind="struct">hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</class>
    <class kind="struct">hpp::manipulation::graph::helper::FoliatedManifold</class>
    <class kind="struct">hpp::manipulation::graph::helper::Rule</class>
    <class kind="struct">hpp::manipulation::graph::helper::ObjectDef_t</class>
    <member kind="typedef">
      <type>std::vector&lt; Rule &gt;</type>
      <name>Rules_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gae3d440380470ebfeb6dea2e7ba596dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; ImplicitPtr_t, ImplicitPtr_t, LockedJoints_t &gt;</type>
      <name>PlacementConstraint_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga6d1fc2e5c47147016ec891af2331b488</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; HandlePtr_t &gt;</type>
      <name>Handles_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga55c2291d9ab4f12153077dae8139f584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gacb22f07ba9e56b4ac19caca53f4210b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; PlacementConstraint_t, Handles_t, std::size_t &gt;</type>
      <name>Object_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaca9c547a1170b04b1d8b337a7a221b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Object_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga762238bdac56082281461e3bd90b797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraspingCase</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gac90bb5d288151a336e55106c7a10023f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGrasp</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa9c34b5fd3c9e3502bedab4d57817504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GraspOnly</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa51b2d0534ecf569c08cc969997990590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPreGrasp</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fac13fb09f8eee1b95978decceaa88dc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacementCase</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gabf7d2d056c919423d6ddc30c2216a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPlace</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a018c646c44b4380f51af97e5673932ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlaceOnly</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a3486c8460f482c55a2f68bc1ac7fc8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPrePlace</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1ab4dcacb6faa315def204d72abed90ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>createEdges</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga5605709698aa19de334ce2fc73ac0077</anchor>
      <arglist>(const std::string &amp;forwName, const std::string &amp;backName, const StatePtr_t &amp;from, const StatePtr_t &amp;to, const size_type &amp;wForw, const size_type &amp;wBack, const FoliatedManifold &amp;grasp, const FoliatedManifold &amp;pregrasp, const FoliatedManifold &amp;place, const FoliatedManifold &amp;preplace, const bool levelSetGrasp, const bool levelSetPlace, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>createLoopEdge</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga06e563f3e459f49107c046576452c58a</anchor>
      <arglist>(const std::string &amp;loopName, const StatePtr_t &amp;state, const size_type &amp;w, const bool levelSet, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graspManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaffa0005f5fe2ec45f29806dd0ff6e58f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle, FoliatedManifold &amp;grasp, FoliatedManifold &amp;pregrasp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strictPlacementManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gab4c1b3b73f1cbc7de0e96a9f360ccf64</anchor>
      <arglist>(const ImplicitPtr_t placement, const ImplicitPtr_t preplacement, const ImplicitPtr_t placementComplement, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relaxedPlacementManifold</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gaccdfacd3e9e9d6358063baf971015f31</anchor>
      <arglist>(const ImplicitPtr_t placement, const ImplicitPtr_t preplacement, const LockedJoints_t objectLocks, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphBuilder</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ga6b61df8cd6a7f97155d562165eebb340</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const Objects_t &amp;objects, const Grippers_t &amp;grippers, GraphPtr_t graph, const Rules_t &amp;rules=Rules_t())</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>graphBuilder</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>gafba4fe2d23444b07261811c33f53282d</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const std::string &amp;graphName, const StringList_t &amp;griNames, const std::list&lt; ObjectDef_t &gt; &amp;objs, const StringList_t &amp;envNames, const Rules_t &amp;rules, const value_type &amp;prePlaceWidth=0.05)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Path_optimization</name>
    <title>Path Optimization</title>
    <filename>a00104.html</filename>
    <namespace>hpp::manipulation::pathOptimization</namespace>
    <class kind="class">hpp::manipulation::GraphNodeOptimizer</class>
    <class kind="class">hpp::manipulation::GraphOptimizer</class>
    <class kind="class">hpp::manipulation::pathOptimization::EnforceTransitionSemantic</class>
    <class kind="class">hpp::manipulation::pathOptimization::RandomShortcut</class>
    <class kind="class">hpp::manipulation::pathOptimization::SmallSteps</class>
    <member kind="typedef">
      <type>std::vector&lt; CollisionConstraintsResult &gt;</type>
      <name>CollisionConstraintsResults_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga8ec3de1032309ec7c79adf9edfc48c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::JacobiSVD&lt; matrix_t &gt;</type>
      <name>Decomposition_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gac06dce338d44e4a5c249e9b0c9698768</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::LLT&lt; matrix_t, Eigen::Lower &gt;</type>
      <name>LLT_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga34d7dae38d1726583e32d29da1f9fda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>path::Spline&lt; PolynomeBasis, SplineOrder &gt;</type>
      <name>Spline</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga7d1e911c161fc650701ebb12380234fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Spline::Ptr_t</type>
      <name>SplinePtr_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gae6483158f52d16317efc9af6fcf83432</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; SplinePtr_t &gt;</type>
      <name>Splines_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga7b791d1140f1697080f818fd58126aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SplineGradientBasedAbstract&lt; _PolynomeBasis, _SplineOrder &gt;</type>
      <name>Base</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaf07b1f6a1efe400edce57a0132ef980d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SplineGradientBased &gt;</type>
      <name>Ptr_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gae44de55487524b7ab6f8dd9cc52975c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>steeringMethod::Spline&lt; PolynomeBasis, SplineOrder &gt;</type>
      <name>SSM_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaca3fd6ec0371757a6025f6da00d338c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; std::pair&lt; PathValidationReportPtr_t, std::size_t &gt; &gt;</type>
      <name>Reports_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga58f41044b3dacd041ce25a70f69d1ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Eigen::RowBlockIndices</type>
      <name>RowBlockIndices</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gab6fd581843397ec4c2ada24cc27d1eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>Bools_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga15f721896fc3c1e4114484c50ca6bbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; size_type &gt;</type>
      <name>Indices_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gad989bed1d9367c7be3e11628b9999b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; SplineOptimizationData &gt;</type>
      <name>SplineOptimizationDatas_t</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gab2f08e85a140533ca1b1299b2236e595</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; RandomShortcut &gt;</type>
      <name>RandomShortcutPtr_t</name>
      <anchorfile>a00104.html</anchorfile>
      <anchor>ga240c6b86af69fab31e4526f6d4a7a590</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GradientBasedPtr_t</type>
      <name>create</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga3395c68307cad504abcf8cac8ea725fa</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga333c9ed253e1901223f3ab95ce2bc970</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GradientBased</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga53fdf87420e173ddc6ddee85a4f2eaf9</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuadraticProgram</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaa3c8a9ed38e00ccc5270cf99963955aa</anchor>
      <arglist>(size_type inputSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuadraticProgram</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga94012fe4980e935094e3bbd3ea4ac2b5</anchor>
      <arglist>(const QuadraticProgram &amp;QP, const LinearConstraint &amp;lc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuadraticProgram</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga87fa98ba7c876fede139c4c9a4061762</anchor>
      <arglist>(const QuadraticProgram &amp;QP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QuadraticProgram</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaa16d9c48ee70e6b5d8c1d502ea4770e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRows</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gae38d270ddc4c8f7f48af6e56bf6328a4</anchor>
      <arglist>(const std::size_t &amp;nbRows)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SplineGradientBasedAbstract</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga1334932f5adc317c6830cc5d819ce12c</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SplineOptimizationData</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gabce3427d6b8ebb46692eb1ba2dd4c458</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SplineOptimizationData</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gab1359f5ceb480f031b4d422beed001b9</anchor>
      <arglist>(size_type rDof)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PathVectorPtr_t</type>
      <name>buildPathVector</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga81a8fdfbf9a44736327180c95eba8d38</anchor>
      <arglist>(const Splines_t &amp;splines) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SplineGradientBased</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gab198df2dd7e22ce0c96fcb8ca7387ce9</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathOptimizer</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaba321189c08102d5cbf7181c23c7488c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Problem &amp;</type>
      <name>problem</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga9d07d63edbc71df565164e70cb807057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interrupt</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga945c65ca497efd7c4098cd99dd26c413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PathOptimizer</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga1dbe27ed7b7e7706778be064443061e1</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PathPtr_t</type>
      <name>steer</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga1fe4d818491c40aa735dbdafab2353e9</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduced</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga7ffd4dbcd5bb448ee47f8d079566b68b</anchor>
      <arglist>(const LinearConstraint &amp;lc, QuadraticProgram &amp;QPr) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decompose</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga67ee163c3c35c4fa2fb95724769906b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga0bc3d9a2f736dc4c3332a08e4821e01b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeLLT</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga6e45821d1161199a8d8cd583723b9d06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>solve</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga5158814cc80cec955e25215296c8a588</anchor>
      <arglist>(const LinearConstraint &amp;ce, const LinearConstraint &amp;ci)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gac860589bf2bc9b49d572ecc8802eac78</anchor>
      <arglist>(const Splines_t &amp;in, Splines_t &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSplines</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga5e4595e61ea8312879f6229c50fe3a86</anchor>
      <arglist>(Splines_t &amp;spline, const vector_t &amp;param) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameters</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga37a1c231cc744c46a0deceaef9881c32</anchor>
      <arglist>(vector_t &amp;param, const Splines_t &amp;spline) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>interpolate</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga4915ada97b7f5db2926044422d266d15</anchor>
      <arglist>(const Splines_t &amp;a, const Splines_t &amp;b, const value_type &amp;alpha, Splines_t &amp;res)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static PathVectorPtr_t</type>
      <name>cleanInput</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga149c53678137270d8bcf568e507fc118</anchor>
      <arglist>(const PathVectorPtr_t &amp;input)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>appendEquivalentSpline</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga094020303d44df3d81267bd2a8e21804</anchor>
      <arglist>(const StraightPathPtr_t &amp;path, Splines_t &amp;splines) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>appendEquivalentSpline</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga3f800b59d36f40b666167da72e36d628</anchor>
      <arglist>(const InterpolatedPathPtr_t &amp;path, Splines_t &amp;splines) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>appendEquivalentSpline</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga8da8342769531d20cba8464b4acbfeda</anchor>
      <arglist>(const PathVectorPtr_t &amp;path, Splines_t &amp;splines) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializePathValidation</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gad4cfd42d5f0fb64975e3e729c8d920e0</anchor>
      <arglist>(const Splines_t &amp;splines)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Reports_t</type>
      <name>validatePath</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga8d2c8833bbd2ead3dd776b379e14a240</anchor>
      <arglist>(const Splines_t &amp;splines, std::vector&lt; std::size_t &gt; &amp;reordering, bool stopAtFirst, bool reorder) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>jointBoundConstraint</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga4db2d57603f1e30939813757ecfe793e</anchor>
      <arglist>(const Splines_t &amp;splines, LinearConstraint &amp;lc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>addBoundConstraints</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga4187212fc7501a4a7b071ae718f52e6e</anchor>
      <arglist>(const Indices_t &amp;bci, const LinearConstraint &amp;bc, Bools_t &amp;activeConstraint, LinearConstraint &amp;constraint) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Indices_t</type>
      <name>validateBounds</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaa58dcf247ea28123582cca4a857734ef</anchor>
      <arglist>(const Splines_t &amp;splines, const LinearConstraint &amp;lc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addContinuityConstraints</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga5385d29459c330d48821324e32c92fa5</anchor>
      <arglist>(const Splines_t &amp;splines, const size_type maxOrder, const SplineOptimizationDatas_t &amp;ess, LinearConstraint &amp;continuity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addProblemConstraints</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga041a7de312634005b269e68a9c7593ae</anchor>
      <arglist>(const PathVectorPtr_t &amp;init, const Splines_t &amp;splines, LinearConstraint &amp;lc, SplineOptimizationDatas_t &amp;sods) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addProblemConstraintOnPath</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gabad5a01bb7b7b997ba5f01ec1918fc79</anchor>
      <arglist>(const PathPtr_t &amp;path, const size_type &amp;idxSpline, const SplinePtr_t &amp;spline, LinearConstraint &amp;lc, SplineOptimizationData &amp;sod) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::RowBlockIndices</type>
      <name>computeActiveParameters</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga3c11dd21e01d2b38732d30fb830577f1</anchor>
      <arglist>(const PathPtr_t &amp;path, const constraints::solver::BySubstitution &amp;hs, const value_type &amp;guessThr=-1, const bool &amp;useExplicitInput=false) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00104.html</anchorfile>
      <anchor>gabaa9ce3f801a84aaa9429272db7a6dcf</anchor>
      <arglist>(RandomShortcut)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PolynomeBasis</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ggabf68a730e5445693cb1dbbe27e5334a3acf673f4401cd742b99e6ea82e8618665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SplineOrder</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ggabf68a730e5445693cb1dbbe27e5334a3a534f487e1fdd513b83e49ec3bce85d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PolynomeBasis</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gga951d78fc1fde1ccc264e36b7108f8a4ba5168e76eaee71986304d9d0845058fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SplineOrder</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gga951d78fc1fde1ccc264e36b7108f8a4baaa0359ed771fd30baa08b8335a2765c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PolynomeBasis</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ggabf68a730e5445693cb1dbbe27e5334a3acf673f4401cd742b99e6ea82e8618665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SplineOrder</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ggabf68a730e5445693cb1dbbe27e5334a3a534f487e1fdd513b83e49ec3bce85d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PolynomeBasis</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gga951d78fc1fde1ccc264e36b7108f8a4ba5168e76eaee71986304d9d0845058fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SplineOrder</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gga951d78fc1fde1ccc264e36b7108f8a4baaa0359ed771fd30baa08b8335a2765c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConstraintSetPtr_t</type>
      <name>set</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga66c84d20a3e6bcdf30f1f84d049a7a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boost::shared_ptr&lt; constraints::ExplicitConstraintSet &gt;</type>
      <name>es</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gad86ff7f9858a5e441a2f13c635e1c54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RowBlockIndices</type>
      <name>activeParameters</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaf1eb41569ba45624728f446b3cfca5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DevicePtr_t</type>
      <name>robot_</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gae9fe98ae8d16357b0e44a0e99776a690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>checkOptimum_</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaa411fd04af461526f9631802d02fe503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>interrupt_</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga8ada4f7cabc118faaac5d3f48ac4c56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>matrix_t</type>
      <name>H</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gae84e3e0239e366627df706ca4469ab99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_t</type>
      <name>b</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gacfedf11f20288509ae16a160b4bc1dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bIsZero</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga5f38e782312552c5bb255cdea14bba8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LLT_t</type>
      <name>llt</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaebee63495249a47719b152659d6ba1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>value_type</type>
      <name>trace</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga60c06d0c87d64a52e0f1788effd12de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXi</type>
      <name>activeConstraint</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga75e792b0fd16f63b3471f8b131d5944b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>activeSetSize</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gae90925e3da34cfbc50911525507d3780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Decomposition_t</type>
      <name>dec</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>gaa00e92533b986fa49f17cf2c23ba8a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector_t</type>
      <name>xStar</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga0c5592712fbc6720ae6e2caafde290bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SSM_t::Ptr_t</type>
      <name>steeringMethod_</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga967a141b92dce2d5981f976fab569c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PathValidationPtr_t &gt;</type>
      <name>validations_</name>
      <anchorfile>a00232.html</anchorfile>
      <anchor>ga89e1dab1036585aa80be1c5d3d4d4d66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>validation</name>
    <title>Validation of configurations and paths</title>
    <filename>a00105.html</filename>
    <class kind="class">hpp::manipulation::GraphPathValidation</class>
    <member kind="function" static="yes">
      <type>static DichotomyPtr_t</type>
      <name>create</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>ga1e1cbbaf63b2578d9b478256b84b5fda</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Dichotomy</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>gae37786e33010961a02753d8a4429abcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Dichotomy</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>gad606aaf62cbf056e9fb44d698dd09a88</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>gaff093eacd98246cf36b55fce0973bc8d</anchor>
      <arglist>(const DichotomyWkPtr_t weak)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Progressive</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>gac32201994f1f059750b9b2f033f064b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Progressive</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>gafffe07f4a15909e051da70a989d2fbb4</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>gab70034bcc41d42ba9b721f254ae48228</anchor>
      <arglist>(const ProgressiveWkPtr_t weak)</arglist>
    </member>
    <member kind="function">
      <type>DiscretizedPtr_t</type>
      <name>createDiscretizedCollisionChecking</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>ga2fcabfd40f8c7b422c1247223bdb9490</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;stepSize)</arglist>
    </member>
    <member kind="function">
      <type>DiscretizedPtr_t</type>
      <name>createDiscretizedJointBound</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>ga94717ccf260a93ce48dd4affe06189df</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;stepSize)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00234.html</anchorfile>
      <anchor>ga656195c66d722769e89c7a8af48181a2</anchor>
      <arglist>(std::ostream &amp;os, const ValidationReport &amp;report)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPathValidationPtr_t</type>
      <name>create</name>
      <anchorfile>a00105.html</anchorfile>
      <anchor>gadf460ee8623133b7b8d45a3a33bafa3a</anchor>
      <arglist>(const pinocchio::DevicePtr_t &amp;robot, const value_type &amp;stepSize)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>path_planning</name>
    <title>Path planning algorithms</title>
    <filename>a00106.html</filename>
    <class kind="class">hpp::manipulation::ManipulationPlanner</class>
    <class kind="class">hpp::manipulation::problemTarget::State</class>
    <class kind="class">hpp::manipulation::Problem</class>
  </compound>
  <compound kind="group">
    <name>roadmap</name>
    <title>Roadmap</title>
    <filename>a00107.html</filename>
    <class kind="class">hpp::manipulation::Roadmap</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00235.html</anchorfile>
      <anchor>ga1947b6d9b37f1a315e596b194adc6159</anchor>
      <arglist>(std::ostream &amp;os, const Node &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00235.html</anchorfile>
      <anchor>ga8ae1800d63fa0035ab3281311e873193</anchor>
      <arglist>(std::ostream &amp;os, const Roadmap &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Steering_method</name>
    <title>Steering method and distance functions</title>
    <filename>a00108.html</filename>
    <namespace>hpp::manipulation::steeringMethod</namespace>
    <class kind="class">hpp::manipulation::steeringMethod::CrossStateOptimization</class>
    <class kind="class">hpp::manipulation::SteeringMethod</class>
    <class kind="class">hpp::manipulation::WeighedDistance</class>
    <member kind="function" static="yes">
      <type>static StraightPtr_t</type>
      <name>create</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>ga4e19325ce22cffc20ff600c4d65b4a24</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StraightPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>gaa14e75273d94f72c4d7f5a177644e709</anchor>
      <arglist>(const StraightPtr_t &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SteeringMethodPtr_t</type>
      <name>copy</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>gacf8a20bddd555cbd195199b3bf73b61f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>impl_compute</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>ga3d78f75cb1027e8b8ea024c884af442f</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Straight</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>gaf7fdc313898160a5fcf7bfd29f521430</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Straight</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>gab7176799b67f8820bb88ddfdfbded81b</anchor>
      <arglist>(const Straight &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00233.html</anchorfile>
      <anchor>ga5e0db5b11c6e6ec6314cbc4ceb354510</anchor>
      <arglist>(StraightWkPtr_t weak)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>hpp-manipulation documentation</title>
    <filename>index</filename>
    <docanchor file="index">hpp_manipulation_documentation</docanchor>
    <docanchor file="index">hpp_core_documentation</docanchor>
    <docanchor file="index" title="Introduction">hpp_pinocchio_intro</docanchor>
    <docanchor file="index" title="What is Pinocchio?">OverviewIntro</docanchor>
    <docanchor file="index" title="How to install Pinocchio?">OverviewInstall</docanchor>
    <docanchor file="index" title="Simplest example with compilation command">OverviewSimple</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewSimpleCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewSimpleExplain</docanchor>
    <docanchor file="index" title="More complex example with C++ and Python">OverviewComplex</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewComplexCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewComplexExplain</docanchor>
    <docanchor file="index" title="About Python wrappings">OverviewPython</docanchor>
    <docanchor file="index" title="How to cite Pinocchio">OverviewCite</docanchor>
    <docanchor file="index" title="Where to go from here?">OverviewConclu</docanchor>
    <docanchor file="index">hpp_constraints_documentation</docanchor>
    <docanchor file="index">hpp_wholebody_step_documentation</docanchor>
  </compound>
</tagfile>
