<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>bspline-based.cc</name>
    <path>/local/devel/hpp/src/hpp-walkgen/src/</path>
    <filename>a00009</filename>
    <includes id="a00010" name="bspline-based.hh" local="no" imported="no">hpp/walkgen/bspline-based.hh</includes>
    <includes id="a00013" name="foot-trajectory.hh" local="no" imported="no">hpp/walkgen/foot-trajectory.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::walkgen</namespace>
    <member kind="typedef">
      <type>std::vector&lt; value_type &gt;</type>
      <name>knots_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aff49a724c0cdeaef5745f48f73858192</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>bspline-based.hh</name>
    <path>/local/devel/hpp/src/hpp-walkgen/include/hpp/walkgen/</path>
    <filename>a00010</filename>
    <includes id="a00011" name="foot-print.hh" local="no" imported="no">hpp/walkgen/foot-print.hh</includes>
    <class kind="class">hpp::walkgen::PiecewisePoly3</class>
    <class kind="class">hpp::walkgen::SplineBased</class>
    <class kind="struct">hpp::walkgen::SplineBased::BoundaryCondition</class>
    <namespace>hpp</namespace>
    <namespace>hpp::walkgen</namespace>
    <member kind="typedef">
      <type>roboptim::trajectory::Polynomial3</type>
      <name>Polynomial3</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a724e67744e9af46e7d3e6c0b89371db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>roboptim::trajectory::CubicBSpline::polynomials3vectors_t</type>
      <name>polynomials3vectors_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a319290a19c29e4c9999310f079b1f23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>roboptim::trajectory::CubicBSpline::polynomials3vector_t</type>
      <name>polynomials3vector_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a20597679aa8fab44725ddb6afcf7fe02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 7, 1 &gt;</type>
      <name>vector7_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6b904c9e7f48f36c3f22f0681d010af2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>foot-print.hh</name>
    <path>/local/devel/hpp/src/hpp-walkgen/include/hpp/walkgen/</path>
    <filename>a00011</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/walkgen/fwd.hh</includes>
    <class kind="struct">hpp::walkgen::FootPrint</class>
    <namespace>hpp</namespace>
    <namespace>hpp::walkgen</namespace>
    <member kind="typedef">
      <type>std::vector&lt; FootPrint, Eigen::aligned_allocator&lt; FootPrint &gt; &gt;</type>
      <name>FootPrints_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a7f315462c81d3850e3273b5ec98d4be9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>foot-trajectory.cc</name>
    <path>/local/devel/hpp/src/hpp-walkgen/src/</path>
    <filename>a00012</filename>
    <includes id="a00013" name="foot-trajectory.hh" local="no" imported="no">hpp/walkgen/foot-trajectory.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::walkgen</namespace>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>createFootDevice</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a07ba256012badaaac89f24ac82e5abce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static pinocchio::SE3</type>
      <name>Id</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4ee95e81a61e79d75a6adca85404a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_type</type>
      <name>footConfigSize</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a7e74db8eeeaeaeb8b76c6715701941d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_type</type>
      <name>footNumberDof</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aeee0cb25a9838ed5b9f68645bfb7ac59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static hpp::pinocchio::liegroup::SpecialOrthogonalOperation&lt; 2 &gt;</type>
      <name>SO2</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aed78d069a0667260bc82a6b1abf3ce0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>foot-trajectory.hh</name>
    <path>/local/devel/hpp/src/hpp-walkgen/include/hpp/walkgen/</path>
    <filename>a00013</filename>
    <includes id="a00011" name="foot-print.hh" local="no" imported="no">hpp/walkgen/foot-print.hh</includes>
    <class kind="class">hpp::walkgen::Step</class>
    <class kind="class">hpp::walkgen::SupportFoot</class>
    <namespace>hpp</namespace>
    <namespace>hpp::walkgen</namespace>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>createFootDevice</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a07ba256012badaaac89f24ac82e5abce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fwd.hh</name>
    <path>/local/devel/hpp/src/hpp-walkgen/include/hpp/walkgen/</path>
    <filename>a00001</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::walkgen</namespace>
    <member kind="typedef">
      <type>roboptim::trajectory::CubicBSpline</type>
      <name>CubicBSpline</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a802ba65e0be5a202443823ceba0d9b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CubicBSpline &gt;</type>
      <name>CubicBSplinePtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a5deec5db477c3921e396b8586bcc1944</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SplineBased &gt;</type>
      <name>SplineBasedPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a21716aaf6f7041390f777842a06fc56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Step &gt;</type>
      <name>StepPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a02444c29c262cb95f4ce75d13ca17958</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SupportFoot &gt;</type>
      <name>SupportFootPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a1158584b796268b6497b3a34ee5ecf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a540c9295bf0309d0d41a28ecdd636b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, 1 &gt;</type>
      <name>vector_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa073e9a23c15709b5422f6bb01502a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>matrix_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a11a070fb9a53d21c326c097c22c2bcaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>matrix_t::Index</type>
      <name>size_type</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa370f1f02ca9bf6ddeb8d9a998e7bcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; value_type &gt;</type>
      <name>Times_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a5476f6debe74f7b9ba65ba15b3ee6829</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 2, 1 &gt;</type>
      <name>vector2_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a466a29bfe6917e5f7c7274ccc562127a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 1, 1 &gt;</type>
      <name>vector1_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a37cebabab4a444ab6bf13690e9aa3242</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>afefcc3e6032a3dae61765910a77d2ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Path</type>
      <name>Path</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6c44d66b0b216efdf81a6be19b788189</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathPtr_t</type>
      <name>PathPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6a22b22dae5472b6f19e433822ca4618</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVectorPtr_t</type>
      <name>PathVectorPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>acb669ad305c85ad5492acc00c9686432</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVector</type>
      <name>PathVector</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a0c181d52e7c218cb8ac4d04b49a66fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationOut_t</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4be5017bff4f1a7fb28adf0bc098aac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6672bcd4e256a044fb744b696ba54c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConstraintSetPtr_t</type>
      <name>ConstraintSetPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>abe5cc4cf9ded07203eeaf8ce87f2cef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DevicePtr_t</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a944006dbf22f1cfcaaa8a0af33f349f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6fc472e3225546c63001fa243b68d26d</anchor>
      <arglist>(SplineBased)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a04a17c6f565422b724c8bce8e3cc29d7</anchor>
      <arglist>(Step)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aec7231e78a853d23c577bcb0aa911f99</anchor>
      <arglist>(SupportFoot)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::walkgen::SplineBased::BoundaryCondition</name>
    <filename>a00003.html</filename>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>BoundaryCondition</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>ac10123e2770ea468f41c7d2c5a70fb2f</anchor>
      <arglist>(const value_type &amp;time, const vector2_t &amp;pos, const vector2_t &amp;vel)</arglist>
    </member>
    <member kind="variable">
      <type>value_type</type>
      <name>t</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>a51c1a554bfe4fd8aba9c5412eb6dfc4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector2_t</type>
      <name>position</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>a0face60fa28f91cd51a4b9726da1075a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector2_t</type>
      <name>velocity</name>
      <anchorfile>a00003.html</anchorfile>
      <anchor>ad27f1ec374c0b2fbf3ca2b48a4b8c2e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::walkgen::FootPrint</name>
    <filename>a00004.html</filename>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>FootPrint</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>aec812b13288feef3b16500166f4bee85</anchor>
      <arglist>(const value_type &amp;abs, const value_type &amp;ord, const value_type &amp;cosYaw, const value_type &amp;sinYaw)</arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>aa69b0458a64fa124aac35a53a064956c</anchor>
      <arglist>(size_type index) const </arglist>
    </member>
    <member kind="variable">
      <type>vector2_t</type>
      <name>position</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>ab0c19aaf0e1b088d1f730fd4b2988509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>vector2_t</type>
      <name>orientation</name>
      <anchorfile>a00004.html</anchorfile>
      <anchor>a5d7d252bb400b57cb161d98490481493</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::walkgen::PiecewisePoly3</name>
    <filename>a00005.html</filename>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>PiecewisePoly3</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a06cdaa42873480eef2df2d9cbf347f71</anchor>
      <arglist>(const value_type &amp;tmin, const value_type &amp;tmax, const Polynomial3 &amp;polynomial)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PiecewisePoly3</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a88809b7207a26457865e46800760d0fd</anchor>
      <arglist>(const value_type &amp;tmin, const value_type &amp;tmax, const value_type &amp;v0, const value_type &amp;v1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PiecewisePoly3</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>affeea3c4fddcb627e27e2a06cef30bee</anchor>
      <arglist>(const value_type &amp;tmin, const value_type &amp;tmax, const vector7_t &amp;values)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PiecewisePoly3</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a7161ccb24e256e31a11eb53d690d9c88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a0fd3a4289f088683d4c06e4f949983de</anchor>
      <arglist>(const size_type &amp;index) const </arglist>
    </member>
    <member kind="variable">
      <type>value_type</type>
      <name>lower</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>a89d6137ce1b77788001c068b97d5fcea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>value_type</type>
      <name>upper</name>
      <anchorfile>a00005.html</anchorfile>
      <anchor>ac3e137a523fdbe95e852662d4bcb8664</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::walkgen::SplineBased</name>
    <filename>a00006.html</filename>
    <class kind="struct">hpp::walkgen::SplineBased::BoundaryCondition</class>
    <member kind="typedef">
      <type>std::vector&lt; PiecewisePoly3 &gt;</type>
      <name>ZmpTrajectory_t</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a2efb9b32be528fa0326b27bbda288ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ZmpTrajectory_t &gt;</type>
      <name>ZmpTrajectories_t</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ab5d0003131258c149d008dfa0510da16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; BoundaryCondition, Eigen::aligned_allocator&lt; BoundaryCondition &gt; &gt;</type>
      <name>BoundaryConditions_t</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a18e15f4dd0bfe4bf2137142717f04d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; value_type &gt;</type>
      <name>StepHeights_t</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ae79e9b6a82d8ae6251c05087da54c393</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeSequence</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>acbf9ace6ba450d69fa0ecc9262ef8286</anchor>
      <arglist>(const Times_t &amp;times)</arglist>
    </member>
    <member kind="function">
      <type>const Times_t &amp;</type>
      <name>timeSequence</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a7fc9b7d015d4abd64143507a813dd28d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>footPrintSequence</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a3f00ec38394bd78b8b5d292df334e0a9</anchor>
      <arglist>(const FootPrints_t &amp;footPrints)</arglist>
    </member>
    <member kind="function">
      <type>const FootPrints_t &amp;</type>
      <name>footPrintSequence</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>afc67d88b666153453c30727b07083f5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>defaultStepHeight</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>aa3dc9aeb643e31f9fb56f34e528c5217</anchor>
      <arglist>(const value_type &amp;stepHeight)</arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>defaultStepHeight</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a944339feadfef1accdcdd817ca988aab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepHeights</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ab4215068fe05d45ea46528dbf355ca78</anchor>
      <arglist>(const StepHeights_t &amp;stepHeights)</arglist>
    </member>
    <member kind="function">
      <type>const StepHeights_t &amp;</type>
      <name>stepHeights</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a02c79ab512c0cfc05dc2aec9c682b961</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zmpRefBoundaryConditions</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ab5eb7528afedf6549ce6bf5173524373</anchor>
      <arglist>(const vector2_t &amp;init, const vector2_t &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>adc0089478692184935123728da67222f</anchor>
      <arglist>(const BoundaryCondition &amp;boundaryCondition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialComState</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>aa25da4ff0e538440c1fb8f33ca8afd21</anchor>
      <arglist>(const vector2_t &amp;position, const vector2_t &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEndComState</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a2bba665c44299df94099a3e4f5e8f7bd</anchor>
      <arglist>(const vector2_t &amp;position, const vector2_t &amp;velocity)</arglist>
    </member>
    <member kind="function">
      <type>CubicBSplinePtr_t</type>
      <name>solve</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>adb8db6d73093aabe044c8068f8abceff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PathVectorPtr_t &amp;</type>
      <name>leftFootTrajectory</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a2974916a940aac455cb6629267d785e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PathVectorPtr_t &amp;</type>
      <name>rightFootTrajectory</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a37674e4677610fafe6733f26f885ed5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>leftFoot</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>af6d61c526fd582215e4616804b62b66c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>rightFoot</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>abfe3ecc1a327a0711e42e3aac72e7338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ZmpTrajectory_t &amp;</type>
      <name>zmpRefx</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a5da77284a5df037f523832de71e2b885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ZmpTrajectory_t &amp;</type>
      <name>zmpRefy</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a8c3be28d2594b4b8bfc687bc03ad9678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>cost</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a7fbf53310601bd0f6fe405d0b104b424</anchor>
      <arglist>(const vector_t &amp;controlPoints)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>cost</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a46ad6fdebef7e131a04f79727d936eaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ZmpTrajectories_t &amp;</type>
      <name>zmpBasisFunctions</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a069ffdff0645b2e3458211fd9bd1b8da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SplineBasedPtr_t</type>
      <name>create</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>afb96cf6c0b8a3072eb707041c1f85ec3</anchor>
      <arglist>(const value_type &amp;height)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static value_type</type>
      <name>integral</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a36ea121e582f94248e5e8c71c2bc23a7</anchor>
      <arglist>(value_type lower, value_type upper, const PiecewisePoly3 &amp;P1, const PiecewisePoly3 &amp;P2)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static EIGEN_MAKE_ALIGNED_OPERATOR_NEW value_type</type>
      <name>gravity</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a135a10daf85fe44aed8a0a060e09a393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_type</type>
      <name>l</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ad82c439b083f5cb08a57685c17108158</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SplineBased</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a7e4a7d53b6efae4cf1ec57a21b5b256b</anchor>
      <arglist>(const value_type &amp;height)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>a2a5ecced79d9f2afcfe65e10a3dd198c</anchor>
      <arglist>(const SplineBasedWkPtr_t &amp;self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeFootTrajectory</name>
      <anchorfile>a00006.html</anchorfile>
      <anchor>ae1a0a2439b365eecbb449d183a0f0bc9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::walkgen::Step</name>
    <filename>a00007.html</filename>
    <base>hpp::core::Path</base>
    <member kind="function" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>copy</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a27e47b880f7696552ea158b57e2cfacf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>copy</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>aa40b6da8b074e46ddfea852bb1cb8099</anchor>
      <arglist>(const ConstraintSetPtr_t &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Step</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>abcdbe97f94c2565fc7677f34a5d86b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EIGEN_MAKE_ALIGNED_OPERATOR_NEW StepPtr_t</type>
      <name>create</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a51c9b9ba1947aab34f0cee39307a7536</anchor>
      <arglist>(const FootPrint &amp;start, const FootPrint &amp;end, const value_type &amp;stepLow, const value_type &amp;stepHigh, const value_type &amp;duration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Step</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ab1c073e02ea65d5667aca240f33abf6e</anchor>
      <arglist>(const FootPrint &amp;start, const FootPrint &amp;end, const value_type &amp;stepLow, const value_type &amp;stepHigh, const value_type &amp;duration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Step</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a3fac8447e9c3067c45e411ec02da12cc</anchor>
      <arglist>(const Step &amp;step)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Configuration_t</type>
      <name>initial</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1a388a0568b675b9d1ebec5a09ca5eff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Configuration_t</type>
      <name>end</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a2ad221c22e1d47e9d832b28ce3158eae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>impl_compute</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a4c3acf6cfe5affd93580ef7ea1ee53b9</anchor>
      <arglist>(ConfigurationOut_t configuration, value_type t) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af1e789705c817e08e6aa2216e3f179d8</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::walkgen::SupportFoot</name>
    <filename>a00008.html</filename>
    <base>hpp::core::Path</base>
    <member kind="function" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>copy</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a016706071bfd9db00e6a5493062b37ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>copy</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a0e5abf7657f878fc9f482e75bd3edb14</anchor>
      <arglist>(const ConstraintSetPtr_t &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SupportFoot</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>ab25880eb57844524b8125276580cc8aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EIGEN_MAKE_ALIGNED_OPERATOR_NEW SupportFootPtr_t</type>
      <name>create</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a454d97efc5eb48e2f5e5a2a961f9f319</anchor>
      <arglist>(const FootPrint &amp;position, const value_type &amp;footHeight, const value_type &amp;duration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SupportFoot</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>ac450efa628ef6e549c4bf036b496f3c9</anchor>
      <arglist>(const FootPrint &amp;position, const value_type &amp;footHeight, const value_type &amp;duration)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SupportFoot</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>aac5d4057feab75162c2d5ab4d39c0e7e</anchor>
      <arglist>(const SupportFoot &amp;sp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Configuration_t</type>
      <name>initial</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a3a8422a4bfc148af9b9ed85d0cc644cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Configuration_t</type>
      <name>end</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a263254da73be868b2c4b75c83a1c4d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>impl_compute</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a8ceff31cc63bb3e3cef3c93dbf0396b3</anchor>
      <arglist>(ConfigurationOut_t configuration, value_type t) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a7f38ce9853fbd24b7d03c77a60b0a1fd</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp</name>
    <filename>a00014.html</filename>
    <namespace>hpp::walkgen</namespace>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a19f2d09243fdd6828b4d40953f4f413f</anchor>
      <arglist>(HPP_UTIL_DLLAPI, AssertionError)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a0bcb296b7ca1dab3382f49953c92a853</anchor>
      <arglist>(std::ostream &amp;o, const Exception &amp;exception)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI long &amp;</type>
      <name>indent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a16259580a8f0a07bad42458aa65963f3</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a669ea668296b2ed089b72c3a1dce688e</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>afaf02e3dd1c3eaf21e287dc4c825cc89</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>resetindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a011dc7bc6e7c975fdc993c5b7abbac56</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>iendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ab2e087df519f97420058c160b8313be4</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a49bcbcf63c92e671f9aa3c737b8a2852</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a8d7bf72162e22331e54b3c387651ed95</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>setpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaf0a4b5cf356013ff921516719a6b9cf0</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>unsetpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9ebdb5b7e4ea691aa1cc921cacd64b28</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, PrettyOutput &gt;</type>
      <name>pretty_print</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaa29fa2d7b51bc30954dd1e77c1163eca</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, CondensedOutput &gt;</type>
      <name>condensed</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga88b06fbd68a50ab03ddc565e58e9817e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, OneLineOutput &gt;</type>
      <name>one_line</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9a8cb47183de8943e9e57cb92659d5aa</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::walkgen</name>
    <filename>a00015.html</filename>
    <class kind="struct">hpp::walkgen::FootPrint</class>
    <class kind="class">hpp::walkgen::PiecewisePoly3</class>
    <class kind="class">hpp::walkgen::SplineBased</class>
    <class kind="class">hpp::walkgen::Step</class>
    <class kind="class">hpp::walkgen::SupportFoot</class>
    <member kind="typedef">
      <type>roboptim::trajectory::Polynomial3</type>
      <name>Polynomial3</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a724e67744e9af46e7d3e6c0b89371db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>roboptim::trajectory::CubicBSpline::polynomials3vectors_t</type>
      <name>polynomials3vectors_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a319290a19c29e4c9999310f079b1f23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>roboptim::trajectory::CubicBSpline::polynomials3vector_t</type>
      <name>polynomials3vector_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a20597679aa8fab44725ddb6afcf7fe02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 7, 1 &gt;</type>
      <name>vector7_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6b904c9e7f48f36c3f22f0681d010af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; FootPrint, Eigen::aligned_allocator&lt; FootPrint &gt; &gt;</type>
      <name>FootPrints_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a7f315462c81d3850e3273b5ec98d4be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>roboptim::trajectory::CubicBSpline</type>
      <name>CubicBSpline</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a802ba65e0be5a202443823ceba0d9b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CubicBSpline &gt;</type>
      <name>CubicBSplinePtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a5deec5db477c3921e396b8586bcc1944</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SplineBased &gt;</type>
      <name>SplineBasedPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a21716aaf6f7041390f777842a06fc56f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Step &gt;</type>
      <name>StepPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a02444c29c262cb95f4ce75d13ca17958</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SupportFoot &gt;</type>
      <name>SupportFootPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a1158584b796268b6497b3a34ee5ecf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a540c9295bf0309d0d41a28ecdd636b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, 1 &gt;</type>
      <name>vector_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa073e9a23c15709b5422f6bb01502a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>matrix_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a11a070fb9a53d21c326c097c22c2bcaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>matrix_t::Index</type>
      <name>size_type</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aa370f1f02ca9bf6ddeb8d9a998e7bcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; value_type &gt;</type>
      <name>Times_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a5476f6debe74f7b9ba65ba15b3ee6829</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 2, 1 &gt;</type>
      <name>vector2_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a466a29bfe6917e5f7c7274ccc562127a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; value_type, 1, 1 &gt;</type>
      <name>vector1_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a37cebabab4a444ab6bf13690e9aa3242</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>afefcc3e6032a3dae61765910a77d2ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Path</type>
      <name>Path</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6c44d66b0b216efdf81a6be19b788189</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathPtr_t</type>
      <name>PathPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6a22b22dae5472b6f19e433822ca4618</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVectorPtr_t</type>
      <name>PathVectorPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>acb669ad305c85ad5492acc00c9686432</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVector</type>
      <name>PathVector</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a0c181d52e7c218cb8ac4d04b49a66fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationOut_t</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4be5017bff4f1a7fb28adf0bc098aac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6672bcd4e256a044fb744b696ba54c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConstraintSetPtr_t</type>
      <name>ConstraintSetPtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>abe5cc4cf9ded07203eeaf8ce87f2cef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DevicePtr_t</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a944006dbf22f1cfcaaa8a0af33f349f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; value_type &gt;</type>
      <name>knots_t</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aff49a724c0cdeaef5745f48f73858192</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DevicePtr_t</type>
      <name>createFootDevice</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a07ba256012badaaac89f24ac82e5abce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a6fc472e3225546c63001fa243b68d26d</anchor>
      <arglist>(SplineBased)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a04a17c6f565422b724c8bce8e3cc29d7</anchor>
      <arglist>(Step)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aec7231e78a853d23c577bcb0aa911f99</anchor>
      <arglist>(SupportFoot)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static pinocchio::SE3</type>
      <name>Id</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4ee95e81a61e79d75a6adca85404a521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_type</type>
      <name>footConfigSize</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a7e74db8eeeaeaeb8b76c6715701941d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_type</type>
      <name>footNumberDof</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aeee0cb25a9838ed5b9f68645bfb7ac59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static hpp::pinocchio::liegroup::SpecialOrthogonalOperation&lt; 2 &gt;</type>
      <name>SO2</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aed78d069a0667260bc82a6b1abf3ce0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>
