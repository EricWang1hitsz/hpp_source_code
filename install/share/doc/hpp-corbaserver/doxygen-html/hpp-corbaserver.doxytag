<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>_constraints.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00065</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <includes id="a00074" name="constraints.idl" local="yes" imported="yes">hpp/constraints_idl/constraints.idl</includes>
    <class kind="interface">hpp::core_idl::Constraint</class>
    <class kind="interface">hpp::core_idl::ConfigProjector</class>
    <class kind="interface">hpp::core_idl::ConstraintSet</class>
    <namespace>hpp</namespace>
    <namespace>hpp::constraints_idl</namespace>
    <namespace>hpp::core_idl</namespace>
  </compound>
  <compound kind="file">
    <name>_problem.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00066</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <includes id="a00078" name="distances.idl" local="yes" imported="yes">hpp/core_idl/distances.idl</includes>
    <includes id="a00100" name="steering_methods.idl" local="yes" imported="yes">hpp/core_idl/steering_methods.idl</includes>
    <includes id="a00085" name="path_validations.idl" local="yes" imported="yes">hpp/core_idl/path_validations.idl</includes>
    <includes id="a00072" name="configuration_shooters.idl" local="yes" imported="yes">hpp/core_idl/configuration_shooters.idl</includes>
    <class kind="interface">hpp::core_idl::Problem</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
  </compound>
  <compound kind="file">
    <name>include/hpp/corbaserver/basic-server.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00067</filename>
    <includes id="a00097" name="server-plugin.hh" local="no" imported="no">hpp/corbaserver/server-plugin.hh</includes>
    <class kind="class">hpp::corbaServer::BasicServer</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
  </compound>
  <compound kind="file">
    <name>src/basic-server.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/</path>
    <filename>a00068</filename>
    <includes id="a00097" name="server-plugin.hh" local="no" imported="no">hpp/corbaserver/server-plugin.hh</includes>
    <includes id="a00094" name="robot.impl.hh" local="yes" imported="no">robot.impl.hh</includes>
    <includes id="a00082" name="obstacle.impl.hh" local="yes" imported="no">obstacle.impl.hh</includes>
    <includes id="a00090" name="problem.impl.hh" local="yes" imported="no">problem.impl.hh</includes>
    <class kind="class">hpp::corbaServer::BasicServer</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::impl</namespace>
  </compound>
  <compound kind="file">
    <name>benchmark.py</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/hpp/corbaserver/</path>
    <filename>a00069</filename>
    <class kind="class">hpp::corbaserver::benchmark::Benchmark</class>
    <namespace>hpp::corbaserver::benchmark</namespace>
  </compound>
  <compound kind="file">
    <name>client.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00070</filename>
    <class kind="class">hpp::corbaServer::Client</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
  </compound>
  <compound kind="file">
    <name>common.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/</path>
    <filename>a00071</filename>
    <class kind="exception">hpp::Error</class>
    <namespace>hpp</namespace>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ac365baf91c623fb377db255fa0b08b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>size_type</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a20193209554a3bd8bbed8972ec927c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; string &gt;</type>
      <name>Names_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>aaf2cd2058ca2b7078a44db27acdf759c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; boolean &gt;</type>
      <name>boolSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a1ee11cb81c069fab362b221baf62d566</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; long &gt;</type>
      <name>intSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>aed890abb35e052cae7cda98d7096022e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; intSeq &gt;</type>
      <name>intSeqSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a67be5b661bd23439a11de55524616f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; double &gt;</type>
      <name>floatSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a45c0423291b61bc8cab2b86f44e7a5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; floatSeq &gt;</type>
      <name>floatSeqSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a8e52ca94e51aedffaf099d1d426cad95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Transform_</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a4b440e779d8fd13bf9cd136c7a2a2732</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; Transform_ &gt;</type>
      <name>TransformSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a8cbac14136aa1de3996e8a134624bd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Quaternion_</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a7383a9d3dcd6de57210b8da50eed409f</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configuration_shooters.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00072</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::core_idl::ConfigurationShooter</class>
    <class kind="interface">hpp::core_idl::configuration_shooter::Gaussian</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
    <namespace>hpp::core_idl::configuration_shooter</namespace>
  </compound>
  <compound kind="file">
    <name>constraints.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/constraints_idl/</path>
    <filename>a00073</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00075" name="conversions.hh" local="no" imported="no">hpp/corbaserver/conversions.hh</includes>
    <includes id="a00096" name="servant-base.hh" local="no" imported="no">hpp/corbaserver/servant-base.hh</includes>
    <class kind="class">hpp::corbaServer::constraints_idl::DifferentiableFunctionServant</class>
    <class kind="class">hpp::corbaServer::constraints_idl::ImplicitServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::constraints_idl</namespace>
    <member kind="typedef">
      <type>DifferentiableFunctionServant&lt; POA_hpp::constraints_idl::DifferentiableFunction, constraints::DifferentiableFunctionPtr_t &gt;</type>
      <name>DifferentiableFunction</name>
      <anchorfile>a00108.html</anchorfile>
      <anchor>a5347724cdf382553ea1f4299f645b8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImplicitServant&lt; POA_hpp::constraints_idl::Implicit, constraints::ImplicitPtr_t &gt;</type>
      <name>Implicit</name>
      <anchorfile>a00108.html</anchorfile>
      <anchor>aa00061fc5e90bd78016516035ad16ba8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>constraints.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/constraints_idl/</path>
    <filename>a00074</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::constraints_idl::DifferentiableFunction</class>
    <class kind="interface">hpp::constraints_idl::Implicit</class>
    <class kind="interface">hpp::constraints_idl::LockedJoint</class>
    <namespace>hpp</namespace>
    <namespace>hpp::constraints_idl</namespace>
  </compound>
  <compound kind="file">
    <name>conversions.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00075</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; CORBA::Long, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>IntMatrix_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adcefdf5044aafff64981d3d2d77f3685</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toTransform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac4d913545eb7ee30aa2b88b30e8af8b5</anchor>
      <arglist>(const Transform_ in, Transform3f &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>toTransform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af1d94821e92a3a0875d56aa4c732d574</anchor>
      <arglist>(const Transform_ in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toHppTransform</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a057821c159409c488fe25a915b17592b</anchor>
      <arglist>(const Transform3f &amp;in, Transform_ out)</arglist>
    </member>
    <member kind="function">
      <type>Transform__slice *</type>
      <name>toHppTransform</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0d165bf866ab7646865fa39d8ffb3d95</anchor>
      <arglist>(const Transform3f &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>vectorToFloatSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad2c849b64da6cfeda60eb8f92d030180</anchor>
      <arglist>(core::vectorIn_t input)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>vectorToFloatSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7ed54d3cddfb19151e6b2f1aff5e9e79</anchor>
      <arglist>(core::ConfigurationPtr_t input)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq *</type>
      <name>matrixToFloatSeqSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae6e28e17b16fe16567887d213dc3b258</anchor>
      <arglist>(core::matrixIn_t input)</arglist>
    </member>
    <member kind="function">
      <type>intSeqSeq *</type>
      <name>matrixToIntSeqSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a4a2c2ec736f4c0cb7e6d53cfabee8716</anchor>
      <arglist>(Eigen::Ref&lt; const IntMatrix_t &gt; input)</arglist>
    </member>
    <member kind="function">
      <type>vector3_t</type>
      <name>floatSeqToVector3</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5375f2f8f6be69c1ec676479307b8cf1</anchor>
      <arglist>(const floatSeq &amp;dofArray)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>floatSeqToVector</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aaa21c65a09ea19fa86d8cdbd1220b009</anchor>
      <arglist>(const floatSeq &amp;dofArray, const size_type expectedSize=-1)</arglist>
    </member>
    <member kind="function">
      <type>Configuration_t</type>
      <name>floatSeqToConfig</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0f1c6994fed6eb0413a6e69c1d724857</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const floatSeq &amp;dofArray, bool throwIfNotNormalized)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationPtr_t</type>
      <name>floatSeqToConfigPtr</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a683a2f75cf964172d99985c925631fcf</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const floatSeq &amp;dofArray, bool throwIfNotNormalized)</arglist>
    </member>
    <member kind="function">
      <type>core::matrix_t</type>
      <name>floatSeqSeqToMatrix</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a2402a8df20c202f340977b38b616a9b0</anchor>
      <arglist>(const floatSeqSeq &amp;input, const size_type expectedRows=-1, const size_type expectedCols=-1)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>c_str</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac9ab92367b8ba60a254db8c5a46d5e48</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Names_t *</type>
      <name>toNames_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a290ca480e00fee491ffe850dadb608ab</anchor>
      <arglist>(InputIt begin, InputIt end)</arglist>
    </member>
    <member kind="function">
      <type>intSeq *</type>
      <name>toIntSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae1bf9a72783d121393b559847e20db3c</anchor>
      <arglist>(InputIt begin, InputIt end)</arglist>
    </member>
    <member kind="function">
      <type>OutputType</type>
      <name>toStrings</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a884f8aa23a7fed3aa9ab9763f0aa9b24</anchor>
      <arglist>(const Names_t &amp;names)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>corbaserver.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/</path>
    <filename>a00076</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00098" name="server.hh" local="no" imported="no">hpp/corbaserver/server.hh</includes>
  </compound>
  <compound kind="file">
    <name>distances.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/core_idl/</path>
    <filename>a00077</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00075" name="conversions.hh" local="no" imported="no">hpp/corbaserver/conversions.hh</includes>
    <includes id="a00096" name="servant-base.hh" local="yes" imported="no">hpp/corbaserver/servant-base.hh</includes>
    <class kind="class">hpp::corbaServer::core_idl::DistanceStorage</class>
    <class kind="class">hpp::corbaServer::core_idl::DistanceServant</class>
    <class kind="class">hpp::corbaServer::core_idl::WeighedDistanceServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::core_idl</namespace>
    <member kind="typedef">
      <type>DistanceServant&lt; POA_hpp::core_idl::Distance, DistanceStorage&lt; core::Distance &gt; &gt;</type>
      <name>Distance</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a9c551aabbfd7618c572ce6a1eeaaf561</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WeighedDistanceServant&lt; POA_hpp::core_idl::WeighedDistance, DistanceStorage&lt; core::WeighedDistance &gt; &gt;</type>
      <name>WeighedDistance</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>abc563b84ff9c63d8ceadb18a4fbb2827</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>distances.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00078</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::core_idl::Distance</class>
    <class kind="interface">hpp::core_idl::WeighedDistance</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
  </compound>
  <compound kind="file">
    <name>doc.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00079</filename>
  </compound>
  <compound kind="file">
    <name>fwd.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00001</filename>
    <class kind="class">hpp::fcl::BVHModel</class>
    <namespace>hpp</namespace>
    <namespace>hpp::fcl</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::impl</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ProblemSolverMap &gt;</type>
      <name>ProblemSolverMapPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a14c051d619415081f237864dc4a6de34</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::BodyPtr_t</type>
      <name>BodyPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a76fbf71a0164ca8d4582621f86095f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::CollisionGeometry</type>
      <name>CollisionGeometry_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa110f8d49db3529f339a8d981404d5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CollisionGeometry_t &gt;</type>
      <name>CollisionGeometryPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a10e474efcfcbd48891c383916b2f9e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::CollisionObject</type>
      <name>CollisionObject_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a81606bd42321cc3295571fbe770b68c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::CollisionObjectPtr_t</type>
      <name>CollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a321de24338739264f42a14708ab2fafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::CollisionObjectConstPtr_t</type>
      <name>CollisionObjectConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac23b45495daf2d8c8388e3e5185fdb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a446a37cdbb0fb3e603318bc9248f75dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationPtr_t</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a79643eaf9be31c47357ac7faa803aca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigIterator_t</type>
      <name>ConfigIterator_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a29b409f91adf322650921d300ff5b826</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigConstIterator_t</type>
      <name>ConfigConstIterator_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad2e41eb9418f35f17430e29f2f444472</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConnectedComponent</type>
      <name>ConnectedComponent</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa58d2e93ea283c49efe713617a608436</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConnectedComponents_t</type>
      <name>ConnectedComponents_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab90aa00748e650e0b4472b698d87e3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConnectedComponentPtr_t</type>
      <name>ConnectedComponentPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae8b6ecfd25f1902f439c00b29e92d48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Device</type>
      <name>Device</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9d17dd432d49d077f54c6e1f98514386</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::DevicePtr_t</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad84553bce74adf2755799518858f0fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::DistanceResults_t</type>
      <name>DistanceResults_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a642b05b04993e01ec03446d327ff6037</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::CollisionPairs_t</type>
      <name>CollisionPairs_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adb8ff439bd814ae46a6812ca6273a0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DistanceBetweenObjects</type>
      <name>DistanceBetweenObjects</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a298a623c59c08d28df99921007717106</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DistanceBetweenObjectsPtr_t</type>
      <name>DistanceBetweenObjectsPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5c6c2f2074243859fa0f6e56afa9a7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Edges_t</type>
      <name>Edges_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a33e9c949c5837b699cb299762acdf7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Joint</type>
      <name>Joint</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a653354137e747f63aaf693023cd8e06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Frame</type>
      <name>Frame</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a2f36392afba63dfc0b2194a4a4df09a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointPtr_t</type>
      <name>JointPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a82d10e7b4a3f22696c653cf6a8d5f092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointVector_t</type>
      <name>JointVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adbd5de281415877bda80327a81f03157</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a82ec3fb0560faa312fc81e18b6ee0e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a29aaa28b84d44e16fb63d83c46819d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Nodes_t</type>
      <name>Nodes_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abcac3fc62e2b24366634a730b6865cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::NodeVector_t</type>
      <name>NodeVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a622647306aad8edcaac0bfbd697f9892</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ObjectVector_t</type>
      <name>ObjectVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab0353021ac124ef44a30073ff63cb3af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ObjectStdVector_t</type>
      <name>ObjectStdVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a4b4d21729ade81cc21a685a4faca69c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathPtr_t</type>
      <name>PathPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9249556ce83bb34dcbade0e4b8f5085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationReportPtr_t</type>
      <name>PathValidationReportPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a40248cef945bd865b078f9c9389bb37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVector</type>
      <name>PathVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5aee573f39c565882a0dd75c96968047</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVectorPtr_t</type>
      <name>PathVectorPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0bd91a707e934a92dd161bc08460737b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::SteeringMethod</type>
      <name>SteeringMethod_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a3feabf07fca5b5dbc657eb9ab1829b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::SteeringMethodPtr_t</type>
      <name>SteeringMethodPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8ab00f83084b36e20735ec36e1ba23d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a1ee0addb5fa4cfaf73c23d0b61c865c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::BVHModel&lt; fcl::RSS &gt;</type>
      <name>Polyhedron_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad39227b750a19619c1b0dafcde082e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Polyhedron_t &gt;</type>
      <name>PolyhedronPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0d9127bcfa0b76dd76c1d24f7478b1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::ShapeBase</type>
      <name>BasicShape_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a79306d0c2373f0269c1ac3e0e57fb636</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; BasicShape_t &gt;</type>
      <name>BasicShapePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0250521abd68a0fde84380494ca87145</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::value_type</type>
      <name>value_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad41c34cff04b090ee38f54c044d3445b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::matrix_t</type>
      <name>matrix_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae3f73adda740130f15b0133a9632be7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::matrix3_t</type>
      <name>matrix3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa34cf449080c1b663fa77a236d4dca5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::vector_t</type>
      <name>vector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a306fd4f9f7307e230b8f12181e507026</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::vector3_t</type>
      <name>vector3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a91f6ab5b4772791e849657c9b77ad2a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::ComJacobian_t</type>
      <name>ComJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9c72e388fd9ed3fa72c910ce5ea8f906</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::size_type</type>
      <name>size_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a68abede5ce371815b23f68671a91184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupElement</type>
      <name>LiegroupElement</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7218f76c42aa164b4dbd27c293b0c07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpace</type>
      <name>LiegroupSpace</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7fc7b59813c32133b6c95cdea1d631bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpacePtr_t</type>
      <name>LiegroupSpacePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aece3f56d4475780bf439c18deb7cabd3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>object-map.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00080</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <class kind="class">hpp::corbaServer::ObjectMap</class>
    <class kind="struct">hpp::corbaServer::ObjectMap::PolyhedronData</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
  </compound>
  <compound kind="file">
    <name>obstacle.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/</path>
    <filename>a00081</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::corbaserver::Obstacle</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaserver</namespace>
  </compound>
  <compound kind="file">
    <name>obstacle.impl.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/</path>
    <filename>a00082</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00080" name="object-map.hh" local="no" imported="no">hpp/corbaserver/object-map.hh</includes>
    <class kind="class">hpp::corbaServer::impl::Obstacle</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::impl</namespace>
  </compound>
  <compound kind="file">
    <name>path-validations.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/core_idl/</path>
    <filename>a00083</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00075" name="conversions.hh" local="no" imported="no">hpp/corbaserver/conversions.hh</includes>
    <includes id="a00096" name="servant-base.hh" local="yes" imported="no">hpp/corbaserver/servant-base.hh</includes>
    <includes id="a00086" name="paths.hh" local="no" imported="no">hpp/corbaserver/core_idl/paths.hh</includes>
    <class kind="class">hpp::corbaServer::core_idl::PathValidationServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::core_idl</namespace>
    <member kind="typedef">
      <type>PathValidationServant&lt; POA_hpp::core_idl::PathValidation, core::PathValidationPtr_t &gt;</type>
      <name>PathValidation</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a187a617991dce68abae03c8cda9311ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>path_planners.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00084</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <includes id="a00087" name="paths.idl" local="yes" imported="yes">hpp/core_idl/paths.idl</includes>
    <class kind="interface">hpp::core_idl::PathPlanner</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
  </compound>
  <compound kind="file">
    <name>path_validations.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00085</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <includes id="a00087" name="paths.idl" local="yes" imported="yes">hpp/core_idl/paths.idl</includes>
    <class kind="interface">hpp::core_idl::PathValidation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
    <member kind="typedef">
      <type>string</type>
      <name>PathValidationReport</name>
      <anchorfile>a00113.html</anchorfile>
      <anchor>ae56338aa305a2e47f7b31a75582e2504</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>paths.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/core_idl/</path>
    <filename>a00086</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00075" name="conversions.hh" local="no" imported="no">hpp/corbaserver/conversions.hh</includes>
    <includes id="a00096" name="servant-base.hh" local="yes" imported="no">hpp/corbaserver/servant-base.hh</includes>
    <class kind="class">hpp::corbaServer::core_idl::PathServant</class>
    <class kind="class">hpp::corbaServer::core_idl::PathVectorServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::core_idl</namespace>
    <member kind="typedef">
      <type>PathServant&lt; POA_hpp::core_idl::Path, core::PathPtr_t &gt;</type>
      <name>Path</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a643a967beb614a35853a7800d20fb107</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PathVectorServant&lt; POA_hpp::core_idl::PathVector, core::PathVectorPtr_t &gt;</type>
      <name>PathVector</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>ab5e1a0636796cb7692829f2ffa8a0b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Path_ptr</type>
      <name>makePathServant</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a23bc494723601c3392748b84e88b5608</anchor>
      <arglist>(Server *server, const PathPtr_t &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>paths.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00087</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::core_idl::Path</class>
    <class kind="interface">hpp::core_idl::PathVector</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
    <member kind="typedef">
      <type>unsigned long long</type>
      <name>size_t</name>
      <anchorfile>a00113.html</anchorfile>
      <anchor>ab34b626c76512036641f399cf812459b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>problem-solver-map.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00088</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/corbaserver/fwd.hh</includes>
    <class kind="class">hpp::corbaServer::ProblemSolverMap</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
  </compound>
  <compound kind="file">
    <name>problem.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/core_idl/</path>
    <filename>a00002</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00075" name="conversions.hh" local="no" imported="no">hpp/corbaserver/conversions.hh</includes>
    <includes id="a00096" name="servant-base.hh" local="no" imported="no">hpp/corbaserver/servant-base.hh</includes>
    <includes id="a00077" name="distances.hh" local="no" imported="no">hpp/corbaserver/core_idl/distances.hh</includes>
    <includes id="a00099" name="steering-methods.hh" local="no" imported="no">hpp/corbaserver/core_idl/steering-methods.hh</includes>
    <includes id="a00083" name="path-validations.hh" local="no" imported="no">hpp/corbaserver/core_idl/path-validations.hh</includes>
    <class kind="class">hpp::corbaServer::core_idl::ProblemServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::core_idl</namespace>
    <member kind="typedef">
      <type>ProblemServant&lt; POA_hpp::core_idl::Problem, core::ProblemPtr_t &gt;</type>
      <name>Problem</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>afc3402f87e9191960e8493fe620ee3c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>problem.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/</path>
    <filename>a00089</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <includes id="a00074" name="constraints.idl" local="yes" imported="yes">hpp/constraints_idl/constraints.idl</includes>
    <includes id="a00078" name="distances.idl" local="yes" imported="yes">hpp/core_idl/distances.idl</includes>
    <includes id="a00087" name="paths.idl" local="yes" imported="yes">hpp/core_idl/paths.idl</includes>
    <includes id="a00100" name="steering_methods.idl" local="yes" imported="yes">hpp/core_idl/steering_methods.idl</includes>
    <includes id="a00084" name="path_planners.idl" local="yes" imported="yes">hpp/core_idl/path_planners.idl</includes>
    <includes id="a00085" name="path_validations.idl" local="yes" imported="yes">hpp/core_idl/path_validations.idl</includes>
    <includes id="a00066" name="_problem.idl" local="yes" imported="yes">hpp/core_idl/_problem.idl</includes>
    <class kind="interface">hpp::corbaserver::Problem</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaserver</namespace>
  </compound>
  <compound kind="file">
    <name>problem.impl.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/</path>
    <filename>a00090</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00088" name="problem-solver-map.hh" local="yes" imported="no">hpp/corbaserver/problem-solver-map.hh</includes>
    <class kind="class">hpp::corbaServer::impl::Problem</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::impl</namespace>
  </compound>
  <compound kind="file">
    <name>problem_solver.py</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/hpp/corbaserver/</path>
    <filename>a00091</filename>
    <class kind="class">hpp::corbaserver::problem_solver::ProblemSolver</class>
    <namespace>hpp::corbaserver::problem_solver</namespace>
    <member kind="function">
      <type>def</type>
      <name>newProblem</name>
      <anchorfile>a00111.html</anchorfile>
      <anchor>a716d1dc9a08cf9676a5977c513c2c0b7</anchor>
      <arglist>(client=None, name=None)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>quaternion.py</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/hpp/</path>
    <filename>a00092</filename>
    <class kind="class">hpp::quaternion::Quaternion</class>
    <namespace>hpp::quaternion</namespace>
  </compound>
  <compound kind="file">
    <name>robot.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/</path>
    <filename>a00093</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::corbaserver::Robot</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaserver</namespace>
  </compound>
  <compound kind="file">
    <name>robot.impl.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/</path>
    <filename>a00094</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00080" name="object-map.hh" local="yes" imported="no">hpp/corbaserver/object-map.hh</includes>
    <class kind="class">hpp::corbaServer::impl::Robot</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::impl</namespace>
  </compound>
  <compound kind="file">
    <name>robot.py</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/hpp/corbaserver/</path>
    <filename>a00095</filename>
    <class kind="class">hpp::corbaserver::robot::Robot</class>
    <class kind="class">hpp::corbaserver::robot::StaticStabilityConstraintsFactory</class>
    <class kind="class">hpp::corbaserver::robot::HumanoidRobot</class>
    <class kind="class">hpp::corbaserver::robot::RobotXML</class>
    <namespace>hpp::corbaserver::robot</namespace>
  </compound>
  <compound kind="file">
    <name>servant-base.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00096</filename>
    <includes id="a00098" name="server.hh" local="no" imported="no">hpp/corbaserver/server.hh</includes>
    <class kind="class">hpp::corbaServer::AbstractServantKey</class>
    <class kind="class">hpp::corbaServer::AbstractServantBase</class>
    <class kind="class">hpp::corbaServer::ServantBase</class>
    <class kind="class">hpp::corbaServer::AbstractStorage</class>
    <class kind="class">hpp::corbaServer::ServantFactoryBase</class>
    <class kind="struct">hpp::corbaServer::ServantFactory</class>
    <class kind="struct">hpp::corbaServer::vectorToSeqServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SERVANT_BASE_TYPEDEFS</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga3852aef5193a0cf6672df2b367d94094</anchor>
      <arglist>(idlObj, hppObj)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HPP_CORBASERVER_ADD_DOWNCAST_OBJECT</name>
      <anchorfile>a00096.html</anchorfile>
      <anchor>a87aa50bafe8f8a7bfcb3e23dbbef03d7</anchor>
      <arglist>(ServantType, BaseServantType, depth)</arglist>
    </member>
    <member kind="typedef">
      <type>PortableServer::Servant_var&lt; PortableServer::ServantBase &gt;</type>
      <name>ServantBase_var</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga910f0760647ca9fc955e5c79c452ac7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PortableServer::Servant_var&lt; S &gt;</type>
      <name>reference_to_servant</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gab735db73646629f8e63edd2a88716ba6</anchor>
      <arglist>(Server *server, const P &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>AbstractServantBase&lt; T &gt; *</type>
      <name>reference_to_servant_base</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gab55b19046cba181b453c8176ca2c89ce</anchor>
      <arglist>(Server *server, const P &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>P</type>
      <name>makeServant</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga521b05f2289d112f080cae3aa1f340b4</anchor>
      <arglist>(Server *server, S *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StorageTpl&lt; U &gt;</type>
      <name>storage_cast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga2d8154a38cc854237182935aa4d81011</anchor>
      <arglist>(const StorageTpl&lt; V &gt; &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ServantFactoryBase&lt; ServantBaseType &gt; * &gt; &amp;</type>
      <name>objectDowncasts</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gabe6f4a11a684582436e861ea50076b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDowncastObjects</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga711415542abfba03c421f14678b78d71</anchor>
      <arglist>(ServantFactoryBase&lt; ServantBaseType &gt; *const object)</arglist>
    </member>
    <member kind="function">
      <type>ReturnType::Object_var</type>
      <name>makeServantDownCast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga1759fa7a1fe1cfaf607c95f8991eb0d2</anchor>
      <arglist>(Server *server, const typename ServantBaseType::Storage &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>ServantBaseType::Object_var</type>
      <name>makeServantDownCast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga8916c3dc3c2aaafbba76d53785308a71</anchor>
      <arglist>(Server *server, const typename ServantBaseType::Storage &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server-plugin.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00097</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00088" name="problem-solver-map.hh" local="no" imported="no">hpp/corbaserver/problem-solver-map.hh</includes>
    <class kind="class">hpp::corbaServer::ServerPlugin</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HPP_CORBASERVER_DEFINE_PLUGIN</name>
      <anchorfile>a00097.html</anchorfile>
      <anchor>a6b0b2c6e3a41968ad97fd60ceccd4d0e</anchor>
      <arglist>(PluginClassName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>server.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/</path>
    <filename>a00098</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00088" name="problem-solver-map.hh" local="no" imported="no">hpp/corbaserver/problem-solver-map.hh</includes>
    <class kind="class">hpp::corbaServer::Server</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
  </compound>
  <compound kind="file">
    <name>steering-methods.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/include/hpp/corbaserver/core_idl/</path>
    <filename>a00099</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/corbaserver/fwd.hh</includes>
    <includes id="a00075" name="conversions.hh" local="no" imported="no">hpp/corbaserver/conversions.hh</includes>
    <includes id="a00096" name="servant-base.hh" local="yes" imported="no">hpp/corbaserver/servant-base.hh</includes>
    <includes id="a00086" name="paths.hh" local="no" imported="no">hpp/corbaserver/core_idl/paths.hh</includes>
    <class kind="class">hpp::corbaServer::core_idl::SteeringMethodStorage</class>
    <class kind="class">hpp::corbaServer::core_idl::SteeringMethodServant</class>
    <namespace>hpp</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::corbaServer::core_idl</namespace>
    <member kind="typedef">
      <type>SteeringMethodServant&lt; POA_hpp::core_idl::SteeringMethod, SteeringMethodStorage&lt; core::SteeringMethod &gt; &gt;</type>
      <name>SteeringMethod</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>ab1bbe753b07fb145a620f793ae3cf1bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>steering_methods.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/core_idl/</path>
    <filename>a00100</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <includes id="a00087" name="paths.idl" local="yes" imported="yes">hpp/core_idl/paths.idl</includes>
    <includes id="a00065" name="_constraints.idl" local="yes" imported="yes">hpp/core_idl/_constraints.idl</includes>
    <class kind="interface">hpp::core_idl::SteeringMethod</class>
    <namespace>hpp</namespace>
    <namespace>hpp::core_idl</namespace>
  </compound>
  <compound kind="file">
    <name>tools.hh</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/</path>
    <filename>a00003</filename>
  </compound>
  <compound kind="file">
    <name>tools.idl</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/idl/hpp/corbaserver/</path>
    <filename>a00101</filename>
    <includes id="a00071" name="common.idl" local="yes" imported="yes">hpp/common.idl</includes>
    <class kind="interface">hpp::Tools</class>
    <namespace>hpp</namespace>
  </compound>
  <compound kind="file">
    <name>transform.py</name>
    <path>/local/devel/hpp/src/hpp-corbaserver/src/hpp/</path>
    <filename>a00102</filename>
    <class kind="class">hpp::transform::Transform</class>
    <namespace>hpp::transform</namespace>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::AbstractServantBase</name>
    <filename>a00007.html</filename>
    <templarg>T</templarg>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; T &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; constraints::DifferentiableFunction &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; constraints::DifferentiableFunction &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; constraints::DifferentiableFunction &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; constraints::Implicit &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; constraints::Implicit &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; constraints::Implicit &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; core::Distance &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; core::Distance &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; core::Distance &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; core::Path &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; core::Path &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; core::Path &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; core::PathValidation &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; core::PathValidation &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; core::PathValidation &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; core::Problem &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; core::Problem &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; core::Problem &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractServantBase&lt; core::SteeringMethod &gt;</name>
    <filename>a00007.html</filename>
    <base protection="private">hpp::corbaServer::AbstractServantKey</base>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; core::SteeringMethod &gt;</type>
      <name>TShPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>af754666f68eb3adba4d2f4988195eae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; core::SteeringMethod &gt;</type>
      <name>TWkPtr_t</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a5dd009f8f397a6851be2db5d4064df4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a1147351c2ab905737c3356f25b5d3f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acf8177afa2682fcfc1d5349cb885b304</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a011937d83d2db45822f2cede115ae127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AbstractServantBase</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>acb7d3b3abf0a0685c51ea6b36dbbdb6b</anchor>
      <arglist>(Server *server)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>server_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ace3dc96c02627b98375446547531ba92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::AbstractServantKey</name>
    <filename>a00008.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual Server::ServantKey</type>
      <name>getServantKey</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a6df72ba861a6c1fe76b0dee0f737aabb</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::AbstractStorage</name>
    <filename>a00009.html</filename>
    <templarg>T</templarg>
    <templarg>Base</templarg>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; T &gt;</type>
      <name>ptr_t</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a08020b53b33d87a146e07a2048e835bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>element_type</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a9ea14fddf7ddd2781201a7f944ad8352</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractStorage</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>afbec3dca7b11fbe0e0b41cf394f666f6</anchor>
      <arglist>(const ptr_t &amp;_element)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator boost::shared_ptr&lt; T &gt;</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>afed099205b4fc8999c2e283be45d263a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator boost::weak_ptr&lt; T &gt;</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ac799e44e63c005e09d8c223987342080</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>use_count</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ad7db73561ae68208b6379ce9c23d6978</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a36534746938a4ad9140971f6d7f639d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>ptr_t</type>
      <name>element</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>aa1c5793610d18b0ccdcc1c3a0fe13821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractStorage&lt; D, core::Distance &gt;</name>
    <filename>a00009.html</filename>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; D &gt;</type>
      <name>ptr_t</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a08020b53b33d87a146e07a2048e835bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>D</type>
      <name>element_type</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a9ea14fddf7ddd2781201a7f944ad8352</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractStorage</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>afbec3dca7b11fbe0e0b41cf394f666f6</anchor>
      <arglist>(const ptr_t &amp;_element)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator boost::shared_ptr&lt; D &gt;</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>afed099205b4fc8999c2e283be45d263a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator boost::weak_ptr&lt; D &gt;</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ac799e44e63c005e09d8c223987342080</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>use_count</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ad7db73561ae68208b6379ce9c23d6978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a36534746938a4ad9140971f6d7f639d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>ptr_t</type>
      <name>element</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>aa1c5793610d18b0ccdcc1c3a0fe13821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractStorage&lt; D, core::SteeringMethod &gt;</name>
    <filename>a00009.html</filename>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; D &gt;</type>
      <name>ptr_t</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a08020b53b33d87a146e07a2048e835bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>D</type>
      <name>element_type</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a9ea14fddf7ddd2781201a7f944ad8352</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractStorage</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>afbec3dca7b11fbe0e0b41cf394f666f6</anchor>
      <arglist>(const ptr_t &amp;_element)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator boost::shared_ptr&lt; D &gt;</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>afed099205b4fc8999c2e283be45d263a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator boost::weak_ptr&lt; D &gt;</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ac799e44e63c005e09d8c223987342080</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>use_count</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ad7db73561ae68208b6379ce9c23d6978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>a36534746938a4ad9140971f6d7f639d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>ptr_t</type>
      <name>element</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>aa1c5793610d18b0ccdcc1c3a0fe13821</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::BasicServer</name>
    <filename>a00010.html</filename>
    <base>hpp::corbaServer::ServerPlugin</base>
    <base>hpp::corbaServer::ServerPlugin</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServerPlugin</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a80e97f69791299ad0bc15357498956b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startCorbaServer</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>ac6ace3d776ba9a7ba0f706aa84e8c742</anchor>
      <arglist>(const std::string &amp;contextId, const std::string &amp;contextKind)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a419cd77f8092e882d5f9f61e8d09c425</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>core::ProblemSolverPtr_t</type>
      <name>problemSolver</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a4a78522b07617f7ca31e3274951c4e9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ProblemSolverMapPtr_t</type>
      <name>problemSolverMap</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a4b3bbaaedfc66b51a99d0837166b1bd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProblemSolverMap</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>ab8f3fdbbef6c14d053bb081524d51aad</anchor>
      <arglist>(ProblemSolverMapPtr_t psMap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicServer</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>adc3ff8902358bd5697c6040af1829ece</anchor>
      <arglist>(Server *parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BasicServer</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a86f83818e105da7ce4785f4788877fbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startCorbaServer</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a7aa5b22873bdeb397947324b4bb4d7f7</anchor>
      <arglist>(const std::string &amp;contextId, const std::string &amp;contextKind)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a70ce5adbb07af21421206b1945bc823d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServerPlugin</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a552671529a8b7a8de86c57ae971ffa57</anchor>
      <arglist>(bool multithread)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>multithread_</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a4934f40bb19d1f4937380280b3e6a835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ProblemSolverMapPtr_t</type>
      <name>problemSolverMap_</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a73ff1f6feb21fc9cd637c85061cce5c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaserver::benchmark::Benchmark</name>
    <filename>a00011.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a5aa4d2230476b907b99cc95dbdbfae03</anchor>
      <arglist>(self, client, robot, problemSolver)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>do</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a52fb6efb4da35f854fd484a4da4a0510</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCase</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>acf210c7aa3daa73a2c31ac9b291fe1da</anchor>
      <arglist>(self, iter)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>writeResume</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>af9376dbfd2e54dabec175c848a98487d</anchor>
      <arglist>(self, filename=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>tryResumeAndDelete</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a521b6899c052908b8f7492854cf48701</anchor>
      <arglist>(self, filename=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resumeFrom</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a3f76fdf5088282d0d6aeeb0b59d4b017</anchor>
      <arglist>(self, fname)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotTime</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a3ec762cf0d5a0d6e8873518a1efbb6ea</anchor>
      <arglist>(self, axes)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>plotPathLength</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ac6987d5ceb0cf25198b44771bc851264</anchor>
      <arglist>(self, axes)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>writeDatabase</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a6159a9d4b6efc2a9bf43e36ff5953e91</anchor>
      <arglist>(self, nameDatabase, experimentName=&apos;default&apos;, nameLogFile=&apos;temp.log&apos;, append=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a80950ee319fe0ef0d19edb61ea9ec94d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>seedRange</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a38dc43a7c613ed4cbd682b7e1700f35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>cases</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>abe07f744514b56073a7e360e256cf7d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>iterPerCase</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a2e8bac2489bc8cd702a4b21d606da59d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>client</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ac2b95fe809b5bc3cd5371378a193bb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>robot</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a10dde5e276ee9926f256938a9b1a7df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ps</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ac77a766c520571a35faf915835bf3a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>current</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>af4bb1bd918c0a9b79f3567a5e1de02de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>results</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ac31bf01a301a72719595d50b9047d39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type></type>
      <name>toSeconds</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>abdddcf3b1f56ef25e4c39a0a96455ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>string</type>
      <name>crashFile</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a25a3fb3fee38e1692c4b4213543e8413</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::fcl::BVHModel</name>
    <filename>a00012.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::Client</name>
    <filename>a00013.html</filename>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>acaa161b8545247c9181bf6d26953496f</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Client</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ad22a4712e556bd1e79f01c86db07e6b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connect</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>af19ba122dd4f7d3167a8a6d2d79965e1</anchor>
      <arglist>(const char *iiop=&quot;corbaloc:rir:/NameService&quot;, const char *context=&quot;corbaserver&quot;)</arglist>
    </member>
    <member kind="function">
      <type>hpp::corbaserver::Robot_var &amp;</type>
      <name>robot</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>af6bec14fbc8e135ffda2c51ed3badb73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::corbaserver::Problem_var &amp;</type>
      <name>problem</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a02c1a50bc1cff63e8820d01e46a0ce97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::corbaserver::Obstacle_var &amp;</type>
      <name>obstacle</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a6504b09231be654c6c6171c0e9291336</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::ConfigProjector</name>
    <filename>a00014.html</filename>
    <base>hpp::core_idl::Constraint</base>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a905501f53db029078b130c05a840ec49</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideOfConstraintFromConfig</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a9f2801ab55e42b18642e8ecda37017ed</anchor>
      <arglist>(in constraints_idl::Implicit nm, in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSide</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a20a992109c3e1030ce4424433ce46833</anchor>
      <arglist>(in floatSeq param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideOfConstraint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aa9e0169520e6aad9a54510fc0763a32b</anchor>
      <arglist>(in constraints_idl::Implicit nm, in floatSeq rhs)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getRightHandSide</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a4b7cb7e8ce704149cf4480353d69835f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideAt</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a73c7691d7d3f01bbcff313a84c181909</anchor>
      <arglist>(in value_type s)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isConstraintSatisfied</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>ac1f620ba884b2354c00e9513413f6471</anchor>
      <arglist>(in constraints_idl::Implicit nm, in floatSeq arg, out floatSeq err, out boolean constraintFound)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::ConfigurationShooter</name>
    <filename>a00015.html</filename>
    <member kind="function">
      <type>floatSeq</type>
      <name>shoot</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a176d4bbec1766219afe3327a2bad7a74</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::Constraint</name>
    <filename>a00016.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>apply</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a32ddc7d44dcee6ef60a7e7797a9afef3</anchor>
      <arglist>(in floatSeq configin, out floatSeq configOut)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>name</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a59545da78218df183e61d8b16f156008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>str</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>aa191172954d85dc6d784ae6be8925f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isSatisfied</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a49a46abac1e0d43122b4ff8e286a0d70</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::ConstraintSet</name>
    <filename>a00017.html</filename>
    <base>hpp::core_idl::Constraint</base>
    <member kind="function">
      <type>Constraint</type>
      <name>getConfigProjector</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ae055fa800c8f909f5a39b422ffc69b4e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::constraints_idl::DifferentiableFunction</name>
    <filename>a00018.html</filename>
    <member kind="function">
      <type>floatSeq</type>
      <name>value</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a2df80a35d52d40426164d2aebd291ccd</anchor>
      <arglist>(in floatSeq arg)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>jacobian</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a5313df5304608968307d361e3971bf92</anchor>
      <arglist>(in floatSeq arg)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>inputSize</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>aaafb6d771e104792f86d8b1b64bc3bd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>inputDerivativeSize</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ac3a630260235c52383300d97b8efe9f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputSize</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a2e23419a64ae7834ca6755b18c0526df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputDerivativeSize</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a4a262ff46df0fbade54899fcd35c2c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>name</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a58a2a3cf6a268132ebe2bd312ce7da72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>str</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a914f0a4ef6331632daf47f9df68abc5c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::constraints_idl::DifferentiableFunctionServant</name>
    <filename>a00019.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; constraints::DifferentiableFunction, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>DifferentiableFunctionServant</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a0909607819f4e12e6830849446ba857b</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DifferentiableFunctionServant</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>ab9da57db21497568219584716753df6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>value</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>aabf39c9d5d8da253924eb2cd9520257f</anchor>
      <arglist>(const floatSeq &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq *</type>
      <name>jacobian</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>aca76a570e3edebf2d9b3650eb6b22915</anchor>
      <arglist>(const floatSeq &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>inputSize</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a44c3b7def289ad7b7a79db4044f670b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>inputDerivativeSize</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>aa3e92a32217b8c57dff917f776297007</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputSize</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>acea3800d68db292b0cd37d2d2b5982ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputDerivativeSize</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a5b81e26a171fed8e78f0cdfef8452c44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>name</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a3218ed9640851d99ddcaa083ba5df19f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>str</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a0f3206c9d303bcd71b53aa9a3b028d2e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::Distance</name>
    <filename>a00020.html</filename>
    <member kind="function">
      <type>value_type</type>
      <name>call</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a49bd0fdef6f6da5651cd3a8fc2f53275</anchor>
      <arglist>(in floatSeq q1, in floatSeq q2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::DistanceServant</name>
    <filename>a00021.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; core::Distance, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>DistanceServant</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>adcb75ae06602216f29f8917e66f21520</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DistanceServant</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a5b80a769e0ff86af952695c664cd5eb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CORBA::Double</type>
      <name>value</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a37bb616a7f76e907310d5d8a9e6ea231</anchor>
      <arglist>(const floatSeq &amp;q1, const floatSeq &amp;q2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::DistanceStorage</name>
    <filename>a00022.html</filename>
    <templarg>D</templarg>
    <base>AbstractStorage&lt; D, core::Distance &gt;</base>
    <member kind="typedef">
      <type>AbstractStorage&lt; D, core::Distance &gt;</type>
      <name>parent_t</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>ac6b4b424f93310584d49bacd148ed978</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; T &gt;</type>
      <name>ptr_t</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a08020b53b33d87a146e07a2048e835bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DistanceStorage</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a2841a04612601e981c5b8a3dce78a5be</anchor>
      <arglist>(const core::DevicePtr_t &amp;_r, const ptr_t &amp;_d)</arglist>
    </member>
    <member kind="function">
      <type>DistanceStorage&lt; T &gt;</type>
      <name>cast</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>af70126ca1e1d664112b6a800c4daf856</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>core::DevicePtr_t</type>
      <name>r</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>ae6d144a14a87253f2032735b197c026f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="exception">
    <name>hpp::Error</name>
    <filename>a00023.html</filename>
    <member kind="variable">
      <type>string</type>
      <name>msg</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>acbb9fbcad5c9dc335bc42ab3eac59c63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::configuration_shooter::Gaussian</name>
    <filename>a00024.html</filename>
    <base>hpp::core_idl::ConfigurationShooter</base>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a2943e50caf7915ec44f14af7dbfa3c72</anchor>
      <arglist>(in floatSeq c)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCenter</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>ac23f0a88348346a8f995a7b980ba8c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getSigmas</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a7a9e76fd51364f021c0e683433bfce28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSigmas</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a3a9f9f8573ebb30b10f8c84a55f00209</anchor>
      <arglist>(in floatSeq s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaserver::robot::HumanoidRobot</name>
    <filename>a00025.html</filename>
    <base>hpp::corbaserver::robot::Robot</base>
    <base>hpp::corbaserver::robot::StaticStabilityConstraintsFactory</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a5840c39b02b79e8858e8536da71c3979</anchor>
      <arglist>(self, robotName=None, rootJointType=None, load=True, client=None, hppcorbaClient=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadModel</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>ab8df8a994c1fb3939a3cd511dc280449</anchor>
      <arglist>(self, robotName, rootJointType)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::constraints_idl::Implicit</name>
    <filename>a00026.html</filename>
    <member kind="function">
      <type>DifferentiableFunction</type>
      <name>function</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a666451876011cecce60603a008f99457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a7c5c81149692065284db0f96cd94a1f7</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSide</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a0150b1e7eb3cd301270f46adeded697a</anchor>
      <arglist>(in floatSeq rhs)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getRightHandSide</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a16ca975182deeb55050e3c5cdd448fa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>rightHandSideSize</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a7e22b9a2996cf0cf5291c7e4c9816ada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>parameterSize</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>afc01b63e7bc3a7f18ff66eb23a40365c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>rightHandSideAt</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a11bd519ac41af05603273034fb19b9cb</anchor>
      <arglist>(in value_type s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::constraints_idl::ImplicitServant</name>
    <filename>a00027.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; constraints::Implicit, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>ImplicitServant</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>ac70b1559d0c82654bd950c6624e4174a</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImplicitServant</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>adf729195b996b680b8ad7e611f9911a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::constraints_idl::DifferentiableFunction_ptr</type>
      <name>function</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>af95d77217e2a4b308133c4b91f0586d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a10bb295585191b9ab97fd5762e1c19c3</anchor>
      <arglist>(const floatSeq &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSide</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a56db5e1a01da1563ae5df68f5e1446d2</anchor>
      <arglist>(const floatSeq &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>getRightHandSide</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a773e86e0596eae35396537311dc2cdb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::size_type</type>
      <name>rhsSize</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a88f397222180917c622fdc7a526f992e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CORBA::Boolean</type>
      <name>constantRightHandSide</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a263ed2d7b701c189987009a339d1cf84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>rightHandSideAt</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a8c8bbbefd6e6996de2aaa849dd506ddf</anchor>
      <arglist>(value_type s)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::constraints_idl::LockedJoint</name>
    <filename>a00028.html</filename>
    <base>hpp::constraints_idl::Implicit</base>
    <member kind="function">
      <type>string</type>
      <name>jointName</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a93ee7c6a4d3f4c58a32379aef76f9806</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::ObjectMap</name>
    <filename>a00029.html</filename>
    <class kind="struct">hpp::corbaServer::ObjectMap::PolyhedronData</class>
    <member kind="function">
      <type>void</type>
      <name>createBox</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a9418ba41b9684ab0461dcc07b043e565</anchor>
      <arglist>(const std::string boxName, value_type x, value_type y, value_type z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createSphere</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ae38d260160fcf1a817b950eaad4afcc7</anchor>
      <arglist>(const std::string name, value_type radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createCylinder</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a6616aabd433368481b8e3a0827262553</anchor>
      <arglist>(const std::string name, value_type radius, value_type length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a618ea022ae0288322015e549d098e4c8</anchor>
      <arglist>(const std::string polyhedronName)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addPoint</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aef05421d896ed68dbba3f50c166677cd</anchor>
      <arglist>(const std::string polyhedronName, value_type x, value_type y, value_type z)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>addTriangle</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a8d75d68dc5116b97356b02ec4ec2f155</anchor>
      <arglist>(const std::string polyhedronName, std::size_t pt1, std::size_t pt2, std::size_t pt3)</arglist>
    </member>
    <member kind="function">
      <type>CollisionGeometryPtr_t</type>
      <name>geometry</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a1da7cf4bd83e8ac1a472a3d5d348f05f</anchor>
      <arglist>(const std::string name)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>GeomType</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Shape</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38bea8c6cdfb421f86d926a30f0073fe5b9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Polyhedron</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38bea4d73b70c3d2dfa7cc17da06cc71ce0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>BothGeomType</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38bea7db1734b97f5c0bfa27c265247e4cb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ThrowType</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NoThrow</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734af4c19d60d09a26e4ae6966227a2c14ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ThrowIfItExists</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734aed3060bb357ec0113afc5a79c59116db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ThrowIfItDoesNotExist</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734a3b45699c598ebdb5195019870d699de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, PolyhedronData &gt;</type>
      <name>PolyhedronMap_t</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a15a345b16c8c6ef6b611355597dbbf27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, BasicShapePtr_t &gt;</type>
      <name>ShapeMap_t</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a4933c5e7fad8522227b32638ca532ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Shape</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38bea8c6cdfb421f86d926a30f0073fe5b9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Polyhedron</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38bea4d73b70c3d2dfa7cc17da06cc71ce0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>BothGeomType</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>aa9541453c9d4d66bd81d247155ad38bea7db1734b97f5c0bfa27c265247e4cb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NoThrow</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734af4c19d60d09a26e4ae6966227a2c14ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ThrowIfItExists</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734aed3060bb357ec0113afc5a79c59116db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ThrowIfItDoesNotExist</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ad69906a249a712c631af7b7e0a8d7734a3b45699c598ebdb5195019870d699de4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>nameExists</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a6cdc47de8900370ebfb2d65ae3a1455a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ShapeMap_t</type>
      <name>shapeMap_</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>abefde33d6c8b0429c0e6fa05924286df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PolyhedronMap_t</type>
      <name>polyhedronMap_</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ab5e46aa6dae986ea38b46f058c329d58</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::corbaserver::Obstacle</name>
    <filename>a00030.html</filename>
    <member kind="function">
      <type>void</type>
      <name>loadObstacleModel</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a32d5896ae843ac8f13f114798ab9367f</anchor>
      <arglist>(in string package, in string file, in string prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>aaf3c6b386c5fb424e1b5a396d9079e4b</anchor>
      <arglist>(in string objectName, in string jointName, in boolean collision, in boolean distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cutObstacle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a286e244ee56a706f884049558743d55d</anchor>
      <arglist>(in string objectName, in floatSeq aabb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addObstacle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>aebc6d2fcc638a263191202703ba36007</anchor>
      <arglist>(in string objectName, in boolean collision, in boolean distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveObstacle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a8001a0ce21cb53a0cef252f7ed8d20fe</anchor>
      <arglist>(in string objectName, in Transform_ cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getObstaclePosition</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ae4307bcf3d53d3d627a2dc83c46b1029</anchor>
      <arglist>(in string objectName, out Transform_ cfg)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getObstacleNames</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ad8e5fe21eeeddb1a72b4b4b7385c336a</anchor>
      <arglist>(in boolean collision, in boolean distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a53a251a331b2c63ca8e4b65d10745c8b</anchor>
      <arglist>(in string polyName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBox</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>aea8fa5133a704bdbfdb560319363e7d8</anchor>
      <arglist>(in string inBoxName, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createSphere</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a77cd91e207c8ba24bae2e3ab60dc55ee</anchor>
      <arglist>(in string name, in double radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createCylinder</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>acdebf71588e6c8893cd50558f82837ff</anchor>
      <arglist>(in string name, in double radius, in double length)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addPoint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>af9273608dfd6b6c492f06ff52b33e6b2</anchor>
      <arglist>(in string polyName, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addTriangle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ae2b4a42ece56cb0c4506e411915b938a</anchor>
      <arglist>(in string polyName, in unsigned long pt1, in unsigned long pt2, in unsigned long pt3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a53a251a331b2c63ca8e4b65d10745c8b</anchor>
      <arglist>(in string polyName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBox</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>aea8fa5133a704bdbfdb560319363e7d8</anchor>
      <arglist>(in string inBoxName, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createSphere</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a77cd91e207c8ba24bae2e3ab60dc55ee</anchor>
      <arglist>(in string name, in double radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createCylinder</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>acdebf71588e6c8893cd50558f82837ff</anchor>
      <arglist>(in string name, in double radius, in double length)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addPoint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>af9273608dfd6b6c492f06ff52b33e6b2</anchor>
      <arglist>(in string polyName, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addTriangle</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ae2b4a42ece56cb0c4506e411915b938a</anchor>
      <arglist>(in string polyName, in unsigned long pt1, in unsigned long pt2, in unsigned long pt3)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::impl::Obstacle</name>
    <filename>a00031.html</filename>
    <member kind="function">
      <type></type>
      <name>Obstacle</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a1c4463e50ce54f9ebb20ffbcbb00fd96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServer</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ac17f723ddd8b93e160ddfae836851cef</anchor>
      <arglist>(ServerPlugin *server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadObstacleModel</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a737c22eea67a46904827cf5c81a819eb</anchor>
      <arglist>(const char *package, const char *filename, const char *prefix)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a4273d06441f0822c805ec06d6d93d5d7</anchor>
      <arglist>(const char *objectName, const char *jointName, Boolean collision, Boolean distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>cutObstacle</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a7a86c4f8b3cc40dd206e78d85658fad9</anchor>
      <arglist>(const char *objectName, const floatSeq &amp;aabb)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addObstacle</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ab6e4393e3d1588effc7785c14ca78898</anchor>
      <arglist>(const char *polyhedronName, Boolean collision, Boolean distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveObstacle</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a4832c2d04930f586030a03d6f6c431a8</anchor>
      <arglist>(const char *polyName, const Transform_ cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObstaclePosition</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a61c78fe5bf17ba6d3f92b093e77f46fe</anchor>
      <arglist>(const char *objectName, Transform_ cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getObstacleNames</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a9e315f911a075f5b3c6ccf8a9b33cedd</anchor>
      <arglist>(bool collision, bool distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ae577763d026606517ccd3023c91dea9d</anchor>
      <arglist>(const char *polyhedronName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createBox</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a7471aa6d8751263a4a5b6f416ab1b10d</anchor>
      <arglist>(const char *boxName, Double x, Double y, Double z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createSphere</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a17347f647237b2b4d475fe3c6df51346</anchor>
      <arglist>(const char *name, Double radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createCylinder</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a02969cc692cb3f7dc74bca65e160919a</anchor>
      <arglist>(const char *name, Double radius, Double length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>addPoint</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a8d4d18b589e003535371c71f02c708f8</anchor>
      <arglist>(const char *polyhedronName, Double x, Double y, Double z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>addTriangle</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a71860521db89eb8a169eb1cef65ac18d</anchor>
      <arglist>(const char *polyhedronName, ULong pt1, ULong pt2, ULong pt3)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::Path</name>
    <filename>a00032.html</filename>
    <member kind="function">
      <type>size_type</type>
      <name>outputSize</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a0c50b8c93d11c18704fed8b4cbfa39f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputDerivativeSize</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a0e144d77cbdd0006cd1b9c780ec769a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>length</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>ac4fc594dfbcf5469b8a43130be444a9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>initial</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>ac707c953c81ef7eb2f67e480689646ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>end</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>aed9e7cf63dac32a85a8975a9b1698082</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>str</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>af0902bd8b27bf08916df31506b4c7e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>call</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a8231fd9b24efcb7175e3864326165756</anchor>
      <arglist>(in value_type t, out boolean success)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>at</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>aa043e9c5d8a70b0471c44811d39a7b67</anchor>
      <arglist>(in value_type t, out boolean success)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>derivative</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a03861f5463a108b8aa33c1c9afa59e2b</anchor>
      <arglist>(in value_type t, in short order)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>extract</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a4484b60947eba230546d4c7abbd9023d</anchor>
      <arglist>(in value_type tmin, in value_type tmax)</arglist>
    </member>
    <member kind="function">
      <type>PathVector</type>
      <name>asVector</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a22176dcbc787ba36272321b8dc14f482</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::PathPlanner</name>
    <filename>a00033.html</filename>
    <member kind="function">
      <type>PathVector</type>
      <name>solve</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a4cfb8d2c79590c6a8e4bc04bd3fa6d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startSolve</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a029af607f7288643b3efd29bb6889dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tryConnectInitAndGoals</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>af50311e9474582fcb3df1d096143a515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oneStep</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a639ca131657e0fd31c703c47df8b18b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PathVector</type>
      <name>computePath</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ab3f413c8c5f2bd98186ecb5a32b7c717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PathVector</type>
      <name>finishSolve</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ac2c517336965c66c7229dccda865fbf7</anchor>
      <arglist>(in PathVector path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interrupt</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>abc46b022de2113805a94d5e49460efa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxIterations</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>aae710464a560aa188984a62e3cbc6569</anchor>
      <arglist>(in size_type n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeOut</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ad66422987a856a4431bd9509b8f625fd</anchor>
      <arglist>(in value_type seconds)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::PathServant</name>
    <filename>a00034.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; core::Path, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>PathServant</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ac779410eb235055dc127615d19295fc2</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathServant</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a8e859fe19651aec160362e09da46d6fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputSize</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a33f5e8c6cb499b541171af0744ee1b42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>outputDerivativeSize</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>ac71b0ce872298e09718c2dd92d38a53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>length</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a491f4425da02d6e406e1e13818e709a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>str</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a1c411b625bb912daed2280ea6692716c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>value</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>acf016b8864930ee942289a748120f499</anchor>
      <arglist>(value_type t, CORBA::Boolean &amp;success)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>derivative</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>acf8e509715222ef374856a5a5b629f01</anchor>
      <arglist>(value_type t, CORBA::Short order)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Path_ptr</type>
      <name>extract</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a88e6ebeeef7d7c17d45d9d661b0f1b0e</anchor>
      <arglist>(value_type tmin, value_type tmax)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::PathVector_ptr</type>
      <name>asVector</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a1db9f8708f22d68924ebd1f92d154867</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::PathValidation</name>
    <filename>a00035.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>aca06759ab4a9fefb7c583b20dcc5f170</anchor>
      <arglist>(in Path p, in boolean reverse, out Path validPart, out PathValidationReport report)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::PathValidationServant</name>
    <filename>a00036.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; core::PathValidation, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>PathValidationServant</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a79c14aee6f02a631f79b97e774fa1f9f</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathValidationServant</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a59a905c98a9449083c90adc3238093ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CORBA::Boolean</type>
      <name>validate</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>afbec466965f16438e5cf88ce9728bec0</anchor>
      <arglist>(hpp::core_idl::Path_ptr path, CORBA::Boolean reverse, hpp::core_idl::Path_out validPart, hpp::core_idl::PathValidationReport_out report)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::PathVector</name>
    <filename>a00037.html</filename>
    <base>hpp::core_idl::Path</base>
    <member kind="function">
      <type>size_t</type>
      <name>numberPaths</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a6f6e295447f188bbcbbbe1291ba0906c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>pathAtRank</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>af2a084ce2920b6ac7d84240e3b0d9b86</anchor>
      <arglist>(in size_t rank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendPath</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a54a70a3eaada89fc3dcb67e41b059c86</anchor>
      <arglist>(in Path p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>concatenate</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>adbdfa2281a7c36ae9d24aa30cb9ea3a8</anchor>
      <arglist>(in PathVector p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::PathVectorServant</name>
    <filename>a00038.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hpp::corbaServer::core_idl::PathServant</base>
    <member kind="typedef">
      <type>PathServant&lt; Base, Storage &gt;</type>
      <name>Parent</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af089875f98fad5b265c8650a10ae401d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PathVectorServant</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a6b36b172907fe48d34622bae72154745</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>numberPaths</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a3f3fb6b3ee3053e58926b2f50b957aeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Path_ptr</type>
      <name>pathAtRank</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a4b97afd3c237bb5934d163e7a875e8ed</anchor>
      <arglist>(std::size_t rank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendPath</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a7be746888cdcd5c801e4fdef86547418</anchor>
      <arglist>(hpp::core_idl::Path_ptr path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>concatenate</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a6f2ee5218b9f94cde1f073ee8d5fee16</anchor>
      <arglist>(hpp::core_idl::PathVector_ptr path)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::corbaServer::ObjectMap::PolyhedronData</name>
    <filename>a00039.html</filename>
    <member kind="variable">
      <type>std::vector&lt; fcl::Vec3f &gt;</type>
      <name>pts</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>ad373223a08ebfc29b2c3f1eb6b50346a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fcl::Triangle &gt;</type>
      <name>tris</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a3fd019d6d395758ffe59ef591916bc65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::corbaserver::Problem</name>
    <filename>a00040.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setRandomSeed</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a550bb30c4dc9df69fcf50d36c2af6476</anchor>
      <arglist>(in long seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumThreads</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7580ff2b1b0a260dae07858f59e1cb07</anchor>
      <arglist>(in unsigned short n)</arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getMaxNumThreads</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8791c88f255c6570f640999e14a8ee1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getAvailable</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a42ffffa6adf9048741a476a0a9b7fa31</anchor>
      <arglist>(in string type)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getSelected</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6e8889480fe92963a4d6bd82f060cd60</anchor>
      <arglist>(in string type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a155faa56416021b98df9d715e3583047</anchor>
      <arglist>(in string name, in any value)</arglist>
    </member>
    <member kind="function">
      <type>any</type>
      <name>getParameter</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab28ded34a05eee6f96333392afef481e</anchor>
      <arglist>(in string name)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getParameterDoc</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4622cec9c5be8642f5b9f66ef127a7cd</anchor>
      <arglist>(in string name)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>selectProblem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2dbc3acdb8fe3e9b287db1fba39e3227</anchor>
      <arglist>(in string name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetProblem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a71f0df90cb70a1978f00f8cdadd6c5ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadPlugin</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a86463100ab244813d76fa88b3265acec</anchor>
      <arglist>(in string pluginName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePathToProblem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ac00027e105318d93651e3902ad811fd7</anchor>
      <arglist>(in unsigned long pathId, in string problemName, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acbb59b2c0cbc5f2b0d381aba17da4dfd</anchor>
      <arglist>(in floatSeq dofArray)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getInitialConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9d78f3f9945acba42ce7189b548b532f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGoalConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a15fdd8747b1d2031175a4e9a6eaaac50</anchor>
      <arglist>(in floatSeq dofArray)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getGoalConfigs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae16317d433af2a1c2b3fe7c6a2a5a64e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetGoalConfigs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8a8dde9d59ca8cefe23a45f068ac7c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>applyConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9e3f2b055a0355ff7cae759c3fb41579</anchor>
      <arglist>(in floatSeq input, out floatSeq output, out double residualError)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>optimize</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab847bd675e40d5f46acf92537479ef7d</anchor>
      <arglist>(in floatSeq input, out floatSeq output, out floatSeq residualError)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeValueAndJacobian</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>abec627154ba47816de9250569843f34b</anchor>
      <arglist>(in floatSeq config, out floatSeq value, out floatSeqSeq jacobian)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>generateValidConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1a3c65744b2ef468e9101a4970c39371</anchor>
      <arglist>(in unsigned long maxIter, out floatSeq output, out double residualError)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createOrientationConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a62d2bd40aad129ee40e8d031d6285caf</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Quaternion_ p, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTransformationConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3383d0546294d25f847854069377dad4</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Transform_ ref, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTransformationSE3Constraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af83cd54f9c49711c2ce619602db3fa7f</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Transform_ frame1, in Transform_ frame2, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTransformationConstraint2</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a58ff101d4144611a64958ee38f15cdc4</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Transform_ frame1, in Transform_ frame2, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createLockedJoint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a0d0505bed8c895df15a87753e86a3b71</anchor>
      <arglist>(in string lockedJointName, in string jointName, in floatSeq value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createLockedExtraDof</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7e939bbe00f81725f2e574c9d153890f</anchor>
      <arglist>(in string lockedDofName, in unsigned long index, in floatSeq value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createManipulability</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa2c970a771e215c2f2b611e98e84a09d</anchor>
      <arglist>(in string name, in string function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createComBeetweenFeet</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a549a5393f58d2baef13da1796180f279</anchor>
      <arglist>(in string constraintName, in string comName, in string jointLName, in string jointRName, in floatSeq pointL, in floatSeq pointR, in string jointRefName, in floatSeq pointRef, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createRelativeComConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1941af2f0806f08921ee1c2127346b3a</anchor>
      <arglist>(in string constraintName, in string comName, in string jointLName, in floatSeq point, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createConvexShapeContactConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a03fc85c3600d73a3c7988ab71c07da2f</anchor>
      <arglist>(in string constraintName, in Names_t floorJoints, in Names_t objectJoints, in floatSeqSeq pts, in intSeqSeq objectTriangles, in intSeqSeq floorTriangles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createStaticStabilityConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a78ec0eff3f35f604512585d0a9f22a1b</anchor>
      <arglist>(in string constraintName, in Names_t jointNames, in floatSeqSeq points, in floatSeqSeq normals, in string comRootJointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPositionConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acd96ada846cd1697c8e121401b5e72c0</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in floatSeq point1, in floatSeq point2, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createConfigurationConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ace3b6760671cad1951e5edc8a9bbce26</anchor>
      <arglist>(in string constraintName, in floatSeq goal, in floatSeq weights)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDistanceBetweenJointConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6e6da75ef756381ab36b471c485b9bd5</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDistanceBetweenJointAndObjects</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3e62f556fb43212c9c01578e11c35ca2</anchor>
      <arglist>(in string constraintName, in string joint1Name, in Names_t objects, in double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createIdentityConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae787de4920bcb85c407c44d0be3a7e2f</anchor>
      <arglist>(in string constraintName, in Names_t inJoints, in Names_t outJoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af9d06f6752f47a929ba6d5acb4af369f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintMap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8cd64871870e816958ba5f6fdf3db546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPassiveDofs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae459cf6a24aee50a276df2ecaf2b4260</anchor>
      <arglist>(in string constraintName, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConstraintDimensions</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a85c9de632782a25dc2e963f6f39e89b7</anchor>
      <arglist>(in string constraintName, out unsigned long inputSize, out unsigned long inputDerivativeSize, out unsigned long outputSize, out unsigned long outputDerivativeSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstantRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a13488997caa7243c88429ab805f78a8f</anchor>
      <arglist>(in string constraintName, in boolean constant)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getConstantRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af67342588ee5be362765696138185e34</anchor>
      <arglist>(in string constraintName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a474b5931c5f9584a9d8f5b7df4e0e912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a81a9e582fd093bf95d4d240df957551b</anchor>
      <arglist>(in floatSeq rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>afe3ee707c538f43a85f00cb7034aa62c</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideByName</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1e38c304309e90d00a07f9f0d18eb359</anchor>
      <arglist>(in string constraintName, in floatSeq rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfigByName</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2cd965bc415835bac43f6892535352c0</anchor>
      <arglist>(in string constraintName, in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNumericalConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a077f46881b8d587aa37d05ad7b1d7e1f</anchor>
      <arglist>(in string configProjName, in Names_t constraintNames, in intSeq priorities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumericalConstraintsLastPriorityOptional</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa38c1c73687541b9ff1ace4af0200c31</anchor>
      <arglist>(in boolean optional)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLockedJointConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6ffb78128519597fada042c418094075</anchor>
      <arglist>(in string configProjName, in Names_t lockedJointNames)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>displayConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>adf6afe4bbd6764b3d3d4b09795d5a364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getErrorThreshold</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1ac6828eeede59af57fcb2460e1a619c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorThreshold</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6dfc878e2d8f1354c259fb388f8edaed</anchor>
      <arglist>(in double threshold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultLineSearchType</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>abae2e157fb0185f95fc78cc07f4cb047</anchor>
      <arglist>(in string type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getMaxIterProjection</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a32a47a530a15c2759f383f0ce412380e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterProjection</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a97702b88addf43973b7499ac03e9369e</anchor>
      <arglist>(in unsigned long iterations)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getMaxIterPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ad9056ab6f25c2205b375a954514541d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1fa0874cd1492dc59be6b327f64ecb2e</anchor>
      <arglist>(in unsigned long iterations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scCreateScalarMultiply</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ac06741eca88dc0e8abb07eebc8c7d9ad</anchor>
      <arglist>(in string outName, in double scalar, in string inName)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeOutPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a80e72dc1d3aa39dcae7265531f175d45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeOutPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ad93d769f206042bfe55cb53c22d675f8</anchor>
      <arglist>(in double timeOut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterCollisionPairs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa0511205fd837f309321b7d619a5a686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPathPlanner</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a006a2bed2ebee6bfd87c68d5b28ccaf3</anchor>
      <arglist>(in string pathPlannerType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a903e56f7b8fcc2288117091c6c215d0a</anchor>
      <arglist>(in string configurationShooterType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectDistance</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a44ef5e6cf831c735cd06d67a98ceed3d</anchor>
      <arglist>(in string distanceType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectSteeringMethod</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a126fc30e34b90e2e8e5eea135254953d</anchor>
      <arglist>(in string steeringMethodType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPathOptimizer</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a579275c1b788273c825ccaf82a84c90c</anchor>
      <arglist>(in string pathOptimizerType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPathOptimizers</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a815a63eb393a807720778c1542d05cfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aabcceb9885bf0bc6ff4795809ed89790</anchor>
      <arglist>(in string configValidationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConfigValidations</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aef788fdc271e5d4a8c0bd394439a5235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPathValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a424b5e3169e6e87829327d958c06bc4e</anchor>
      <arglist>(in string pathValidationType, in double tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPathProjector</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7cacdb404c66a9a9b7b3e1fc7648397a</anchor>
      <arglist>(in string pathProjectorType, in double tolerance)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>prepareSolveStepByStep</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3997f2bfa174d9db4f915176b69c5801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>executeOneStep</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af3acf2c8c562eac56c89456fd0835473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finishSolveStepByStep</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3a0fa8f072dc601e262a0b269bb19ca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>intSeq</type>
      <name>solve</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6e0ee521a1677f4ee0208ec50eb684a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>directPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a35bf0a3cb7b671c6ae7c4fbfdf81377b</anchor>
      <arglist>(in floatSeq startConfig, in floatSeq endConfig, in boolean validate, out unsigned long pathId, out string report)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>reversePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa296f4c3f64cbca7b165b38446f6291f</anchor>
      <arglist>(in unsigned long pathId, out unsigned long reversedPathId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigToRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a0c1dd00ca664266d0d9af0983c60fac7</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdgeToRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>adfef1872d4a10975b78170616c823e7b</anchor>
      <arglist>(in floatSeq config1, in floatSeq config2, in unsigned long pathId, in boolean bothEdges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendDirectPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acd5f9cdf5158d0ae5e2ebf648aa2a1bb</anchor>
      <arglist>(in unsigned long pathId, in floatSeq config, in boolean validate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>concatenatePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aec5f665282b0d614627decd2aa90ab42</anchor>
      <arglist>(in unsigned long startId, in unsigned long endId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab4f1581217e05705f05009a46b4d70b4</anchor>
      <arglist>(in unsigned long pathId, in double start, in double end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erasePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4647fdad4f38a6e25f1cf18384aa008e</anchor>
      <arglist>(in unsigned long pathId)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>projectPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3301f8583d34cbc498b41cbde283427f</anchor>
      <arglist>(in unsigned long patId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberPaths</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa73af4c04b6b6f0f270af1fd7e6c819b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>intSeq</type>
      <name>optimizePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1a75a6152123248d269f19f870513d05</anchor>
      <arglist>(in unsigned long inPathId)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pathLength</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af176335f3a2422a802ff3adc8a092a37</anchor>
      <arglist>(in unsigned long inPathId)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>configAtParam</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5f572c7c450fb6bab91a439eb6ce3ddf</anchor>
      <arglist>(in unsigned long inPathId, in double atDistance)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>derivativeAtParam</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5b5c7e494b354bcb1c86b72b8a090472</anchor>
      <arglist>(in unsigned long inPathId, in unsigned long orderId, in double atDistance)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getWaypoints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1bb4a3ef791a795df006835dad1f4523</anchor>
      <arglist>(in unsigned long pathId, out floatSeq times)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interruptPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a208d348b92608e83a227ab20cf4079ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>nodes</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aec79fdd85d2d239097426835f3726cb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberNodes</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a282ac97a4c92250fc0bb2f7e9b622d18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>node</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa5107f4f21a63ea99b8e95ce64e26418</anchor>
      <arglist>(in unsigned long nodeId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>connectedComponentOfEdge</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4528b3296568bd64250152a9e7ae10ce</anchor>
      <arglist>(in unsigned long edgeId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>connectedComponentOfNode</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9682ee638773bc8953bb2271445d2b96</anchor>
      <arglist>(in unsigned long nodeId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberEdges</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2ecef6fe82bcc30d4ca4630e9444bf55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edge</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a14dada90d276a9c0ae4856db3a481f3e</anchor>
      <arglist>(in unsigned long edgeId, out floatSeq q1, out floatSeq q2)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberConnectedComponents</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ac6b366a79f58c41083082fbdc2315cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>nodesConnectedComponent</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae7063004e52ab2bfe2b6d9c4e5edc9ba</anchor>
      <arglist>(in unsigned long connectedComponentId)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getNearestConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5e8c8748053b7011d6fedfe0227abfc7</anchor>
      <arglist>(in floatSeq config, in long connectedComponentId, out double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4b2a9e90ca841ce64ec247902edc0041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5206c6b110c906cfe1385358f0b1a46b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3482037d1d226240ca34bf816c344990</anchor>
      <arglist>(in string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a171dfd99771ee189275c5f7e18add04c</anchor>
      <arglist>(in string filename)</arglist>
    </member>
    <member kind="function">
      <type>core_idl::Distance</type>
      <name>getDistance</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9baf6305031c075e251decff45273f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistance</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a31b3711b2613e0b392a1b6657083fa57</anchor>
      <arglist>(in core_idl::Distance distance)</arglist>
    </member>
    <member kind="function">
      <type>core_idl::Path</type>
      <name>getPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6b5847e24a3928e7c1618544fdbef3c5</anchor>
      <arglist>(in unsigned long pathId)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>adc0e466099772f883303c79f1c0839d4</anchor>
      <arglist>(in core_idl::PathVector _path)</arglist>
    </member>
    <member kind="function">
      <type>core_idl::SteeringMethod</type>
      <name>getSteeringMethod</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a45a0e0ab09f89d46ca78c6970d0e4e58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core_idl::PathValidation</type>
      <name>getPathValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a96806a2cfccffd89ab6c45648b6b9e46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core_idl::PathPlanner</type>
      <name>getPathPlanner</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a0cd20c96b0131e2e2c74dfc9347acef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core_idl::Problem</type>
      <name>getProblem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8fde5dceb351052dd028f44ddc5b0cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constraints_idl::Implicit</type>
      <name>getConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a836d656604c1fed759fde6634f87a21a</anchor>
      <arglist>(in string constraintName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acbb59b2c0cbc5f2b0d381aba17da4dfd</anchor>
      <arglist>(in floatSeq dofArray)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getInitialConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9d78f3f9945acba42ce7189b548b532f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGoalConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a15fdd8747b1d2031175a4e9a6eaaac50</anchor>
      <arglist>(in floatSeq dofArray)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getGoalConfigs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae16317d433af2a1c2b3fe7c6a2a5a64e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetGoalConfigs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8a8dde9d59ca8cefe23a45f068ac7c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>applyConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9e3f2b055a0355ff7cae759c3fb41579</anchor>
      <arglist>(in floatSeq input, out floatSeq output, out double residualError)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>optimize</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab847bd675e40d5f46acf92537479ef7d</anchor>
      <arglist>(in floatSeq input, out floatSeq output, out floatSeq residualError)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeValueAndJacobian</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>abec627154ba47816de9250569843f34b</anchor>
      <arglist>(in floatSeq config, out floatSeq value, out floatSeqSeq jacobian)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>generateValidConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1a3c65744b2ef468e9101a4970c39371</anchor>
      <arglist>(in unsigned long maxIter, out floatSeq output, out double residualError)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createOrientationConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a62d2bd40aad129ee40e8d031d6285caf</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Quaternion_ p, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTransformationConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3383d0546294d25f847854069377dad4</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Transform_ ref, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTransformationSE3Constraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af83cd54f9c49711c2ce619602db3fa7f</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Transform_ frame1, in Transform_ frame2, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createTransformationConstraint2</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a58ff101d4144611a64958ee38f15cdc4</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in Transform_ frame1, in Transform_ frame2, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createLockedJoint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a0d0505bed8c895df15a87753e86a3b71</anchor>
      <arglist>(in string lockedJointName, in string jointName, in floatSeq value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createLockedExtraDof</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7e939bbe00f81725f2e574c9d153890f</anchor>
      <arglist>(in string lockedDofName, in unsigned long index, in floatSeq value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createManipulability</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa2c970a771e215c2f2b611e98e84a09d</anchor>
      <arglist>(in string name, in string function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createComBeetweenFeet</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a549a5393f58d2baef13da1796180f279</anchor>
      <arglist>(in string constraintName, in string comName, in string jointLName, in string jointRName, in floatSeq pointL, in floatSeq pointR, in string jointRefName, in floatSeq pointRef, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createRelativeComConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1941af2f0806f08921ee1c2127346b3a</anchor>
      <arglist>(in string constraintName, in string comName, in string jointLName, in floatSeq point, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createConvexShapeContactConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a03fc85c3600d73a3c7988ab71c07da2f</anchor>
      <arglist>(in string constraintName, in Names_t floorJoints, in Names_t objectJoints, in floatSeqSeq pts, in intSeqSeq objectTriangles, in intSeqSeq floorTriangles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createStaticStabilityConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a78ec0eff3f35f604512585d0a9f22a1b</anchor>
      <arglist>(in string constraintName, in Names_t jointNames, in floatSeqSeq points, in floatSeqSeq normals, in string comRootJointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPositionConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acd96ada846cd1697c8e121401b5e72c0</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in floatSeq point1, in floatSeq point2, in boolSeq mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createConfigurationConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ace3b6760671cad1951e5edc8a9bbce26</anchor>
      <arglist>(in string constraintName, in floatSeq goal, in floatSeq weights)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDistanceBetweenJointConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6e6da75ef756381ab36b471c485b9bd5</anchor>
      <arglist>(in string constraintName, in string joint1Name, in string joint2Name, in double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDistanceBetweenJointAndObjects</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3e62f556fb43212c9c01578e11c35ca2</anchor>
      <arglist>(in string constraintName, in string joint1Name, in Names_t objects, in double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createIdentityConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae787de4920bcb85c407c44d0be3a7e2f</anchor>
      <arglist>(in string constraintName, in Names_t inJoints, in Names_t outJoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af9d06f6752f47a929ba6d5acb4af369f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintMap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8cd64871870e816958ba5f6fdf3db546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPassiveDofs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae459cf6a24aee50a276df2ecaf2b4260</anchor>
      <arglist>(in string constraintName, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConstraintDimensions</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a85c9de632782a25dc2e963f6f39e89b7</anchor>
      <arglist>(in string constraintName, out unsigned long inputSize, out unsigned long inputDerivativeSize, out unsigned long outputSize, out unsigned long outputDerivativeSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstantRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a13488997caa7243c88429ab805f78a8f</anchor>
      <arglist>(in string constraintName, in boolean constant)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getConstantRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af67342588ee5be362765696138185e34</anchor>
      <arglist>(in string constraintName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a474b5931c5f9584a9d8f5b7df4e0e912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSide</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a81a9e582fd093bf95d4d240df957551b</anchor>
      <arglist>(in floatSeq rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>afe3ee707c538f43a85f00cb7034aa62c</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideByName</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1e38c304309e90d00a07f9f0d18eb359</anchor>
      <arglist>(in string constraintName, in floatSeq rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightHandSideFromConfigByName</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2cd965bc415835bac43f6892535352c0</anchor>
      <arglist>(in string constraintName, in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNumericalConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a077f46881b8d587aa37d05ad7b1d7e1f</anchor>
      <arglist>(in string configProjName, in Names_t constraintNames, in intSeq priorities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumericalConstraintsLastPriorityOptional</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa38c1c73687541b9ff1ace4af0200c31</anchor>
      <arglist>(in boolean optional)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLockedJointConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6ffb78128519597fada042c418094075</anchor>
      <arglist>(in string configProjName, in Names_t lockedJointNames)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>displayConstraints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>adf6afe4bbd6764b3d3d4b09795d5a364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getErrorThreshold</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1ac6828eeede59af57fcb2460e1a619c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorThreshold</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6dfc878e2d8f1354c259fb388f8edaed</anchor>
      <arglist>(in double threshold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultLineSearchType</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>abae2e157fb0185f95fc78cc07f4cb047</anchor>
      <arglist>(in string type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getMaxIterProjection</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a32a47a530a15c2759f383f0ce412380e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterProjection</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a97702b88addf43973b7499ac03e9369e</anchor>
      <arglist>(in unsigned long iterations)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getMaxIterPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ad9056ab6f25c2205b375a954514541d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1fa0874cd1492dc59be6b327f64ecb2e</anchor>
      <arglist>(in unsigned long iterations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scCreateScalarMultiply</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ac06741eca88dc0e8abb07eebc8c7d9ad</anchor>
      <arglist>(in string outName, in double scalar, in string inName)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeOutPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a80e72dc1d3aa39dcae7265531f175d45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeOutPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ad93d769f206042bfe55cb53c22d675f8</anchor>
      <arglist>(in double timeOut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterCollisionPairs</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa0511205fd837f309321b7d619a5a686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPathPlanner</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a006a2bed2ebee6bfd87c68d5b28ccaf3</anchor>
      <arglist>(in string pathPlannerType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a903e56f7b8fcc2288117091c6c215d0a</anchor>
      <arglist>(in string configurationShooterType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectDistance</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a44ef5e6cf831c735cd06d67a98ceed3d</anchor>
      <arglist>(in string distanceType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectSteeringMethod</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a126fc30e34b90e2e8e5eea135254953d</anchor>
      <arglist>(in string steeringMethodType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPathOptimizer</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a579275c1b788273c825ccaf82a84c90c</anchor>
      <arglist>(in string pathOptimizerType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPathOptimizers</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a815a63eb393a807720778c1542d05cfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aabcceb9885bf0bc6ff4795809ed89790</anchor>
      <arglist>(in string configValidationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConfigValidations</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aef788fdc271e5d4a8c0bd394439a5235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPathValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a424b5e3169e6e87829327d958c06bc4e</anchor>
      <arglist>(in string pathValidationType, in double tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPathProjector</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a7cacdb404c66a9a9b7b3e1fc7648397a</anchor>
      <arglist>(in string pathProjectorType, in double tolerance)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>prepareSolveStepByStep</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3997f2bfa174d9db4f915176b69c5801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>executeOneStep</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af3acf2c8c562eac56c89456fd0835473</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finishSolveStepByStep</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3a0fa8f072dc601e262a0b269bb19ca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>intSeq</type>
      <name>solve</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6e0ee521a1677f4ee0208ec50eb684a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>directPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a35bf0a3cb7b671c6ae7c4fbfdf81377b</anchor>
      <arglist>(in floatSeq startConfig, in floatSeq endConfig, in boolean validate, out unsigned long pathId, out string report)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>reversePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa296f4c3f64cbca7b165b38446f6291f</anchor>
      <arglist>(in unsigned long pathId, out unsigned long reversedPathId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConfigToRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a0c1dd00ca664266d0d9af0983c60fac7</anchor>
      <arglist>(in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdgeToRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>adfef1872d4a10975b78170616c823e7b</anchor>
      <arglist>(in floatSeq config1, in floatSeq config2, in unsigned long pathId, in boolean bothEdges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendDirectPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>acd5f9cdf5158d0ae5e2ebf648aa2a1bb</anchor>
      <arglist>(in unsigned long pathId, in floatSeq config, in boolean validate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>concatenatePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aec5f665282b0d614627decd2aa90ab42</anchor>
      <arglist>(in unsigned long startId, in unsigned long endId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ab4f1581217e05705f05009a46b4d70b4</anchor>
      <arglist>(in unsigned long pathId, in double start, in double end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erasePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4647fdad4f38a6e25f1cf18384aa008e</anchor>
      <arglist>(in unsigned long pathId)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>projectPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3301f8583d34cbc498b41cbde283427f</anchor>
      <arglist>(in unsigned long patId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberPaths</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa73af4c04b6b6f0f270af1fd7e6c819b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>intSeq</type>
      <name>optimizePath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1a75a6152123248d269f19f870513d05</anchor>
      <arglist>(in unsigned long inPathId)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>pathLength</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>af176335f3a2422a802ff3adc8a092a37</anchor>
      <arglist>(in unsigned long inPathId)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>configAtParam</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5f572c7c450fb6bab91a439eb6ce3ddf</anchor>
      <arglist>(in unsigned long inPathId, in double atDistance)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>derivativeAtParam</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5b5c7e494b354bcb1c86b72b8a090472</anchor>
      <arglist>(in unsigned long inPathId, in unsigned long orderId, in double atDistance)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getWaypoints</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a1bb4a3ef791a795df006835dad1f4523</anchor>
      <arglist>(in unsigned long pathId, out floatSeq times)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interruptPathPlanning</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a208d348b92608e83a227ab20cf4079ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>nodes</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aec79fdd85d2d239097426835f3726cb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberNodes</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a282ac97a4c92250fc0bb2f7e9b622d18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>node</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>aa5107f4f21a63ea99b8e95ce64e26418</anchor>
      <arglist>(in unsigned long nodeId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>connectedComponentOfEdge</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4528b3296568bd64250152a9e7ae10ce</anchor>
      <arglist>(in unsigned long edgeId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>connectedComponentOfNode</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9682ee638773bc8953bb2271445d2b96</anchor>
      <arglist>(in unsigned long nodeId)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberEdges</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a2ecef6fe82bcc30d4ca4630e9444bf55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edge</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a14dada90d276a9c0ae4856db3a481f3e</anchor>
      <arglist>(in unsigned long edgeId, out floatSeq q1, out floatSeq q2)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>numberConnectedComponents</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ac6b366a79f58c41083082fbdc2315cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>nodesConnectedComponent</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>ae7063004e52ab2bfe2b6d9c4e5edc9ba</anchor>
      <arglist>(in unsigned long connectedComponentId)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getNearestConfig</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5e8c8748053b7011d6fedfe0227abfc7</anchor>
      <arglist>(in floatSeq config, in long connectedComponentId, out double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a4b2a9e90ca841ce64ec247902edc0041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a5206c6b110c906cfe1385358f0b1a46b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a3482037d1d226240ca34bf816c344990</anchor>
      <arglist>(in string filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readRoadmap</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a171dfd99771ee189275c5f7e18add04c</anchor>
      <arglist>(in string filename)</arglist>
    </member>
    <member kind="function">
      <type>core_idl::Distance</type>
      <name>getDistance</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a9baf6305031c075e251decff45273f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistance</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a31b3711b2613e0b392a1b6657083fa57</anchor>
      <arglist>(in core_idl::Distance distance)</arglist>
    </member>
    <member kind="function">
      <type>core_idl::Path</type>
      <name>getPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a6b5847e24a3928e7c1618544fdbef3c5</anchor>
      <arglist>(in unsigned long pathId)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addPath</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>adc0e466099772f883303c79f1c0839d4</anchor>
      <arglist>(in core_idl::PathVector _path)</arglist>
    </member>
    <member kind="function">
      <type>core_idl::SteeringMethod</type>
      <name>getSteeringMethod</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a45a0e0ab09f89d46ca78c6970d0e4e58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core_idl::PathValidation</type>
      <name>getPathValidation</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a96806a2cfccffd89ab6c45648b6b9e46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core_idl::PathPlanner</type>
      <name>getPathPlanner</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a0cd20c96b0131e2e2c74dfc9347acef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core_idl::Problem</type>
      <name>getProblem</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a8fde5dceb351052dd028f44ddc5b0cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constraints_idl::Implicit</type>
      <name>getConstraint</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a836d656604c1fed759fde6634f87a21a</anchor>
      <arglist>(in string constraintName)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::Problem</name>
    <filename>a00041.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setInitConfig</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a468c7b10383584d28ef09e48feca2b29</anchor>
      <arglist>(in floatSeq init)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getInitConfig</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>afe2e02d011d9fdf01e265c898afa2b57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetGoalConfigs</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a2243761e5e746a9ccefd3c91897a5fb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Constraint</type>
      <name>getConstraints</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ac41ac50a11c8ab2a6194a4fc563ba310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Distance</type>
      <name>getDistance</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a6931e8ac392c5cafd3830bc2ec6c6c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistance</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a82316a18fc297ca93444f2fe9642f95f</anchor>
      <arglist>(in Distance d)</arglist>
    </member>
    <member kind="function">
      <type>SteeringMethod</type>
      <name>getSteeringMethod</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a48e038dc864cf5157deabc0d012984f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteeringMethod</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>aa8143b891b1236a32f9cd7c56f9f246a</anchor>
      <arglist>(in SteeringMethod d)</arglist>
    </member>
    <member kind="function">
      <type>PathValidation</type>
      <name>getPathValidation</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a5ef807eb98a1a6ac3729ef8301c35237</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPathValidation</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a920c58a00f819d4ac49118e717f59f4d</anchor>
      <arglist>(in PathValidation d)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationShooter</type>
      <name>getConfigurationShooter</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ac265714ea7de182a185f6b8049c4087b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigurationShooter</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a7a5eb742872acb3fcdfeb426be37b424</anchor>
      <arglist>(in ConfigurationShooter d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::impl::Problem</name>
    <filename>a00042.html</filename>
    <member kind="function">
      <type></type>
      <name>Problem</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ae7c622160e91c43fe753bf1b3352c080</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServer</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a9421946977236baf898e998989ae0160</anchor>
      <arglist>(ServerPlugin *server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getAvailable</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa3c9ddec9ad5dd801f8a6d87ff88edfa</anchor>
      <arglist>(const char *what)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getSelected</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5f5fb66fb1e87d12866f091f05418df8</anchor>
      <arglist>(const char *what)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameter</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a126d3d2853977136d95c194878b27480</anchor>
      <arglist>(const char *name, const Any &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Any *</type>
      <name>getParameter</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a376f8937cf07eeea3767e3c944eac194</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>getParameterDoc</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a3e298c32ea71e02e144c974eab606b53</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>selectProblem</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a52a7f5ad2b041f55396177cda517aee6</anchor>
      <arglist>(const char *problemName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetProblem</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a700d7044786ff6e9a4ce6a9402571f00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loadPlugin</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af3fe83c280e584f23d9242cc644dd7b6</anchor>
      <arglist>(const char *pluginName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>movePathToProblem</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ae96466cb5eb2edae4d298aecbca0e968</anchor>
      <arglist>(ULong pathId, const char *problemName, const Names_t &amp;jointNames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxNumThreads</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afd289d51d062a679b5c4cee30a3a90d0</anchor>
      <arglist>(UShort n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual UShort</type>
      <name>getMaxNumThreads</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a891bc67715535cb84cddfbdaf991f6a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRandomSeed</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa28229bdddbbaf45e06c44720d47c19a</anchor>
      <arglist>(const Long seed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInitialConfig</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a06bc520bc9838ec3f3933027d3ab0b01</anchor>
      <arglist>(const hpp::floatSeq &amp;dofArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getInitialConfig</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5f2453e477877ef4f8a2d66c812948c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addGoalConfig</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad3a1c34830be3ef641531fbbe81eddae</anchor>
      <arglist>(const hpp::floatSeq &amp;dofArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>getGoalConfigs</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aad2e7d423321522407a1a205f5e608a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetGoalConfigs</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abaaf811c81556775fefdf2717d83dd48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createOrientationConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8bd73c1315fb59bf8cd51b6332632bf6</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const char *joint2Name, const Double *p, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createTransformationConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7acae92c6f22b6f8cd9ec21f5a486b81</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const char *joint2Name, const Transform_ p, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createTransformationConstraint2</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa4fa1efaffc3036900d8f8feda485606</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const char *joint2Name, const Transform_ frame1, const Transform_ frame2, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createTransformationSE3Constraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a45adcf38db55c2b2dfb22d59fb4e1493</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const char *joint2Name, const Transform_ frame1, const Transform_ frame2, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createLockedJoint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac65d94081fe9ad57a0b0466fe3a773c3</anchor>
      <arglist>(const char *lockedJointName, const char *jointName, const hpp::floatSeq &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createLockedExtraDof</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a43431e900babf851351036eb0239cca9</anchor>
      <arglist>(const char *lockedDofName, ULong index, const hpp::floatSeq &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createManipulability</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a580a31b19057d67eeec74d6c23bd5e4d</anchor>
      <arglist>(const char *name, const char *function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createRelativeComConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>acc6fff7c83efffc67195ab5768f8c929</anchor>
      <arglist>(const char *constraintName, const char *comn, const char *jointName, const floatSeq &amp;point, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createComBeetweenFeet</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8dfdeaa5560fd0d09fac8d5431d61fd7</anchor>
      <arglist>(const char *constraintName, const char *comn, const char *jointLName, const char *jointRName, const floatSeq &amp;pointL, const floatSeq &amp;pointR, const char *jointRefName, const floatSeq &amp;pRef, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createConvexShapeContactConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a7d476fdb6df8e2919f4d032f5cc5f337</anchor>
      <arglist>(const char *constraintName, const Names_t &amp;floorJoints, const Names_t &amp;objectJoints, const hpp::floatSeqSeq &amp;points, const hpp::intSeqSeq &amp;objTriangles, const hpp::intSeqSeq &amp;floorTriangles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createStaticStabilityConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a34f11c8b342e3d405cc48a8fb72865bc</anchor>
      <arglist>(const char *constraintName, const hpp::Names_t &amp;jointNames, const hpp::floatSeqSeq &amp;points, const hpp::floatSeqSeq &amp;normals, const char *comRootJointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createPositionConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a3e7eaf22078bb54a6a15c30ea3814504</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const char *joint2Name, const hpp::floatSeq &amp;point1, const hpp::floatSeq &amp;point2, const hpp::boolSeq &amp;mask)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createConfigurationConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a234ccde1a34368155c06e22c52ef7013</anchor>
      <arglist>(const char *constraintName, const hpp::floatSeq &amp;goal, const hpp::floatSeq &amp;weights)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createDistanceBetweenJointConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a64145dfdd8350106c2baa97561442d12</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const char *joint2Name, Double distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createDistanceBetweenJointAndObjects</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a938cca42de73db09510c8bb32a508dd8</anchor>
      <arglist>(const char *constraintName, const char *joint1Name, const hpp::Names_t &amp;objects, Double distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createIdentityConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>add98abff51efa9b1e1f5093da5223ff4</anchor>
      <arglist>(const char *constraintName, const Names_t &amp;inJoints, const hpp::Names_t &amp;outJoints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aae471db84e9abb5e0592fb93d1bde6a5</anchor>
      <arglist>(const hpp::floatSeq &amp;input, hpp::floatSeq_out output, Double &amp;residualError)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>optimize</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a9fc3b009631e228459352bcced6b0ba3</anchor>
      <arglist>(const hpp::floatSeq &amp;input, hpp::floatSeq_out output, hpp::floatSeq_out residualError)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeValueAndJacobian</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af56a9261491ca94dcb2f4bb623be369c</anchor>
      <arglist>(const hpp::floatSeq &amp;config, hpp::floatSeq_out value, hpp::floatSeqSeq_out jacobian)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>generateValidConfig</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af7e7e23ec72cc53f6f968306312761fc</anchor>
      <arglist>(ULong maxIter, hpp::floatSeq_out output, Double &amp;residualError)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPassiveDofs</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aac696ba39e8b3d8af825c49cfd77e92c</anchor>
      <arglist>(const char *constraintName, const hpp::Names_t &amp;dofName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getConstraintDimensions</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a54e69341bdb3172682bee30d6b2e98e8</anchor>
      <arglist>(const char *constraintName, ULong &amp;inputSize, ULong &amp;inputDerivativeSize, ULong &amp;outputSize, ULong &amp;outputDerivativeSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstantRightHandSide</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a2d041ec4ec54ba66cee82f0c4e9d22fd</anchor>
      <arglist>(const char *constraintName, CORBA::Boolean constant)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getConstantRightHandSide</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ae1328c9870ad9e374a80e58fd10e6c8b</anchor>
      <arglist>(const char *constraintName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual floatSeq *</type>
      <name>getRightHandSide</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a291ed817239d623e1321d50cc4ea1bc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRightHandSide</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a645bc55f9629721adda1fd1002b27a51</anchor>
      <arglist>(const hpp::floatSeq &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ae7a8cfc589dfa10ea528f4ee97b4f1e4</anchor>
      <arglist>(const hpp::floatSeq &amp;config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRightHandSideByName</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a48f96ae3b3010773328b2cab545132cc</anchor>
      <arglist>(const char *constraintName, const hpp::floatSeq &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRightHandSideFromConfigByName</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aec2c2e2a1a8d26cea925d4575ec93d84</anchor>
      <arglist>(const char *constraintName, const hpp::floatSeq &amp;config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a463fc87e8d0d6aa9e11e0caeb51a973f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintMap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af41b66c603b15f5e90d923fb272dbe2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a3e0fd8707d68cebf9050b47b20e9c53a</anchor>
      <arglist>(const char *constraintName, const hpp::Names_t &amp;constraintNames, const hpp::intSeq &amp;priorities)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumericalConstraintsLastPriorityOptional</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a9229f68d50e88700dd6b7a707d7148b0</anchor>
      <arglist>(const bool optional)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addLockedJointConstraints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a79dc6e2c447e87e4e406f88c2bcf4224</anchor>
      <arglist>(const char *configProjName, const hpp::Names_t &amp;lockedJointNames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>displayConstraints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa6c03fa03544a6e8a47f4ebeedd40dac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>filterCollisionPairs</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a4d7029ee8ff00fa4c1bdebdef78869df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Double</type>
      <name>getErrorThreshold</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a85d2963723cfd03a67616412c19385dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setErrorThreshold</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a76f6113a853f6e2ae28a762c6b4d4b69</anchor>
      <arglist>(Double threshold)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultLineSearchType</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab3d24ca2dfcf391ec424c32bd1e976e3</anchor>
      <arglist>(const char *type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>getMaxIterProjection</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a499659064a4e6d52ba47d549ffe5bcb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxIterProjection</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5f69f378bc9d65dd372e4ac7a7df74b4</anchor>
      <arglist>(ULong iterations)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>getMaxIterPathPlanning</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a066a88061606abdd0d5a465b0077cc90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaxIterPathPlanning</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8c78302bd1267e2ea8ae454f7a095c87</anchor>
      <arglist>(ULong iterations)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTimeOutPathPlanning</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a435955f9cfdc73f1102dccd30b77dfdb</anchor>
      <arglist>(double timeOut)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTimeOutPathPlanning</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a749d388b0deb6c0335167a201854a360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPathOptimizer</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a58c6f0433d0893e12d7e856cb498a9f2</anchor>
      <arglist>(const char *pathOptimizerType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearPathOptimizers</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a74e2859e54a841586910965bdfe02d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addConfigValidation</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a90e7f1a1217db4fa090dc84170565fd7</anchor>
      <arglist>(const char *configValidationType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearConfigValidations</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a011776bdf882d4fddc1e27749fb92305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectPathValidation</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ab622ba89d916f26875c1d8b9998a3bd7</anchor>
      <arglist>(const char *pathValidationType, Double tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectPathProjector</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a61a4ecaab41b0fb2129367470c7d4cd4</anchor>
      <arglist>(const char *pathProjectorType, Double tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectPathPlanner</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5787e353aca9ec11e59f890bb4a184be</anchor>
      <arglist>(const char *pathPlannerType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectDistance</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a92ae41ada247be31bc5abb65b01272a6</anchor>
      <arglist>(const char *distanceType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectSteeringMethod</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afe6d371f86b460ef0027f700d1b49bba</anchor>
      <arglist>(const char *steeringMethodType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a9cb5d49cee091cd6da593476fb6c5cae</anchor>
      <arglist>(const char *configurationShooterType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>prepareSolveStepByStep</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aed0aa9249987a24a8878c827cb150938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>executeOneStep</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af171d25dd8a410f0e2fab75c35b739d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finishSolveStepByStep</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a99101fa5888d7268b7182a6cda391b60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::intSeq *</type>
      <name>solve</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac2eb674e9db165555a88563d7a5d96a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>directPath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a30ff301c9dfecfe3462d2302dd270732</anchor>
      <arglist>(const hpp::floatSeq &amp;startConfig, const hpp::floatSeq &amp;endConfig, CORBA::Boolean validate, ULong &amp;pathId, CORBA::String_out report)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reversePath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac9888aa0ca3ddf2cdbc677eb7e512d42</anchor>
      <arglist>(ULong pathId, ULong &amp;reversedPathId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addConfigToRoadmap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa4ecef2f1bee11bf21ba27739fc83f81</anchor>
      <arglist>(const hpp::floatSeq &amp;config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addEdgeToRoadmap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5be659ca5042fab13a33baa4fbfa64ee</anchor>
      <arglist>(const hpp::floatSeq &amp;config1, const hpp::floatSeq &amp;config2, ULong pathId, bool bothEdges)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendDirectPath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abc9fcdf4df51f8a99726f8602bebf12d</anchor>
      <arglist>(ULong pathId, const hpp::floatSeq &amp;config, Boolean validate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>concatenatePath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a2ceaa2d2ea67840db7ec27f82a8c2e1c</anchor>
      <arglist>(ULong startId, ULong endId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractPath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a405b8c87166ff9f93d74000d5a5850af</anchor>
      <arglist>(ULong pathId, Double start, Double end)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>erasePath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af01560216f836f6cfd0b1f7c92f3c807</anchor>
      <arglist>(ULong pathId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>projectPath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a31ac9db6807169eb1c86c70919e40a8f</anchor>
      <arglist>(ULong pathId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>interruptPathPlanning</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ad8efc857d4b6a5cefa49dad91db2e923</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>numberPaths</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aee47d7631c00813719f345fb4fd6d10e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::intSeq *</type>
      <name>optimizePath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a033b9afe89709608196db7e0a2cb5176</anchor>
      <arglist>(ULong pathId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Double</type>
      <name>pathLength</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac584ebf315edfa1a21d2ae912f3f550a</anchor>
      <arglist>(ULong pathId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>configAtParam</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a265c21a150017e580dc94092a5cb9b99</anchor>
      <arglist>(ULong pathId, Double atDistance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>derivativeAtParam</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a883c4892900cdb2c634f3774611e1409</anchor>
      <arglist>(ULong pathId, ULong order, Double atDistance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>getWaypoints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>adeecc743ce1f5b7d284b339d388b20dd</anchor>
      <arglist>(ULong inPathId, floatSeq_out times)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>nodes</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a0c2d618029f112bffb435d0f1ae7d222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>numberEdges</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>abf20c8771f40db7132a1e8b7f466df90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>edge</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a2f51f26f2dead0b2e2ecf4f8d9255b0d</anchor>
      <arglist>(ULong edgeId, hpp::floatSeq_out q1, hpp::floatSeq_out q2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>connectedComponentOfEdge</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a831bfecb75555080c623beb422d427f8</anchor>
      <arglist>(ULong edgeId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>node</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa97647429591cae4507c36907684d0bf</anchor>
      <arglist>(ULong nodeId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>connectedComponentOfNode</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa096c49efca909cd147303c7e9e79dd6</anchor>
      <arglist>(ULong nodeId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>numberNodes</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aeef386e08f38faec07f87656048ef6cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>numberConnectedComponents</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afa92ec366365c46f7781783bd19e529e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>nodesConnectedComponent</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aabdb598e6da7c1c0bcb36f6562b5e334</anchor>
      <arglist>(ULong connectedComponentId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getNearestConfig</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5a5913df08e84dd18c10c3b2c39a88c7</anchor>
      <arglist>(const hpp::floatSeq &amp;config, const Long connectedComponentId, hpp::core::value_type &amp;distance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearRoadmap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a11c9a6958a211e5b92d9635bb61dc4b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetRoadmap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>aa55029087d1935010a13378577253f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveRoadmap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af62dc114913bf49781697e9e46ce2a59</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readRoadmap</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a22b837dfc0d3c8d3426a4b9fb48c5101</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scCreateScalarMultiply</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af946acf94ad1f5d668c26e9f58be46c1</anchor>
      <arglist>(const char *outName, Double scalar, const char *inName)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Distance_ptr</type>
      <name>getDistance</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a91c88afaeb5dc694bb343a0f7e73ff5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistance</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afeb9f663e0da5b7153f0131c12478e15</anchor>
      <arglist>(hpp::core_idl::Distance_ptr distance)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Path_ptr</type>
      <name>getPath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a695b0c673e585216fec50ba6b25e0e2f</anchor>
      <arglist>(ULong pathId)</arglist>
    </member>
    <member kind="function">
      <type>ULong</type>
      <name>addPath</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a728bc616bb2dedb23a4ee822b3c387c0</anchor>
      <arglist>(hpp::core_idl::PathVector_ptr _path)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::SteeringMethod_ptr</type>
      <name>getSteeringMethod</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a6c96b1fe2f50e5b7094273d41526e771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::PathValidation_ptr</type>
      <name>getPathValidation</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a929030914a606625a3d62828e45753e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::PathPlanner_ptr</type>
      <name>getPathPlanner</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a85d061fa9ec9a81058e7082363973022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Problem_ptr</type>
      <name>getProblem</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a83de26f2d88f8e5e8f5b8ebc79519eb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::constraints_idl::Implicit_ptr</type>
      <name>getConstraint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a3875b12f42334048d0349bda085b2ca4</anchor>
      <arglist>(const char *name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::ProblemServant</name>
    <filename>a00043.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; core::Problem, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>ProblemServant</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a553d69db4a0fac3aa25ebcc0d7b3cee0</anchor>
      <arglist>(Server *server, const Storage &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProblemServant</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>aac03669559cc081539e7f4ac82367a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Distance_ptr</type>
      <name>getDistance</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ad45699ebd4fd48f1acb75049ad6b2535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistance</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a7796374bcc28ffd719a6601cb78385cc</anchor>
      <arglist>(hpp::core_idl::Distance_ptr distance)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::SteeringMethod_ptr</type>
      <name>getSteeringMethod</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>ac69a561fe336d29d795cf88c3ad59ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteeringMethod</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a33482f3295451ed2b9cacf94e03a33f7</anchor>
      <arglist>(hpp::core_idl::SteeringMethod_ptr steeringMethod)</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::PathValidation_ptr</type>
      <name>getPathValidation</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a3bd5adc5750702dcca1c8f0abfb1b1e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPathValidation</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a5841d8ea8ff76bb9d64ea33ace8532e6</anchor>
      <arglist>(hpp::core_idl::PathValidation_ptr pathValidation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaserver::problem_solver::ProblemSolver</name>
    <filename>a00044.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a4da9087688521fb95341ebf5279778d3</anchor>
      <arglist>(self, robot, hppcorbaClient=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadPlugin</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a85e70f825fc39a12cb2deb3f9c6cf8c5</anchor>
      <arglist>(self, pluginName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRandomSeed</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa748df30a991fc11201427537031d3ae</anchor>
      <arglist>(self, seed)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setMaxNumThreads</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>abc7b83452a62bbccb252f68fd46e56f8</anchor>
      <arglist>(self, n)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMaxNumThreads</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae65b5c0852fef4f6461269cdc0f75779</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getAvailable</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a888aeeeed9f20cdbb97ea45620b67118</anchor>
      <arglist>(self, type)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getSelected</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a2e29cbb90dd3ffa6804780fd07b6b81b</anchor>
      <arglist>(self, type)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setParameter</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a7df8d1ea7d93fc659594a29c5a5f30a0</anchor>
      <arglist>(self, name, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getParameter</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a3f88764491a34eebcd3e7d35febc212d</anchor>
      <arglist>(self, name, keep_any=False)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getParameterDoc</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a803994904ca8e6b0da8ed40f0a708590</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectProblem</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a8a537a32b762723aab61d89bcb7aef42</anchor>
      <arglist>(self, name)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>movePathToProblem</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a7819aea589f09a1437a998ea64b23954</anchor>
      <arglist>(self, pathId, problemName, jointNames)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setInitialConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>abc4b2a5329b0461283a047ca231950b0</anchor>
      <arglist>(self, dofArray)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getInitialConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a10d5d714f2eb397608ac56c8e8ac4ddd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addGoalConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>adeb0ff77c475f7360ff7ff339b8ad288</anchor>
      <arglist>(self, dofArray)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getGoalConfigs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aef4c05c2e822e53961facf49145158f6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resetGoalConfigs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9fa5311f616b18a33f2963e5ba46d9c9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadObstacleFromUrdf</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a56f38b656d939336a4cacedabd521e4e</anchor>
      <arglist>(self, package, filename, prefix)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afeef665c9e692f279f3366074b72ae7a</anchor>
      <arglist>(self, objectName, jointName, collision, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>cutObstacle</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afdce1072332a721e362a0d65c8b2da44</anchor>
      <arglist>(self, objectName, aabb)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>moveObstacle</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a840c2a1a2a1924d441c4dadc01f4533d</anchor>
      <arglist>(self, objectName, cfg)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstaclePosition</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a34e355e88c88d007c9c8d3d3ebb0a282</anchor>
      <arglist>(self, objectName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstacleNames</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a65560e90dfc72b5daf9b6e408291763d</anchor>
      <arglist>(self, collision, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstacleLinkPosition</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a3e5ae971e75cc10562b8e28e8740eac9</anchor>
      <arglist>(self, objectName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstacleLinkNames</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a71e62033789e1c2a5e4ebd3b3edcba11</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createOrientationConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>adf2d209a654cd515ec95777e78e77f98</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, p, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createTransformationConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae60e062b15ef9885f9c6902fa4977b55</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, ref, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createLockedJoint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae1a42b4e135b592e545fc4312662116b</anchor>
      <arglist>(self, lockedDofName, jointName, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createLockedExtraDof</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a68a1f729808792903ce999f06d19ffb5</anchor>
      <arglist>(self, lockedDofName, index, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createRelativeComConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a2c4d27e02da821eff78df32d9e2e3665</anchor>
      <arglist>(self, constraintName, comName, jointLName, point, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createComBeetweenFeet</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5b1ae4141aa3d225bf61a66a66a0caab</anchor>
      <arglist>(self, constraintName, comName, jointLName, jointRName, pointL, pointR, jointRefName, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addPartialCom</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afc5217ba7c8c1824c05a063c41ee42a3</anchor>
      <arglist>(self, comName, jointNames)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPartialCom</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a4bdeac2172b45fcae3658cf93623442c</anchor>
      <arglist>(self, comName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createPositionConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9270628c34c92348822e5c28287115cc</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, point1, point2, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createDistanceBetweenJointConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a69ae0891e4810d9dd0a3f1a10190c93e</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createDistanceBetweenJointAndObjects</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0c6c347ea06123e40b481017357955e3</anchor>
      <arglist>(self, constraintName, joint1Name, objects, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resetConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a295ad87db7b4c15e87441cc06f6af555</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resetConstraintMap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa665ba543c1b4730fb873de0b2213946</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addNumericalConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5f2a8da2bcc1b3e354cd6fe2ac37b89b</anchor>
      <arglist>(self, name, names, priorities=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addLockedJointConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae7dc14d16b30a550156869a35629530d</anchor>
      <arglist>(self, name, names)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSide</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae04fc60bf4406a025d728a77830c7102</anchor>
      <arglist>(self, rhs)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSideByName</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a207596f0e90668c6156ff596579bd6cc</anchor>
      <arglist>(self, constraintName, rhs)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a59495f7eed569ba9156b06e6e9d0a46a</anchor>
      <arglist>(self, config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSideFromConfigByName</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a26ef6b955836e56859887483807aac61</anchor>
      <arglist>(self, constraintName, config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>applyConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab95c43b2d0195d687e172a57fc7f0903</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>optimize</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a300e10f083d1e9ab1d5391162a399f06</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>computeValueAndJacobian</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0997d3f8a68a74d86f5ae23858c92d92</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addPassiveDofs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af2c17bed72fcbe2bdfef11ec2c91d1d1</anchor>
      <arglist>(self, name, dofNames)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setConstantRightHandSide</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aae361f744d83165a8e95dc5fb463d4fd</anchor>
      <arglist>(self, constraintName, constant)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getConstantRightHandSide</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ace075c5c70b66cad129be05adb67f57d</anchor>
      <arglist>(self, constraintName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generateValidConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a295be2a6d0131cb66e88b55e580c78e9</anchor>
      <arglist>(self, maxIter)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getErrorThreshold</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5ccc87a53d9b915b757523fc5948df36</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setErrorThreshold</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a440198f8cf27a5feac3d016c4ec0e231</anchor>
      <arglist>(self, threshold)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setDefaultLineSearchType</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1bcd681cd43946bc6be131694f754741</anchor>
      <arglist>(self, type)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMaxIterPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad9733f9ac4f1ddf53713c0fee432bec8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setMaxIterPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa23d8c10ced3b087ae825152a4dbff20</anchor>
      <arglist>(self, iterations)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getTimeOutPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af94004859c6ee4fcd4e8d54ecde32301</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setTimeOutPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a65c3114b36c08ac77f7431796abb0508</anchor>
      <arglist>(self, timeOut)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMaxIterProjection</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a67186fc3f763cc169f4232e7ced3d214</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setMaxIterProjection</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a910b7c3d279b174d6ef77f1e945604ee</anchor>
      <arglist>(self, iterations)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>filterCollisionPairs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9fac75713bc3184bc35e3a741aef6be3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectPathPlanner</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a78564183ae1a63b625deaa9b645e2f6f</anchor>
      <arglist>(self, pathPlannerType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5e9e57b8539021e6e717addbf50ebae4</anchor>
      <arglist>(self, configurationShooterType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addPathOptimizer</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa05401727fe3267d4daf43df9906f530</anchor>
      <arglist>(self, pathOptimizerType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clearPathOptimizers</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a13b83d9f98aa25d7963f4bbd4542d89b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectPathValidation</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a494f7094937bfa3330370d8cd1930f24</anchor>
      <arglist>(self, pathValidationType, tolerance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addConfigValidation</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad587ca24bb4f2d7be17325aabba07d1a</anchor>
      <arglist>(self, configValidationType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae62713ab8f6147c8929cf1b27a349e99</anchor>
      <arglist>(self, type)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectPathProjector</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a7a52b9e40bdaeb021b2ef59d7331c793</anchor>
      <arglist>(self, pathProjectorType, tolerance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectDistance</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad17047944198337a17f93ef9bcd716fa</anchor>
      <arglist>(self, distanceType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectSteeringMethod</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af7bf3d5a257c6532bb8c0b5638124277</anchor>
      <arglist>(self, steeringMethodType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepareSolveStepByStep</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ac123eb2915f066a1d2c479ff383276ed</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>executeOneStep</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5be076aab6039f0de62f56242c7780f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>finishSolveStepByStep</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>adfac6f43876896de8ca6b8e6dea6c19e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>solve</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a7710191801fdda1d5a0aaf9894f09cb7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>directPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1e209b4e45ef92039baf7ee38fd1a804</anchor>
      <arglist>(self, startConfig, endConfig, validate)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>appendDirectPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a01cd047858c313bfcdc346e38cc240fa</anchor>
      <arglist>(self, pathId, config, validate)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>concatenatePath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9cea574c0637b6d5d80d501250e68be3</anchor>
      <arglist>(self, startId, endId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extractPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a88657a95f6f7349b073a89ee382ea45d</anchor>
      <arglist>(self, pathId, start, end)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>erasePath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a90ec8c2bde5882ba527f954c9112128f</anchor>
      <arglist>(self, pathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>projectPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a287d7ef43b8b15ae45e682dcc1aabc5e</anchor>
      <arglist>(self, pathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberPaths</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa24ff5514a5bb8852aba043d0b4610dd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>optimizePath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af23a1482adff283c70568e5cab158066</anchor>
      <arglist>(self, inPathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>pathLength</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5c98a150c2aea925dc21c1dd177b0368</anchor>
      <arglist>(self, inPathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>configAtParam</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1bfbe82c72fd9178541f8162807b52e0</anchor>
      <arglist>(self, inPathId, param)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>derivativeAtParam</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af07c199ab36ca511def4dde31895b94a</anchor>
      <arglist>(self, inPathId, order, param)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getWaypoints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae5a746f6f9bd6c67b99cf3982e7438ac</anchor>
      <arglist>(self, pathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>interruptPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afe2bfa959ba1e08cfd3a0fc92da3dbb6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nodes</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab90e552e516cef81f1ac2e547c1fadd5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>node</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a38f633d951a0e9e0bb95290457f4e9cf</anchor>
      <arglist>(self, nodeId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberNodes</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a8476bea7c338d4448810437a96668b49</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberEdges</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af6d231ea73c49f4e844b512759f6438c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>edge</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1cfd3c56f73b69e5b394e5fd8a706fae</anchor>
      <arglist>(self, edgeId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberConnectedComponents</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a73408564650b64ac23519e0cf67e74d2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nodesConnectedComponent</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9c79601bb39fc67da3e59840e3e0b10d</anchor>
      <arglist>(self, ccId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getNearestConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9ecc9c2cc1c72da21ae02c79dd853ef1</anchor>
      <arglist>(self, randomConfig, connectedComponentId=-1)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addConfigToRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0e09a796d52aa8b8a29bbab1eb653c4b</anchor>
      <arglist>(self, config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addEdgeToRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a76bb97b6654cbf93d2c20da22a86f30e</anchor>
      <arglist>(self, config1, config2, pathId, bothEdges)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clearRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a43050e58ca306f5a70e9c5b7755b756d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>saveRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab03a4bc918fdbc35bc4444468a1d51eb</anchor>
      <arglist>(self, filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>readRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a012d6e7a614700973d4f70cbafd2c9a0</anchor>
      <arglist>(self, filename)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>client</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ada480a7c84a710759fc58396a8143f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hppcorba</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5b4580a954948ab9910246b1ffcc8830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>robot</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae0d2d24bdcf1194dc9d22a5646df170e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setInitialConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>abc4b2a5329b0461283a047ca231950b0</anchor>
      <arglist>(self, dofArray)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getInitialConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a10d5d714f2eb397608ac56c8e8ac4ddd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addGoalConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>adeb0ff77c475f7360ff7ff339b8ad288</anchor>
      <arglist>(self, dofArray)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getGoalConfigs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aef4c05c2e822e53961facf49145158f6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resetGoalConfigs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9fa5311f616b18a33f2963e5ba46d9c9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadObstacleFromUrdf</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a56f38b656d939336a4cacedabd521e4e</anchor>
      <arglist>(self, package, filename, prefix)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afeef665c9e692f279f3366074b72ae7a</anchor>
      <arglist>(self, objectName, jointName, collision, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>cutObstacle</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afdce1072332a721e362a0d65c8b2da44</anchor>
      <arglist>(self, objectName, aabb)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>moveObstacle</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a840c2a1a2a1924d441c4dadc01f4533d</anchor>
      <arglist>(self, objectName, cfg)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstaclePosition</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a34e355e88c88d007c9c8d3d3ebb0a282</anchor>
      <arglist>(self, objectName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstacleNames</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a65560e90dfc72b5daf9b6e408291763d</anchor>
      <arglist>(self, collision, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstacleLinkPosition</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a3e5ae971e75cc10562b8e28e8740eac9</anchor>
      <arglist>(self, objectName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObstacleLinkNames</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a71e62033789e1c2a5e4ebd3b3edcba11</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createOrientationConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>adf2d209a654cd515ec95777e78e77f98</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, p, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createTransformationConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae60e062b15ef9885f9c6902fa4977b55</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, ref, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createLockedJoint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae1a42b4e135b592e545fc4312662116b</anchor>
      <arglist>(self, lockedDofName, jointName, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createLockedExtraDof</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a68a1f729808792903ce999f06d19ffb5</anchor>
      <arglist>(self, lockedDofName, index, value)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createRelativeComConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a2c4d27e02da821eff78df32d9e2e3665</anchor>
      <arglist>(self, constraintName, comName, jointLName, point, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createComBeetweenFeet</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5b1ae4141aa3d225bf61a66a66a0caab</anchor>
      <arglist>(self, constraintName, comName, jointLName, jointRName, pointL, pointR, jointRefName, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addPartialCom</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afc5217ba7c8c1824c05a063c41ee42a3</anchor>
      <arglist>(self, comName, jointNames)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getPartialCom</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a4bdeac2172b45fcae3658cf93623442c</anchor>
      <arglist>(self, comName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createPositionConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9270628c34c92348822e5c28287115cc</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, point1, point2, mask)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createDistanceBetweenJointConstraint</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a69ae0891e4810d9dd0a3f1a10190c93e</anchor>
      <arglist>(self, constraintName, joint1Name, joint2Name, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createDistanceBetweenJointAndObjects</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0c6c347ea06123e40b481017357955e3</anchor>
      <arglist>(self, constraintName, joint1Name, objects, distance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resetConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a295ad87db7b4c15e87441cc06f6af555</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>resetConstraintMap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa665ba543c1b4730fb873de0b2213946</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addNumericalConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5f2a8da2bcc1b3e354cd6fe2ac37b89b</anchor>
      <arglist>(self, name, names, priorities=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addLockedJointConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae7dc14d16b30a550156869a35629530d</anchor>
      <arglist>(self, name, names)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSide</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae04fc60bf4406a025d728a77830c7102</anchor>
      <arglist>(self, rhs)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSideByName</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a207596f0e90668c6156ff596579bd6cc</anchor>
      <arglist>(self, constraintName, rhs)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSideFromConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a59495f7eed569ba9156b06e6e9d0a46a</anchor>
      <arglist>(self, config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRightHandSideFromConfigByName</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a26ef6b955836e56859887483807aac61</anchor>
      <arglist>(self, constraintName, config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>applyConstraints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab95c43b2d0195d687e172a57fc7f0903</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>optimize</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a300e10f083d1e9ab1d5391162a399f06</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>computeValueAndJacobian</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0997d3f8a68a74d86f5ae23858c92d92</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addPassiveDofs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af2c17bed72fcbe2bdfef11ec2c91d1d1</anchor>
      <arglist>(self, name, dofNames)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setConstantRightHandSide</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aae361f744d83165a8e95dc5fb463d4fd</anchor>
      <arglist>(self, constraintName, constant)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getConstantRightHandSide</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ace075c5c70b66cad129be05adb67f57d</anchor>
      <arglist>(self, constraintName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>generateValidConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a295be2a6d0131cb66e88b55e580c78e9</anchor>
      <arglist>(self, maxIter)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getErrorThreshold</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5ccc87a53d9b915b757523fc5948df36</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setErrorThreshold</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a440198f8cf27a5feac3d016c4ec0e231</anchor>
      <arglist>(self, threshold)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setDefaultLineSearchType</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1bcd681cd43946bc6be131694f754741</anchor>
      <arglist>(self, type)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMaxIterPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad9733f9ac4f1ddf53713c0fee432bec8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setMaxIterPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa23d8c10ced3b087ae825152a4dbff20</anchor>
      <arglist>(self, iterations)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getTimeOutPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af94004859c6ee4fcd4e8d54ecde32301</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setTimeOutPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a65c3114b36c08ac77f7431796abb0508</anchor>
      <arglist>(self, timeOut)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMaxIterProjection</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a67186fc3f763cc169f4232e7ced3d214</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setMaxIterProjection</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a910b7c3d279b174d6ef77f1e945604ee</anchor>
      <arglist>(self, iterations)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>filterCollisionPairs</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9fac75713bc3184bc35e3a741aef6be3</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectPathPlanner</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a78564183ae1a63b625deaa9b645e2f6f</anchor>
      <arglist>(self, pathPlannerType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5e9e57b8539021e6e717addbf50ebae4</anchor>
      <arglist>(self, configurationShooterType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addPathOptimizer</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa05401727fe3267d4daf43df9906f530</anchor>
      <arglist>(self, pathOptimizerType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clearPathOptimizers</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a13b83d9f98aa25d7963f4bbd4542d89b</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectPathValidation</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a494f7094937bfa3330370d8cd1930f24</anchor>
      <arglist>(self, pathValidationType, tolerance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addConfigValidation</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad587ca24bb4f2d7be17325aabba07d1a</anchor>
      <arglist>(self, configValidationType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectConfigurationShooter</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae62713ab8f6147c8929cf1b27a349e99</anchor>
      <arglist>(self, type)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectPathProjector</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a7a52b9e40bdaeb021b2ef59d7331c793</anchor>
      <arglist>(self, pathProjectorType, tolerance)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectDistance</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ad17047944198337a17f93ef9bcd716fa</anchor>
      <arglist>(self, distanceType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>selectSteeringMethod</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af7bf3d5a257c6532bb8c0b5638124277</anchor>
      <arglist>(self, steeringMethodType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>prepareSolveStepByStep</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ac123eb2915f066a1d2c479ff383276ed</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>executeOneStep</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5be076aab6039f0de62f56242c7780f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>finishSolveStepByStep</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>adfac6f43876896de8ca6b8e6dea6c19e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>solve</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a7710191801fdda1d5a0aaf9894f09cb7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>directPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1e209b4e45ef92039baf7ee38fd1a804</anchor>
      <arglist>(self, startConfig, endConfig, validate)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>appendDirectPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a01cd047858c313bfcdc346e38cc240fa</anchor>
      <arglist>(self, pathId, config, validate)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>concatenatePath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9cea574c0637b6d5d80d501250e68be3</anchor>
      <arglist>(self, startId, endId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>extractPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a88657a95f6f7349b073a89ee382ea45d</anchor>
      <arglist>(self, pathId, start, end)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>erasePath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a90ec8c2bde5882ba527f954c9112128f</anchor>
      <arglist>(self, pathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>projectPath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a287d7ef43b8b15ae45e682dcc1aabc5e</anchor>
      <arglist>(self, pathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberPaths</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>aa24ff5514a5bb8852aba043d0b4610dd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>optimizePath</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af23a1482adff283c70568e5cab158066</anchor>
      <arglist>(self, inPathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>pathLength</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a5c98a150c2aea925dc21c1dd177b0368</anchor>
      <arglist>(self, inPathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>configAtParam</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1bfbe82c72fd9178541f8162807b52e0</anchor>
      <arglist>(self, inPathId, param)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>derivativeAtParam</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af07c199ab36ca511def4dde31895b94a</anchor>
      <arglist>(self, inPathId, order, param)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getWaypoints</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ae5a746f6f9bd6c67b99cf3982e7438ac</anchor>
      <arglist>(self, pathId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>interruptPathPlanning</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>afe2bfa959ba1e08cfd3a0fc92da3dbb6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nodes</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab90e552e516cef81f1ac2e547c1fadd5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>node</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a38f633d951a0e9e0bb95290457f4e9cf</anchor>
      <arglist>(self, nodeId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberNodes</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a8476bea7c338d4448810437a96668b49</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberEdges</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>af6d231ea73c49f4e844b512759f6438c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>edge</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a1cfd3c56f73b69e5b394e5fd8a706fae</anchor>
      <arglist>(self, edgeId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>numberConnectedComponents</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a73408564650b64ac23519e0cf67e74d2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>nodesConnectedComponent</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9c79601bb39fc67da3e59840e3e0b10d</anchor>
      <arglist>(self, ccId)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getNearestConfig</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a9ecc9c2cc1c72da21ae02c79dd853ef1</anchor>
      <arglist>(self, randomConfig, connectedComponentId=-1)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addConfigToRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a0e09a796d52aa8b8a29bbab1eb653c4b</anchor>
      <arglist>(self, config)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>addEdgeToRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a76bb97b6654cbf93d2c20da22a86f30e</anchor>
      <arglist>(self, config1, config2, pathId, bothEdges)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>clearRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a43050e58ca306f5a70e9c5b7755b756d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>saveRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>ab03a4bc918fdbc35bc4444468a1d51eb</anchor>
      <arglist>(self, filename)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>readRoadmap</name>
      <anchorfile>a00044.html</anchorfile>
      <anchor>a012d6e7a614700973d4f70cbafd2c9a0</anchor>
      <arglist>(self, filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::ProblemSolverMap</name>
    <filename>a00045.html</filename>
    <member kind="typedef">
      <type>std::map&lt; std::string, core::ProblemSolverPtr_t &gt;</type>
      <name>ProblemMap_t</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>ad65ff584a2ad3ed6856a3dd60b7c59a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ProblemMap_t &gt;</type>
      <name>ProblemMapPtr_t</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a8c14b0c1f66486ca8f01881eb2744207</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::mutex</type>
      <name>mutex_t</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a895f272b1513707ea135d272e21b4314</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; mutex_t &gt;</type>
      <name>mutexPtr_t</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a66d3e787734e3af8c93d7701c0f84364</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProblemSolverMap</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a38f8e01dba475c8d9edd628a64b79c5d</anchor>
      <arglist>(core::ProblemSolverPtr_t init, const std::string &amp;name=&quot;default&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProblemSolverMap</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>ad70c59b719befe28d6f1f3205884747b</anchor>
      <arglist>(const ProblemSolverMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>core::ProblemSolverPtr_t</type>
      <name>operator-&gt;</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a34bcd25b6308f0481ecfee5ccb91f225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator core::ProblemSolverPtr_t</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a2f5763e078e3bb5f8a5021427587e371</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core::ProblemSolverPtr_t</type>
      <name>selected</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a71d553548cab076fe3eb360164017d86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>core::ProblemSolverPtr_t</type>
      <name>get</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a4d76b57558e368ab9f253f70c0bc6ddc</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selected</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a14fe5a957192ed2f6de0ebd37cdc5894</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a248d088a899546dcec656935bd50da0f</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a84ab585ad616b02cc190d75eb8510306</anchor>
      <arglist>(const std::string &amp;name, core::ProblemSolverPtr_t ps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a487ea3b2872c16cbdcc9548e59e7131a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceSelected</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a1e4e71e459a57f0abec65fbd14059863</anchor>
      <arglist>(core::ProblemSolverPtr_t ps)</arglist>
    </member>
    <member kind="function">
      <type>ReturnType</type>
      <name>keys</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a8b39a09798d4eb041dad583c0d668047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>selectedName</name>
      <anchorfile>a00045.html</anchorfile>
      <anchor>a17c8ed369c9183bc06c06dfc7aec7f52</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::quaternion::Quaternion</name>
    <filename>a00046.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a2ce753ed957642f4d6a852ba6983aac1</anchor>
      <arglist>(self, args)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aad7c089e62ac8e5cfdaff863a84bd1db</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__neg__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a3f51f5e3ceda146f5e035e6257e7682f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__add__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a5900c582cff9c747a8489982a686a79e</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__sub__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa75d9c21b5376a0acbdfb5a0a95aa314</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__mul__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa8b17b7bb7053dbb8402406d0a70b2e6</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__rmul__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a74d0d701c3591c131aef822d0ef03c5f</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>transform</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a57d23670eb52caad648350893c648e6d</anchor>
      <arglist>(self, v)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__abs__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a0a2117707f2f904091593aa05d3b365e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>conjugate</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a7c65add11565285dfc49aad7846e8845</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>inv</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a6c0b38b29c321506b495c0d298aec3f6</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__div__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a1cebfe92cca03e87d769e82b8586066c</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__pow__</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a015d0f07f676265d657ee0b594456567</anchor>
      <arglist>(self, n)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>normalize</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a2b9c97a3335bafe7d4639ceadb2cc4d7</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>normalized</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a6f67782f39905454d4f7f448069100c8</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>toRotationMatrix</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a97704a44f2222dda00394edbe885d695</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>toRotationVector</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a18d7aa4d31be9c33b8868957eeab46b1</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>copy</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa8e68703ce6f7ee6a7e783319a091a98</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>toRPY</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a4aa26f67a62ed53dd23e78671f2e6aaf</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fromRPY</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a080261346f7c102cbc12251dc74e65a3</anchor>
      <arglist>(self, R, P, Y)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>toTuple</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>ad9797c95eeca8134d183890fdf5f0e5a</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fromTwoVector</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a2b434a6b60da8913a0d93edb52ab58a5</anchor>
      <arglist>(self, a, b)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>fromAngleAxis</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>aa20f17758c42f6893e14ffb468b70952</anchor>
      <arglist>(self, axis, angle, degree=False)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>array</name>
      <anchorfile>a00046.html</anchorfile>
      <anchor>a5621d787386f6a63bbbd486752528417</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaserver::robot::Robot</name>
    <filename>a00047.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>abeeb9407e7f89c0aa91dd00eb9c648f7</anchor>
      <arglist>(self, robotName=None, rootJointType=None, load=True, client=None, hppcorbaClient=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>rebuildRanks</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a745d6034cecf9fb68e7d380f49899737</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadModel</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac80eeb15cbd9003e552c2a0637a59c7e</anchor>
      <arglist>(self, robotName, rootJointType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>urdfPath</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aa33fe9eb343752d369b42fd2de2d251f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getConfigSize</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a9e1706f1ea81ed82111ccbae61fd7a78</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getNumberDof</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a42f9f2864dce4d34476156a42ebae65c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a613c66f42fe20732ac745dc4ea772f13</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointTypes</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>adc6f6e4041feb961f8094a33257a3d32</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getAllJointNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a4d8082482b6ae2eb7b352a3cff3fd1e9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a9ba5e5351f71af165bf3e4b288ce15b2</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getRootJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2e65568768afd735a5307f97ad45f6c2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRootJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a29f774a3615e5b76b78266810a0e51e2</anchor>
      <arglist>(self, position)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac9d4f53a1cbf6f17365e1f70def2ca8e</anchor>
      <arglist>(self, jointName, position)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCurrentTransformation</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a44dd7262b2bdb2af44eb66ef6896b07d</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointNumberDof</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aa9a0fef1b263d494450ebf15ed2844f6</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointConfigSize</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2f1f5af20d41d6523a2cd5ed31da4627</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setJointBounds</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a12062a3b5f90fc3910fb5f9d39af97ad</anchor>
      <arglist>(self, jointName, inJointBound)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointBounds</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2e7bef36e8a087cbbf9826a01a866c1a</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getSaturated</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a90854dbe557af884e5b946fed32db72d</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getLinkPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a8026e370131be43289d170011c549476</anchor>
      <arglist>(self, linkName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getLinkNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>af148147abebb0ec54952954809ca079b</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setCurrentConfig</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a5cfd8e152ca8e3e3bd72624121151334</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCurrentConfig</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a216106b613fa8e77417473d7e0b14917</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setCurrentVelocity</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>acef3feaa3e525bacf44699f193f40bd7</anchor>
      <arglist>(self, v)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCurrentVelocity</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aa34a72da64ef77566b8a4e2a2a357d15</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>shootRandomConfig</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a94fe77e552e064a0cfdc569b3f3dad0e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointInnerObjects</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a80deca7f8b0615e96f850b9a470296e7</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointOuterObjects</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a642cde83155b5339debeb4418ffcb5fb</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObjectPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7c169d70d64c1e9eb1499525efad3bfa</anchor>
      <arglist>(self, objectName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a5baef5d410a4093be301291ff3d104fa</anchor>
      <arglist>(self, objectName, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>isConfigValid</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>adcf6c2cb758fc17711ff20aefa26a4af</anchor>
      <arglist>(self, cfg)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>distancesToCollision</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2b63a212975d214db22e9595b8379783</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getRobotAABB</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab204d23ead2209acd22305405e99ef59</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMass</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a095f911237c63cf2ebb43698e6b8ce3f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCenterOfMass</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab93e595268b2942e2594ac0d84bda6f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJacobianCenterOfMass</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac40d6a0f4c10c0019f4c3f200693e07d</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>client</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a59cde072076431c1c3597dc42cda24bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>hppcorba</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac382f6c85b6ec407ee99b96a4456ca0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>name</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ada3aca22d6c01a8390b7349c6f9feb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rootJointType</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a44c94e2cba68ce8d51cce58b4d1ef23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>displayName</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a95d52ed40ad65cadf1cfb4731ec7bba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>jointNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a4988a7ae2613eae3eaa3b39ccf19782e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>allJointNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab15245a22a4bbe52616c9468c17538cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rankInConfiguration</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>af421b366442d5073e672a89c1ef1c93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>rankInVelocity</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a4f8fdde52ef35b29044706f04630d84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getConfigSize</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a9e1706f1ea81ed82111ccbae61fd7a78</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getNumberDof</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a42f9f2864dce4d34476156a42ebae65c</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a613c66f42fe20732ac745dc4ea772f13</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointTypes</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>adc6f6e4041feb961f8094a33257a3d32</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getAllJointNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a4d8082482b6ae2eb7b352a3cff3fd1e9</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a9ba5e5351f71af165bf3e4b288ce15b2</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getRootJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2e65568768afd735a5307f97ad45f6c2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setRootJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a29f774a3615e5b76b78266810a0e51e2</anchor>
      <arglist>(self, position)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setJointPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac9d4f53a1cbf6f17365e1f70def2ca8e</anchor>
      <arglist>(self, jointName, position)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCurrentTransformation</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a44dd7262b2bdb2af44eb66ef6896b07d</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointNumberDof</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aa9a0fef1b263d494450ebf15ed2844f6</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointConfigSize</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2f1f5af20d41d6523a2cd5ed31da4627</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setJointBounds</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a12062a3b5f90fc3910fb5f9d39af97ad</anchor>
      <arglist>(self, jointName, inJointBound)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointBounds</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2e7bef36e8a087cbbf9826a01a866c1a</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getSaturated</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a90854dbe557af884e5b946fed32db72d</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getLinkPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a8026e370131be43289d170011c549476</anchor>
      <arglist>(self, linkName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getLinkNames</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>af148147abebb0ec54952954809ca079b</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setCurrentConfig</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a5cfd8e152ca8e3e3bd72624121151334</anchor>
      <arglist>(self, q)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCurrentConfig</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a216106b613fa8e77417473d7e0b14917</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>setCurrentVelocity</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>acef3feaa3e525bacf44699f193f40bd7</anchor>
      <arglist>(self, v)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCurrentVelocity</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>aa34a72da64ef77566b8a4e2a2a357d15</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>shootRandomConfig</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a94fe77e552e064a0cfdc569b3f3dad0e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointInnerObjects</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a80deca7f8b0615e96f850b9a470296e7</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJointOuterObjects</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a642cde83155b5339debeb4418ffcb5fb</anchor>
      <arglist>(self, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getObjectPosition</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a7c169d70d64c1e9eb1499525efad3bfa</anchor>
      <arglist>(self, objectName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a5baef5d410a4093be301291ff3d104fa</anchor>
      <arglist>(self, objectName, jointName)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>isConfigValid</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>adcf6c2cb758fc17711ff20aefa26a4af</anchor>
      <arglist>(self, cfg)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>distancesToCollision</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a2b63a212975d214db22e9595b8379783</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getRobotAABB</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab204d23ead2209acd22305405e99ef59</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getMass</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>a095f911237c63cf2ebb43698e6b8ce3f</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getCenterOfMass</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ab93e595268b2942e2594ac0d84bda6f5</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>getJacobianCenterOfMass</name>
      <anchorfile>a00047.html</anchorfile>
      <anchor>ac40d6a0f4c10c0019f4c3f200693e07d</anchor>
      <arglist>(self)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::impl::Robot</name>
    <filename>a00048.html</filename>
    <member kind="function">
      <type></type>
      <name>Robot</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a14b720a4da1a9d06b7d6d3b422fdb63d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServer</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ad2bd8cea0ac32f38b679074cf84ade2f</anchor>
      <arglist>(ServerPlugin *server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createRobot</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a82a7e3675cab7d15cd7f104598ec7a0a</anchor>
      <arglist>(const char *robotName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a8160d26e3d8112d42915d5ba4d4cdc60</anchor>
      <arglist>(const char *robotName, const char *rootJointType, const char *packageName, const char *modelName, const char *urdfSuffix, const char *srdfSuffix)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadHumanoidModel</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a94dee483f85af75c856ea933d82ee250</anchor>
      <arglist>(const char *robotName, const char *rootJointType, const char *packageName, const char *modelName, const char *urdfSuffix, const char *srdfSuffix)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadRobotModelFromString</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a3d820e9eabb09bed68eec77f2dfa887a</anchor>
      <arglist>(const char *robotName, const char *rootJointType, const char *urdfString, const char *srdfString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadHumanoidModelFromString</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ac87d9fb64e1bd3b913185709eab20edd</anchor>
      <arglist>(const char *robotName, const char *rootJointType, const char *urdfString, const char *srdfString)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>getRobotName</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a15bf8ab1c0f2c4710a4a90bb2da8b4e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>getConfigSize</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a129c89b60d26f414c299402c45b8c72a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>getNumberDof</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a87c3d73b246190ad12f63e9bccc6d559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>appendJoint</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a8400619559a28b663f5e57a9f7cd09c8</anchor>
      <arglist>(const char *parentName, const char *jointName, const char *jointType, const Transform_ pos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getJointNames</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a67068531934ead860217a6dabda7d0b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getJointTypes</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a1ca03bc71a34687ab99814ec6606ff75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getAllJointNames</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a360bab0011fbb41039b24a29dca2cb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getChildJointNames</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a00f040746714b3149a577fa6bc8ee810</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>getParentJointName</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a47be6dc0139ab1370842bd7bcf663244</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getJointConfig</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ada84b7af9524d915a06bb3b72875eca6</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJointConfig</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aa7f39f2311ef8bed24b1e4868a8fa42d</anchor>
      <arglist>(const char *jointName, const floatSeq &amp;cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char *</type>
      <name>getJointType</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ae8316d2d267406536bca396a5a4cce5a</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual floatSeq *</type>
      <name>jointIntegrate</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>afc1752bb3765df2b377614786c446fdd</anchor>
      <arglist>(const floatSeq &amp;jointCfg, const char *jointName, const floatSeq &amp;dq, bool saturate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>getCurrentTransformation</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>afe114b8a15bdf3b35925c2af0e87cb2c</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transform__slice *</type>
      <name>getJointPositionInParentFrame</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>af35dcf200e01e6b97a9b46e9e4915efc</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transform__slice *</type>
      <name>getJointPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>af91745197de06dacefe0cfa445c845be</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TransformSeq *</type>
      <name>getJointsPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a535d37ba9653da8d0340612de982981c</anchor>
      <arglist>(const floatSeq &amp;q, const Names_t &amp;jointNames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual floatSeq *</type>
      <name>getJointVelocity</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a6012226304818cc14907f460ebb363a6</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual floatSeq *</type>
      <name>getJointVelocityInLocalFrame</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a8aa07defcf593bf710fa7681f9d42ab7</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transform__slice *</type>
      <name>getRootJointPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a29cf716dcff25a3749b13c97bc509704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRootJointPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aacd791edf9221e80c9c5c2bbd919e524</anchor>
      <arglist>(const Transform_ position)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJointPositionInParentFrame</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a27b288c0bcb96a981454209ce3eb0488</anchor>
      <arglist>(const char *jointName, const Transform_ position)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>getJointNumberDof</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a49b2bd826fb13323eb857a4b11c90673</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Long</type>
      <name>getJointConfigSize</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aa613bbe22b325327dc0ddecd2032899b</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getJointBounds</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a0004038735c844349dd8cdcbb5736501</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJointBounds</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a7904b3f212786d5bfb114e311a78151e</anchor>
      <arglist>(const char *jointName, const hpp::floatSeq &amp;jointBound)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Transform__slice *</type>
      <name>getLinkPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a07f31f892bd6d59275ff1049fd3ad256</anchor>
      <arglist>(const char *linkName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TransformSeq *</type>
      <name>getLinksPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ae4765f523a1a795d97c9f1f61e9e3944</anchor>
      <arglist>(const floatSeq &amp;q, const Names_t &amp;linkName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getLinkNames</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ac08f669734cb37aa6d77497d6b886ea2</anchor>
      <arglist>(const char *jointName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDimensionExtraConfigSpace</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a7b5d000845d851d3f97ea1b763135c68</anchor>
      <arglist>(ULong dimension)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>getDimensionExtraConfigSpace</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ab50f53556a693120fd3b5f26ffe24bc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setExtraConfigSpaceBounds</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a027003b25a54f6e9616e8cdb1f29bc29</anchor>
      <arglist>(const hpp::floatSeq &amp;bounds)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentConfig</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a25e85281f939f98a61858092be4b01db</anchor>
      <arglist>(const hpp::floatSeq &amp;dofArray)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>shootRandomConfig</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a87143d00790d1cf52c70057812197101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getCurrentConfig</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ad51916ed882e754e2cc8a67ab5989b17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentVelocity</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a05a02a07c5688e53b1b0da998bb31122</anchor>
      <arglist>(const hpp::floatSeq &amp;qDot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getCurrentVelocity</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a9ad8df16bbd40b7fc807e041f5d7583e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getJointInnerObjects</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a01fb6232666a3234ecd8fefa05fe23ca</anchor>
      <arglist>(const char *bodyName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Names_t *</type>
      <name>getJointOuterObjects</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a507e6e9951abcc351f9f82679ba3cd4e</anchor>
      <arglist>(const char *bodyName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getObjectPosition</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a0c6a36183068bf0bc69b917d8d275762</anchor>
      <arglist>(const char *objectName, Transform_ cfg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>isConfigValid</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a2263aebab7727a46a611b3eed23c25ac</anchor>
      <arglist>(const hpp::floatSeq &amp;dofArray, Boolean &amp;validity, CORBA::String_out report)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>distancesToCollision</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a5cc74ae14c66325c3334ae716491c8d5</anchor>
      <arglist>(hpp::floatSeq_out distances, Names_t_out innerObjects, Names_t_out outerObjects, hpp::floatSeqSeq_out innerPoints, hpp::floatSeqSeq_out outerPoints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>autocollisionCheck</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aa260a25c118c1fa7aeb7ea21b85334ab</anchor>
      <arglist>(hpp::boolSeq_out collide)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>autocollisionPairs</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a83ebf1f366cfdf7020067b19883f0f1d</anchor>
      <arglist>(Names_t_out innerObjects, Names_t_out outerObjects, boolSeq_out active)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAutoCollision</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a1634db2ce9f709d50de85b4e061968f3</anchor>
      <arglist>(const char *innerObject, const char *outerObject, bool active)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Double</type>
      <name>getMass</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a5bd0222def85a5ffb7cd52535234ff2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getCenterOfMass</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aace9e0de02e545b0665028c53560d6cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getCenterOfMassVelocity</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ad31683b447698a0f283598aa2346d596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>getJacobianCenterOfMass</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a2d581dbe67e95407cf9eeed489bd9818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>af1184de5eea0db85b7c708b307a6892c</anchor>
      <arglist>(const char *polyhedronName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createBox</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a91b694c4845b6e680ef7edf91e46298f</anchor>
      <arglist>(const char *name, Double x, Double y, Double z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createSphere</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>afe663d6ecc3e60272cac9b946b72fa5a</anchor>
      <arglist>(const char *name, Double radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createCylinder</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>af8eb2760303c4585c48cbf24a522560c</anchor>
      <arglist>(const char *name, Double radius, Double length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>addPoint</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aa36d21919badd62f5afb81bbb90f5a5e</anchor>
      <arglist>(const char *polyhedronName, Double x, Double y, Double z)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ULong</type>
      <name>addTriangle</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>afe6739a4d2504e97d56b792b981162e9</anchor>
      <arglist>(const char *polyhedronName, ULong pt1, ULong pt2, ULong pt3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addObjectToJoint</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a0dae9fe236df56f9599168b7cca7283a</anchor>
      <arglist>(const char *jointName, const char *objectName, const Transform_ config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPartialCom</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a1bd732a2977c75c3126d5ca1b3d9064d</anchor>
      <arglist>(const char *comName, const Names_t &amp;jointNames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getPartialCom</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>ab8c32e4ece997575c707e3d04fdaad86</anchor>
      <arglist>(const char *comName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeqSeq *</type>
      <name>getJacobianPartialCom</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a6241d512232584801448c1d405fa5df2</anchor>
      <arglist>(const char *comName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hpp::floatSeq *</type>
      <name>getVelocityPartialCom</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>a0dac56391a38f36c9e052a2a8fd50f97</anchor>
      <arglist>(const char *comName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual floatSeq *</type>
      <name>getRobotAABB</name>
      <anchorfile>a00048.html</anchorfile>
      <anchor>aff89812c06f7b3949fe5efc5ea902c19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::corbaserver::Robot</name>
    <filename>a00049.html</filename>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a47ee94ac0201255577a8cd4198ad51e4</anchor>
      <arglist>(in string robotName, in string rootJointType, in string packageName, in string modelName, in string urdfSuffix, in string srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadHumanoidModel</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aad0189e058aaf90cdc7cb93a904785da</anchor>
      <arglist>(in string robotName, in string rootJointType, in string packageName, in string modelName, in string urdfSuffix, in string srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModelFromString</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af28fd06b30fc679eabc2d09dff14153c</anchor>
      <arglist>(in string robotName, in string rootJointType, in string urdfString, in string srdfString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadHumanoidModelFromString</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a3d44b3101498aba6a6b4264c753d3671</anchor>
      <arglist>(in string robotName, in string rootJointType, in string urdfString, in string srdfString)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getConfigSize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a1254019153e661f9367aae734050928e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getNumberDof</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2ce936384ba836d3e527d17ad4b4fe20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointNames</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2175b13bd06ca7c7019661201d508fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointTypes</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae19b801dc10a2bb1f0cac9fc3f6eb5fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getAllJointNames</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a72422377cb5004c19195140dc25a29a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getParentJointName</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a7b7fd31730599bc36fa38e50f8726120</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a1f184b4385c41c7c36909d7bddf7f15e</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2d20bccb4e0fc65cc44ba5eff2164dce</anchor>
      <arglist>(in string jointName, in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getJointType</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a8721d79eceaa7d480ef639c874d78e3b</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>jointIntegrate</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aeb240790580a25302e0cd13310486400</anchor>
      <arglist>(in floatSeq jointCfg, in string jointName, in floatSeq speed, in boolean saturate)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getCurrentTransformation</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5d4e703681bdcb471734e6fdef83fba9</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getJointPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a89fb85dfb34d26ae873779003ee5792c</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>TransformSeq</type>
      <name>getJointsPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a9890a62b19266a04d8053b900b82d349</anchor>
      <arglist>(in floatSeq q, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a32c9ed36941ea03b6ea3417b627a550f</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointVelocityInLocalFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ac7be48ce143ff40c8c793e84cdbfeec8</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getJointPositionInParentFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa6e824249905c48130f1ac5bdd2b6ead</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getRootJointPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae1c1756ec547fdc9667d26128105b1b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootJointPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a37c3370bc553f213277090284c4973ff</anchor>
      <arglist>(in Transform_ position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointPositionInParentFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae7430960667c7f88394b567a3851ede1</anchor>
      <arglist>(in string jointName, in Transform_ position)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getJointNumberDof</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a41e824cf5b221781c90d142768279d01</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getJointConfigSize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4d77dcb171e73f0e047fc52dfdd9c708</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointBounds</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a45b9c7325c17a9280e6a130781ca8ecd</anchor>
      <arglist>(in string jointName, in floatSeq inJointBound)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointBounds</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a42de41c5610db968905be6c62dcef1fd</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getLinkPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a7f14bbabc0d1a325455a52ac524c751e</anchor>
      <arglist>(in string linkName)</arglist>
    </member>
    <member kind="function">
      <type>TransformSeq</type>
      <name>getLinksPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ad6d665926628d47eeccbba60c34bcee8</anchor>
      <arglist>(in floatSeq q, in Names_t linkName)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getLinkNames</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aeaa1b812956536366d34170acb8e3df8</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDimensionExtraConfigSpace</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aee2916bfe7057c1f167f983427f255fb</anchor>
      <arglist>(in unsigned long dimension)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getDimensionExtraConfigSpace</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a85a67aad1ceffa24277f44d0e8f8be1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraConfigSpaceBounds</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a9d2b7da0c8ab86f3c57aafaa3ceb7c13</anchor>
      <arglist>(in floatSeq bounds)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCurrentConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a51af08d1897ad80ada5802503f99ea3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>shootRandomConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ab1e1be59fe2dbb832a40104429d215a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a3a225356a57a260b8dd61d8e04841321</anchor>
      <arglist>(in floatSeq dofArray)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCurrentVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a1f8f3a1d70fe499fe7a1f31b19da10fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>afc18f7c55dce7374448b4193c47512ff</anchor>
      <arglist>(in floatSeq qDot)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointInnerObjects</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a3ac3432298677004b24c4fa7a951033c</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointOuterObjects</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a74a8365693a4b11f49f6603b09b1b776</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getObjectPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6e770ed96c1910868b2583b40cf72f84</anchor>
      <arglist>(in string objectName, out Transform_ cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isConfigValid</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a50e645e15e0b0dae778a5c53b8788489</anchor>
      <arglist>(in floatSeq dofArray, out boolean validity, out string report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>distancesToCollision</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a8374fd108a5c1bb34e0c88e0dd851b5a</anchor>
      <arglist>(out floatSeq distances, out Names_t innerObjects, out Names_t outerObjects, out floatSeqSeq innerPoints, out floatSeqSeq outerPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autocollisionCheck</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a002df1a96bc679300bd00a86a8cd713e</anchor>
      <arglist>(out boolSeq collide)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autocollisionPairs</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4a8a7f2a967fa2876de48f72e125f153</anchor>
      <arglist>(out Names_t innerObjects, out Names_t outerObjects, out boolSeq active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoCollision</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aec337c38488b98bdf0941cc99a4cabc2</anchor>
      <arglist>(in string innerObject, in string outerObject, in boolean active)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getRobotAABB</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>acd7f5d8df2fcd34f3d808290933f6f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6b8a169f53390424c5b5d9cd3745dc77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCenterOfMass</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abcd46258b2861d6c156e7479f217ee05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCenterOfMassVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa175731392022c2acc28d3cdd201710e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getJacobianCenterOfMass</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa33a7372209f5f7d664dafe457b646a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa8f1daf2d48dde6caed904ab981de91e</anchor>
      <arglist>(in string comName, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abab711296779db939e50fc9f3ccfc6fd</anchor>
      <arglist>(in string comName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getJacobianPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ac7799eee4975eb40b283566569c082ec</anchor>
      <arglist>(in string comName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getVelocityPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5ccf07f35b5bee17506c3c708fb8b0a7</anchor>
      <arglist>(in string comName)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getRobotName</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ab521acd91f20e37257d65795bd2ed97c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createRobot</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ad622f53735ba4f3e89009b61f8b725d4</anchor>
      <arglist>(in string robotName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendJoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4001c775726b8c9f2d800ebdfc7a25f8</anchor>
      <arglist>(in string parentJoint, in string jointName, in string jointType, in Transform_ pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6d7f3f52919d32071b47dbed6704aa1d</anchor>
      <arglist>(in string inPolyName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBox</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a60af794c6ca4ab2b5a59f55a6dcfbe3a</anchor>
      <arglist>(in string name, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createSphere</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abf6520a7a85c1204133e93418d9a7b2c</anchor>
      <arglist>(in string name, in double radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createCylinder</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a19198ec4811497d3eef6373f8481caeb</anchor>
      <arglist>(in string name, in double radius, in double length)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addPoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aca68775eea554935fe3e20fc87c087c9</anchor>
      <arglist>(in string inPolyName, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addTriangle</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>afdfba0379689491131ece29a4ac30f6d</anchor>
      <arglist>(in string inPolyName, in unsigned long pt1, in unsigned long pt2, in unsigned long pt3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addObjectToJoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aaeee5c56e82f07c01ff10368b0077788</anchor>
      <arglist>(in string jointName, in string objectName, in Transform_ pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModel</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a47ee94ac0201255577a8cd4198ad51e4</anchor>
      <arglist>(in string robotName, in string rootJointType, in string packageName, in string modelName, in string urdfSuffix, in string srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadHumanoidModel</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aad0189e058aaf90cdc7cb93a904785da</anchor>
      <arglist>(in string robotName, in string rootJointType, in string packageName, in string modelName, in string urdfSuffix, in string srdfSuffix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadRobotModelFromString</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>af28fd06b30fc679eabc2d09dff14153c</anchor>
      <arglist>(in string robotName, in string rootJointType, in string urdfString, in string srdfString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadHumanoidModelFromString</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a3d44b3101498aba6a6b4264c753d3671</anchor>
      <arglist>(in string robotName, in string rootJointType, in string urdfString, in string srdfString)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getConfigSize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a1254019153e661f9367aae734050928e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getNumberDof</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2ce936384ba836d3e527d17ad4b4fe20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointNames</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2175b13bd06ca7c7019661201d508fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointTypes</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae19b801dc10a2bb1f0cac9fc3f6eb5fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getAllJointNames</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a72422377cb5004c19195140dc25a29a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getParentJointName</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a7b7fd31730599bc36fa38e50f8726120</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a1f184b4385c41c7c36909d7bddf7f15e</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a2d20bccb4e0fc65cc44ba5eff2164dce</anchor>
      <arglist>(in string jointName, in floatSeq config)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getJointType</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a8721d79eceaa7d480ef639c874d78e3b</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>jointIntegrate</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aeb240790580a25302e0cd13310486400</anchor>
      <arglist>(in floatSeq jointCfg, in string jointName, in floatSeq speed, in boolean saturate)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getCurrentTransformation</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5d4e703681bdcb471734e6fdef83fba9</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getJointPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a89fb85dfb34d26ae873779003ee5792c</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>TransformSeq</type>
      <name>getJointsPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a9890a62b19266a04d8053b900b82d349</anchor>
      <arglist>(in floatSeq q, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a32c9ed36941ea03b6ea3417b627a550f</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointVelocityInLocalFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ac7be48ce143ff40c8c793e84cdbfeec8</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getJointPositionInParentFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa6e824249905c48130f1ac5bdd2b6ead</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getRootJointPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae1c1756ec547fdc9667d26128105b1b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootJointPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a37c3370bc553f213277090284c4973ff</anchor>
      <arglist>(in Transform_ position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointPositionInParentFrame</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ae7430960667c7f88394b567a3851ede1</anchor>
      <arglist>(in string jointName, in Transform_ position)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getJointNumberDof</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a41e824cf5b221781c90d142768279d01</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getJointConfigSize</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4d77dcb171e73f0e047fc52dfdd9c708</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointBounds</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a45b9c7325c17a9280e6a130781ca8ecd</anchor>
      <arglist>(in string jointName, in floatSeq inJointBound)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getJointBounds</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a42de41c5610db968905be6c62dcef1fd</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Transform_</type>
      <name>getLinkPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a7f14bbabc0d1a325455a52ac524c751e</anchor>
      <arglist>(in string linkName)</arglist>
    </member>
    <member kind="function">
      <type>TransformSeq</type>
      <name>getLinksPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ad6d665926628d47eeccbba60c34bcee8</anchor>
      <arglist>(in floatSeq q, in Names_t linkName)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getLinkNames</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aeaa1b812956536366d34170acb8e3df8</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDimensionExtraConfigSpace</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aee2916bfe7057c1f167f983427f255fb</anchor>
      <arglist>(in unsigned long dimension)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>getDimensionExtraConfigSpace</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a85a67aad1ceffa24277f44d0e8f8be1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraConfigSpaceBounds</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a9d2b7da0c8ab86f3c57aafaa3ceb7c13</anchor>
      <arglist>(in floatSeq bounds)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCurrentConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a51af08d1897ad80ada5802503f99ea3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>shootRandomConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ab1e1be59fe2dbb832a40104429d215a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentConfig</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a3a225356a57a260b8dd61d8e04841321</anchor>
      <arglist>(in floatSeq dofArray)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCurrentVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a1f8f3a1d70fe499fe7a1f31b19da10fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>afc18f7c55dce7374448b4193c47512ff</anchor>
      <arglist>(in floatSeq qDot)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointInnerObjects</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a3ac3432298677004b24c4fa7a951033c</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>Names_t</type>
      <name>getJointOuterObjects</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a74a8365693a4b11f49f6603b09b1b776</anchor>
      <arglist>(in string jointName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getObjectPosition</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6e770ed96c1910868b2583b40cf72f84</anchor>
      <arglist>(in string objectName, out Transform_ cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isConfigValid</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a50e645e15e0b0dae778a5c53b8788489</anchor>
      <arglist>(in floatSeq dofArray, out boolean validity, out string report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>distancesToCollision</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a8374fd108a5c1bb34e0c88e0dd851b5a</anchor>
      <arglist>(out floatSeq distances, out Names_t innerObjects, out Names_t outerObjects, out floatSeqSeq innerPoints, out floatSeqSeq outerPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autocollisionCheck</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a002df1a96bc679300bd00a86a8cd713e</anchor>
      <arglist>(out boolSeq collide)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autocollisionPairs</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4a8a7f2a967fa2876de48f72e125f153</anchor>
      <arglist>(out Names_t innerObjects, out Names_t outerObjects, out boolSeq active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoCollision</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aec337c38488b98bdf0941cc99a4cabc2</anchor>
      <arglist>(in string innerObject, in string outerObject, in boolean active)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getRobotAABB</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>acd7f5d8df2fcd34f3d808290933f6f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6b8a169f53390424c5b5d9cd3745dc77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCenterOfMass</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abcd46258b2861d6c156e7479f217ee05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getCenterOfMassVelocity</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa175731392022c2acc28d3cdd201710e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getJacobianCenterOfMass</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa33a7372209f5f7d664dafe457b646a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aa8f1daf2d48dde6caed904ab981de91e</anchor>
      <arglist>(in string comName, in Names_t jointNames)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abab711296779db939e50fc9f3ccfc6fd</anchor>
      <arglist>(in string comName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq</type>
      <name>getJacobianPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ac7799eee4975eb40b283566569c082ec</anchor>
      <arglist>(in string comName)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq</type>
      <name>getVelocityPartialCom</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a5ccf07f35b5bee17506c3c708fb8b0a7</anchor>
      <arglist>(in string comName)</arglist>
    </member>
    <member kind="function">
      <type>string</type>
      <name>getRobotName</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ab521acd91f20e37257d65795bd2ed97c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createRobot</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>ad622f53735ba4f3e89009b61f8b725d4</anchor>
      <arglist>(in string robotName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendJoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a4001c775726b8c9f2d800ebdfc7a25f8</anchor>
      <arglist>(in string parentJoint, in string jointName, in string jointType, in Transform_ pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPolyhedron</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a6d7f3f52919d32071b47dbed6704aa1d</anchor>
      <arglist>(in string inPolyName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBox</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a60af794c6ca4ab2b5a59f55a6dcfbe3a</anchor>
      <arglist>(in string name, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createSphere</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>abf6520a7a85c1204133e93418d9a7b2c</anchor>
      <arglist>(in string name, in double radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createCylinder</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>a19198ec4811497d3eef6373f8481caeb</anchor>
      <arglist>(in string name, in double radius, in double length)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addPoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aca68775eea554935fe3e20fc87c087c9</anchor>
      <arglist>(in string inPolyName, in double x, in double y, in double z)</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>addTriangle</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>afdfba0379689491131ece29a4ac30f6d</anchor>
      <arglist>(in string inPolyName, in unsigned long pt1, in unsigned long pt2, in unsigned long pt3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addObjectToJoint</name>
      <anchorfile>a00049.html</anchorfile>
      <anchor>aaeee5c56e82f07c01ff10368b0077788</anchor>
      <arglist>(in string jointName, in string objectName, in Transform_ pos)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaserver::robot::RobotXML</name>
    <filename>a00050.html</filename>
    <base>hpp::corbaserver::robot::Robot</base>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a6a18035ef0f74d26edaea16f576878b5</anchor>
      <arglist>(self, robotName, rootJointType, urdfString, srdfString=&quot;&quot;, load=True, client=None, hppcorbaClient=None)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>loadModel</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a21579c48d534b5ffa8327d526f341799</anchor>
      <arglist>(self, robotName, rootJointType)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>urdfPath</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>afc1c7815128b0d80bb51427a84dfb095</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>load</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a6d3445b9b50dc7b2c1e617d758c403f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>urdfString</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>ac240a7c0d140df9df4e439fadd4e327c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>srdfString</name>
      <anchorfile>a00050.html</anchorfile>
      <anchor>a667749c5da3c4d06610edfe4a10a3334</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::ServantBase</name>
    <filename>a00051.html</filename>
    <templarg>T</templarg>
    <templarg>_Storage</templarg>
    <base>hpp::corbaServer::AbstractServantBase</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; constraints::DifferentiableFunction, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; constraints::DifferentiableFunction &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; constraints::Implicit, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; constraints::Implicit &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; core::Distance, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; core::Distance &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; core::Path, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; core::Path &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; core::PathValidation, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; core::PathValidation &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; core::Problem, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; core::Problem &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ServantBase&lt; core::SteeringMethod, _Storage &gt;</name>
    <filename>a00051.html</filename>
    <base>AbstractServantBase&lt; core::SteeringMethod &gt;</base>
    <member kind="typedef">
      <type>_Storage</type>
      <name>Storage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a3bd3a1fc6d473df2b90a590b73a468c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementWkPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aaa146e351891e1c3b1afb60e51e9ac9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; typename Storage::element_type &gt;</type>
      <name>StorageElementShPtr_t</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>afa419aeb8a0e32585d87de2bb832d712</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a276147c866de9b7810d03affba91ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TShPtr_t</type>
      <name>get</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>af832b88840760c9294235c3309458a05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StorageElementShPtr_t</type>
      <name>getT</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a221cf28f3477b9506719deaadfa46b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Storage &amp;</type>
      <name>getS</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a906b94bf24e7dc48398052f992bc547e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aea233572f72526c1f9d3a7bd1ced4e04</anchor>
      <arglist>(bool persistant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>persistantStorage</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa987967cdff8b2da81b3a3006f7795ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServantBase</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>aa3c3dd4e0f1d499785649efd6724b27c</anchor>
      <arglist>(Server *server, const Storage &amp;_s)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Storage</type>
      <name>s</name>
      <anchorfile>a00051.html</anchorfile>
      <anchor>a345726e1b67504322255511002919700</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::corbaServer::ServantFactory</name>
    <filename>a00052.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hpp::corbaServer::ServantFactoryBase</base>
    <member kind="typedef">
      <type>ServantBaseType::Object_var</type>
      <name>Object_var</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ab308a6fe39f7e3b64ecb51d08a5c655f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ServantBaseType::Storage</type>
      <name>StorageBase</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>a0f93c9bef73674b4662536f7661cfe05</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ServantFactory</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>ae2bb62f0169cc1d03cc137f36b13dc00</anchor>
      <arglist>(const size_type &amp;depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Object_var</type>
      <name>servant</name>
      <anchorfile>a00052.html</anchorfile>
      <anchor>af54218f0a767a8949de50ef7355b9e94</anchor>
      <arglist>(Server *s, const StorageBase &amp;o)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::ServantFactoryBase</name>
    <filename>a00053.html</filename>
    <templarg>ServantBaseType</templarg>
    <member kind="typedef">
      <type>ServantBaseType::Storage</type>
      <name>Storage</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>ad7e42ee725ba0a6c5b3161f7a5b9aeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ServantBaseType::Object_var</type>
      <name>Object_var</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a50f8c920d623d91cc29b6ff24e159f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ServantFactoryBase</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a998f71c5a042df5a38adfdf589e4cb9d</anchor>
      <arglist>(const size_type &amp;depth)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Object_var</type>
      <name>servant</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a9d41bdc9b3e01834b4754caea42c5b9a</anchor>
      <arglist>(Server *server, const Storage &amp;obj)=0</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>depth</name>
      <anchorfile>a00053.html</anchorfile>
      <anchor>a3840e414ed90fcc8508aea7ff24f789d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::Server</name>
    <filename>a00054.html</filename>
    <member kind="typedef">
      <type>void *</type>
      <name>ServantKey</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ad369f56d6860b797245a579977bf0ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Server</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>abcae884480d60c95ff58740349204a82</anchor>
      <arglist>(core::ProblemSolverPtr_t problemSolver, int argc, const char *argv[], bool multiThread=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Server</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ae41ab10750ac822f1ca15ac5a1f8f6f7</anchor>
      <arglist>(ProblemSolverMapPtr_t problemSolverMap, int argc, const char *argv[], bool multiThread=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Server</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>aac6e27907489de8f01781f06550a90dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PortableServer::POA_var</type>
      <name>poa</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ad0a132ff47bb2f8be7972e0cb2834feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CORBA::ORB_var</type>
      <name>orb</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a7ab4c4519ba7d343d6f85eaf09c71041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startCorbaServer</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>acd6c46ac209cde5452602d200ef4c561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mainContextId</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a5944a77b62e26ef562e6e61660666296</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>multiThread</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a6955e070727ec3d7b608cd1b84a65b82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processRequest</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>acd50a4e3fa712ff42c514aa4339d319d</anchor>
      <arglist>(bool loop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestShutdown</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a10f6d7fcf1908ac32068627cea4c61a9</anchor>
      <arglist>(bool wait)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createContext</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a69f1be6641433a3f4110c6ea7a52d929</anchor>
      <arglist>(const std::string &amp;contextName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadPlugin</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>acb5feb149c8698c911bc447d097290be</anchor>
      <arglist>(const std::string &amp;contextName, const std::string &amp;libFilename)</arglist>
    </member>
    <member kind="function">
      <type>ProblemSolverMapPtr_t</type>
      <name>problemSolverMap</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>a93c7ab0b99dd845128165aa0bf551989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core::ProblemSolverPtr_t</type>
      <name>problemSolver</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>aee0bdb1e56fc74a74e3b097752629083</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PortableServer::Servant</type>
      <name>getServant</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ab188b6d48b4272fb441ce46c18f97c75</anchor>
      <arglist>(ServantKey servantKey) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addServantKeyAndServant</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>aab081602ad26c82462fd0b3c22ce5f5d</anchor>
      <arglist>(ServantKey servantKey, PortableServer::Servant servant)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeServant</name>
      <anchorfile>a00054.html</anchorfile>
      <anchor>ac720c4ea54794c51cc2d7d6fa5042ef5</anchor>
      <arglist>(PortableServer::Servant servant)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::ServerPlugin</name>
    <filename>a00055.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServerPlugin</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ab3cc9b06a861f2a728f39336c693a884</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startCorbaServer</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>af1eccfda8f1ec126a172bc46c78cb368</anchor>
      <arglist>(const std::string &amp;contextId, const std::string &amp;contextKind)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>afa3be8ecd093ad67d2f8919b545ba973</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>Server *</type>
      <name>parent</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a4043d1301904232251e430bf446e3acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>core::ProblemSolverPtr_t</type>
      <name>problemSolver</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a320fe7a00b9af3a4950df3d0e63acbeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ProblemSolverMapPtr_t</type>
      <name>problemSolverMap</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>ad8afdf2f6be326098225f7d00781b223</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProblemSolverMap</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a4b4c9444dd9973d29712d26bc0093302</anchor>
      <arglist>(ProblemSolverMapPtr_t psMap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ServerPlugin</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a8fc845db8c971b6171a2ad12d25a93b1</anchor>
      <arglist>(Server *parent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Server *</type>
      <name>parent_</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>acd8d12468f18a952d71b4ae35b621f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ProblemSolverMapPtr_t</type>
      <name>problemSolverMap_</name>
      <anchorfile>a00055.html</anchorfile>
      <anchor>a27e5240fb5856dc23f1a14de9486bb26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaserver::robot::StaticStabilityConstraintsFactory</name>
    <filename>a00056.html</filename>
    <member kind="function">
      <type>def</type>
      <name>createSlidingStabilityConstraint</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a6af352e45ccb1b2934ca635f8187fcaa</anchor>
      <arglist>(self, prefix, comName, leftAnkle, rightAnkle, q0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createStaticStabilityConstraint</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>a2ff8d286d1dd0b3edf14b090aeb48e59</anchor>
      <arglist>(self, prefix, comName, leftAnkle, rightAnkle, q0)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>createAlignedCOMStabilityConstraint</name>
      <anchorfile>a00056.html</anchorfile>
      <anchor>aa5cb2b6935af73419dbd2079d808bec4</anchor>
      <arglist>(self, prefix, comName, leftAnkle, rightAnkle, q0, sliding)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::SteeringMethod</name>
    <filename>a00057.html</filename>
    <member kind="function">
      <type>Path</type>
      <name>call</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>adbba6a2a40e5030403770b135d8e17cc</anchor>
      <arglist>(in floatSeq q1, in floatSeq q2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraints</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>ac44ecebae1e470152a5f3c6a62874013</anchor>
      <arglist>(in ConstraintSet constraints)</arglist>
    </member>
    <member kind="function">
      <type>Constraint</type>
      <name>getConstraints</name>
      <anchorfile>a00057.html</anchorfile>
      <anchor>a6f87aef7fc5c3ec53a5b88f5fec89e67</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::SteeringMethodServant</name>
    <filename>a00058.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ServantBase&lt; core::SteeringMethod, _Storage &gt;</base>
    <member kind="function">
      <type></type>
      <name>SteeringMethodServant</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a990db8fd958ce7ae637bf7180de92c04</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SteeringMethodServant</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>a0bdc95fa9de23fcc1d9eb3b8799a8eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Path_ptr</type>
      <name>call</name>
      <anchorfile>a00058.html</anchorfile>
      <anchor>af51fa3a5a52b40a754abb7d9c3fe816c</anchor>
      <arglist>(const floatSeq &amp;q1, const floatSeq &amp;q2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::SteeringMethodStorage</name>
    <filename>a00059.html</filename>
    <templarg>D</templarg>
    <base>AbstractStorage&lt; D, core::SteeringMethod &gt;</base>
    <member kind="typedef">
      <type>AbstractStorage&lt; D, core::SteeringMethod &gt;</type>
      <name>parent_t</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a2404c07d6e96713529dc803280e47d52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::weak_ptr&lt; T &gt;</type>
      <name>ptr_t</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a08020b53b33d87a146e07a2048e835bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SteeringMethodStorage</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>af26533c27f9c17d0a27f0f5ddb49d8cf</anchor>
      <arglist>(const core::DevicePtr_t &amp;_r, const ptr_t &amp;_d)</arglist>
    </member>
    <member kind="function">
      <type>SteeringMethodStorage&lt; T &gt;</type>
      <name>cast</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>afe299cef8f989d4bfed31a67e4a001c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>core::DevicePtr_t</type>
      <name>r</name>
      <anchorfile>a00059.html</anchorfile>
      <anchor>a54dca80cda53af56b19e01f7dc4d86b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::Tools</name>
    <filename>a00060.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>loadServerPlugin</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a45bb576a0a7e318530b7e47416d15cdb</anchor>
      <arglist>(in string context_, in string pluginName)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>createContext</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>ad746c575747cb65c7c9099c9d2461266</anchor>
      <arglist>(in string context_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteServant</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>ab02c02a3802978171f64194df28f89c1</anchor>
      <arglist>(in string id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>a00060.html</anchorfile>
      <anchor>a9bd87e2f22939e1daa9cf0fee355c23b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::transform::Transform</name>
    <filename>a00061.html</filename>
    <member kind="function">
      <type>def</type>
      <name>__init__</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a20b2c4c79b6456e6c81530e4025126d1</anchor>
      <arglist>(self, args)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__mul__</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a9dacf4e4b62dd8efc45e6bc115271b50</anchor>
      <arglist>(self, other)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>inverse</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>af3f1e927476f1848de161bf3a824e4cd</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>transform</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a439c30e6632125297eff268dcced98df</anchor>
      <arglist>(self, v)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__str__</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a0b10237d36940be0804040aacd606253</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__getitem__</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ab1e0108e9b8a82997e2e2628285bac5a</anchor>
      <arglist>(self, i)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>__len__</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a9ab6c6a4486cbab1775f8d4bd72f95dc</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>toHomogeneousMatrix</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a363f436e257970618ccb2068868110d2</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="function">
      <type>def</type>
      <name>toTuple</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>aeec47030c05b2368e97689cb9d1a298e</anchor>
      <arglist>(self)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>translation</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>ad4e8f8d238ca81d53fe6e1dbbdfcf069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>quaternion</name>
      <anchorfile>a00061.html</anchorfile>
      <anchor>a05e60496d2ce7848b99446a55d37e2c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::corbaServer::vectorToSeqServant</name>
    <filename>a00062.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>vectorToSeqServant</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a79def38c27d072e79bf9aa389a5719ce</anchor>
      <arglist>(Server *_s)</arglist>
    </member>
    <member kind="function">
      <type>OutType *</type>
      <name>operator()</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>ae069505d8266db72b4310ae1892add04</anchor>
      <arglist>(const InContainer &amp;input)</arglist>
    </member>
    <member kind="variable">
      <type>Server *</type>
      <name>s</name>
      <anchorfile>a00062.html</anchorfile>
      <anchor>a1ae9a63480da24cbea7557203897519b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>hpp::core_idl::WeighedDistance</name>
    <filename>a00063.html</filename>
    <base>hpp::core_idl::Distance</base>
    <member kind="function">
      <type>floatSeq</type>
      <name>getWeights</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>ad98ab035b4cd5c0cce45c237f8412f52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeights</name>
      <anchorfile>a00063.html</anchorfile>
      <anchor>a3492af0d5c79a472b2842f823c41e2b5</anchor>
      <arglist>(in floatSeq weights)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::corbaServer::core_idl::WeighedDistanceServant</name>
    <filename>a00064.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>hpp::corbaServer::core_idl::DistanceServant</base>
    <member kind="typedef">
      <type>DistanceServant&lt; Base, Storage &gt;</type>
      <name>Parent</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a6abe3eaf4c6a92360694908d22d37cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeighedDistanceServant</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a2aa5cded7747ce934173922b6d8e9efa</anchor>
      <arglist>(Server *server, const Storage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WeighedDistanceServant</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>a2c963bc1d52febcfb7cf212beb5a01db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>getWeights</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>ad43ea2d733ff0491113b26d0b4371b3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeights</name>
      <anchorfile>a00064.html</anchorfile>
      <anchor>ae6347ee3cfef8faa4809c2979dd99ba7</anchor>
      <arglist>(const floatSeq &amp;weights)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp</name>
    <filename>a00103.html</filename>
    <namespace>hpp::constraints_idl</namespace>
    <namespace>hpp::corbaserver</namespace>
    <namespace>hpp::corbaServer</namespace>
    <namespace>hpp::core_idl</namespace>
    <namespace>hpp::fcl</namespace>
    <namespace>hpp::quaternion</namespace>
    <namespace>hpp::transform</namespace>
    <class kind="exception">hpp::Error</class>
    <class kind="interface">hpp::Tools</class>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>ac365baf91c623fb377db255fa0b08b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>size_type</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a20193209554a3bd8bbed8972ec927c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; string &gt;</type>
      <name>Names_t</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>aaf2cd2058ca2b7078a44db27acdf759c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; boolean &gt;</type>
      <name>boolSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a1ee11cb81c069fab362b221baf62d566</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; long &gt;</type>
      <name>intSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>aed890abb35e052cae7cda98d7096022e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; intSeq &gt;</type>
      <name>intSeqSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a67be5b661bd23439a11de55524616f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; double &gt;</type>
      <name>floatSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a45c0423291b61bc8cab2b86f44e7a5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; floatSeq &gt;</type>
      <name>floatSeqSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a8e52ca94e51aedffaf099d1d426cad95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Transform_</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a4b440e779d8fd13bf9cd136c7a2a2732</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="typedef">
      <type>sequence&lt; Transform_ &gt;</type>
      <name>TransformSeq</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a8cbac14136aa1de3996e8a134624bd0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Quaternion_</name>
      <anchorfile>a00103.html</anchorfile>
      <anchor>a7383a9d3dcd6de57210b8da50eed409f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a19f2d09243fdd6828b4d40953f4f413f</anchor>
      <arglist>(HPP_UTIL_DLLAPI, AssertionError)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a0bcb296b7ca1dab3382f49953c92a853</anchor>
      <arglist>(std::ostream &amp;o, const Exception &amp;exception)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI long &amp;</type>
      <name>indent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a16259580a8f0a07bad42458aa65963f3</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a669ea668296b2ed089b72c3a1dce688e</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>afaf02e3dd1c3eaf21e287dc4c825cc89</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>resetindent</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a011dc7bc6e7c975fdc993c5b7abbac56</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>iendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ab2e087df519f97420058c160b8313be4</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>incendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a49bcbcf63c92e671f9aa3c737b8a2852</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_UTIL_DLLAPI std::ostream &amp;</type>
      <name>decendl</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a8d7bf72162e22331e54b3c387651ed95</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>setpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaf0a4b5cf356013ff921516719a6b9cf0</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>HPP_PINOCCHIO_DLLAPI std::ostream &amp;</type>
      <name>unsetpyformat</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9ebdb5b7e4ea691aa1cc921cacd64b28</anchor>
      <arglist>(std::ostream &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, PrettyOutput &gt;</type>
      <name>pretty_print</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gaa29fa2d7b51bc30954dd1e77c1163eca</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, CondensedOutput &gt;</type>
      <name>condensed</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga88b06fbd68a50ab03ddc565e58e9817e</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>PrettyPrint&lt; T, OneLineOutput &gt;</type>
      <name>one_line</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>ga9a8cb47183de8943e9e57cb92659d5aa</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OutputFormatBits</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa875e4c844d0b4f0f260e9ad2a976fc0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OneLineOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aaa31d6d0e57c8868f95725538d6265c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CondensedOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa7a931a55fd9d53e3d156ea75df8a66ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PrettyOutput</name>
      <anchorfile>a00123.html</anchorfile>
      <anchor>gga17898ce4c3cc45c5b86637541ce09d1aa02d62615027b11a583d13dff972e3455</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::constraints_idl</name>
    <filename>a00104.html</filename>
    <class kind="interface">hpp::constraints_idl::DifferentiableFunction</class>
    <class kind="interface">hpp::constraints_idl::Implicit</class>
    <class kind="interface">hpp::constraints_idl::LockedJoint</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaserver</name>
    <filename>a00105.html</filename>
    <namespace>hpp::corbaserver::benchmark</namespace>
    <namespace>hpp::corbaserver::problem_solver</namespace>
    <namespace>hpp::corbaserver::robot</namespace>
    <class kind="interface">hpp::corbaserver::Obstacle</class>
    <class kind="interface">hpp::corbaserver::Problem</class>
    <class kind="interface">hpp::corbaserver::Robot</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaServer</name>
    <filename>a00106.html</filename>
    <namespace>hpp::corbaServer::constraints_idl</namespace>
    <namespace>hpp::corbaServer::core_idl</namespace>
    <namespace>hpp::corbaServer::impl</namespace>
    <class kind="class">hpp::corbaServer::AbstractServantBase</class>
    <class kind="class">hpp::corbaServer::AbstractServantKey</class>
    <class kind="class">hpp::corbaServer::AbstractStorage</class>
    <class kind="class">hpp::corbaServer::BasicServer</class>
    <class kind="class">hpp::corbaServer::Client</class>
    <class kind="class">hpp::corbaServer::ObjectMap</class>
    <class kind="class">hpp::corbaServer::ProblemSolverMap</class>
    <class kind="class">hpp::corbaServer::ServantBase</class>
    <class kind="struct">hpp::corbaServer::ServantFactory</class>
    <class kind="class">hpp::corbaServer::ServantFactoryBase</class>
    <class kind="class">hpp::corbaServer::Server</class>
    <class kind="class">hpp::corbaServer::ServerPlugin</class>
    <class kind="struct">hpp::corbaServer::vectorToSeqServant</class>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; CORBA::Long, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>IntMatrix_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adcefdf5044aafff64981d3d2d77f3685</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ProblemSolverMap &gt;</type>
      <name>ProblemSolverMapPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a14c051d619415081f237864dc4a6de34</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::BodyPtr_t</type>
      <name>BodyPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a76fbf71a0164ca8d4582621f86095f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::CollisionGeometry</type>
      <name>CollisionGeometry_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa110f8d49db3529f339a8d981404d5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; CollisionGeometry_t &gt;</type>
      <name>CollisionGeometryPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a10e474efcfcbd48891c383916b2f9e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::CollisionObject</type>
      <name>CollisionObject_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a81606bd42321cc3295571fbe770b68c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::CollisionObjectPtr_t</type>
      <name>CollisionObjectPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a321de24338739264f42a14708ab2fafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::CollisionObjectConstPtr_t</type>
      <name>CollisionObjectConstPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac23b45495daf2d8c8388e3e5185fdb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a446a37cdbb0fb3e603318bc9248f75dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationPtr_t</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a79643eaf9be31c47357ac7faa803aca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigIterator_t</type>
      <name>ConfigIterator_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a29b409f91adf322650921d300ff5b826</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigConstIterator_t</type>
      <name>ConfigConstIterator_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad2e41eb9418f35f17430e29f2f444472</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConnectedComponent</type>
      <name>ConnectedComponent</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa58d2e93ea283c49efe713617a608436</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConnectedComponents_t</type>
      <name>ConnectedComponents_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab90aa00748e650e0b4472b698d87e3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConnectedComponentPtr_t</type>
      <name>ConnectedComponentPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae8b6ecfd25f1902f439c00b29e92d48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Device</type>
      <name>Device</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9d17dd432d49d077f54c6e1f98514386</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::DevicePtr_t</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad84553bce74adf2755799518858f0fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::DistanceResults_t</type>
      <name>DistanceResults_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a642b05b04993e01ec03446d327ff6037</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::CollisionPairs_t</type>
      <name>CollisionPairs_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adb8ff439bd814ae46a6812ca6273a0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DistanceBetweenObjects</type>
      <name>DistanceBetweenObjects</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a298a623c59c08d28df99921007717106</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DistanceBetweenObjectsPtr_t</type>
      <name>DistanceBetweenObjectsPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5c6c2f2074243859fa0f6e56afa9a7e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Edges_t</type>
      <name>Edges_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a33e9c949c5837b699cb299762acdf7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Joint</type>
      <name>Joint</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a653354137e747f63aaf693023cd8e06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Frame</type>
      <name>Frame</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a2f36392afba63dfc0b2194a4a4df09a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointPtr_t</type>
      <name>JointPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a82d10e7b4a3f22696c653cf6a8d5f092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::JointVector_t</type>
      <name>JointVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>adbd5de281415877bda80327a81f03157</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a82ec3fb0560faa312fc81e18b6ee0e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a29aaa28b84d44e16fb63d83c46819d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Nodes_t</type>
      <name>Nodes_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>abcac3fc62e2b24366634a730b6865cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::NodeVector_t</type>
      <name>NodeVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a622647306aad8edcaac0bfbd697f9892</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ObjectVector_t</type>
      <name>ObjectVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ab0353021ac124ef44a30073ff63cb3af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ObjectStdVector_t</type>
      <name>ObjectStdVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a4b4d21729ade81cc21a685a4faca69c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathPtr_t</type>
      <name>PathPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9249556ce83bb34dcbade0e4b8f5085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationReportPtr_t</type>
      <name>PathValidationReportPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a40248cef945bd865b078f9c9389bb37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVector</type>
      <name>PathVector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5aee573f39c565882a0dd75c96968047</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathVectorPtr_t</type>
      <name>PathVectorPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0bd91a707e934a92dd161bc08460737b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::SteeringMethod</type>
      <name>SteeringMethod_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a3feabf07fca5b5dbc657eb9ab1829b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::SteeringMethodPtr_t</type>
      <name>SteeringMethodPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a8ab00f83084b36e20735ec36e1ba23d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a1ee0addb5fa4cfaf73c23d0b61c865c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::BVHModel&lt; fcl::RSS &gt;</type>
      <name>Polyhedron_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad39227b750a19619c1b0dafcde082e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Polyhedron_t &gt;</type>
      <name>PolyhedronPtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0d9127bcfa0b76dd76c1d24f7478b1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>fcl::ShapeBase</type>
      <name>BasicShape_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a79306d0c2373f0269c1ac3e0e57fb636</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; BasicShape_t &gt;</type>
      <name>BasicShapePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0250521abd68a0fde84380494ca87145</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::value_type</type>
      <name>value_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad41c34cff04b090ee38f54c044d3445b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::matrix_t</type>
      <name>matrix_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae3f73adda740130f15b0133a9632be7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::matrix3_t</type>
      <name>matrix3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aa34cf449080c1b663fa77a236d4dca5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::vector_t</type>
      <name>vector_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a306fd4f9f7307e230b8f12181e507026</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::vector3_t</type>
      <name>vector3_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a91f6ab5b4772791e849657c9b77ad2a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::ComJacobian_t</type>
      <name>ComJacobian_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a9c72e388fd9ed3fa72c910ce5ea8f906</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::size_type</type>
      <name>size_type</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a68abede5ce371815b23f68671a91184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupElement</type>
      <name>LiegroupElement</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7218f76c42aa164b4dbd27c293b0c07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpace</type>
      <name>LiegroupSpace</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7fc7b59813c32133b6c95cdea1d631bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pinocchio::LiegroupSpacePtr_t</type>
      <name>LiegroupSpacePtr_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aece3f56d4475780bf439c18deb7cabd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PortableServer::Servant_var&lt; PortableServer::ServantBase &gt;</type>
      <name>ServantBase_var</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga910f0760647ca9fc955e5c79c452ac7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toTransform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac4d913545eb7ee30aa2b88b30e8af8b5</anchor>
      <arglist>(const Transform_ in, Transform3f &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>Transform3f</type>
      <name>toTransform3f</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>af1d94821e92a3a0875d56aa4c732d574</anchor>
      <arglist>(const Transform_ in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toHppTransform</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a057821c159409c488fe25a915b17592b</anchor>
      <arglist>(const Transform3f &amp;in, Transform_ out)</arglist>
    </member>
    <member kind="function">
      <type>Transform__slice *</type>
      <name>toHppTransform</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0d165bf866ab7646865fa39d8ffb3d95</anchor>
      <arglist>(const Transform3f &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>vectorToFloatSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ad2c849b64da6cfeda60eb8f92d030180</anchor>
      <arglist>(core::vectorIn_t input)</arglist>
    </member>
    <member kind="function">
      <type>floatSeq *</type>
      <name>vectorToFloatSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a7ed54d3cddfb19151e6b2f1aff5e9e79</anchor>
      <arglist>(core::ConfigurationPtr_t input)</arglist>
    </member>
    <member kind="function">
      <type>floatSeqSeq *</type>
      <name>matrixToFloatSeqSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae6e28e17b16fe16567887d213dc3b258</anchor>
      <arglist>(core::matrixIn_t input)</arglist>
    </member>
    <member kind="function">
      <type>intSeqSeq *</type>
      <name>matrixToIntSeqSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a4a2c2ec736f4c0cb7e6d53cfabee8716</anchor>
      <arglist>(Eigen::Ref&lt; const IntMatrix_t &gt; input)</arglist>
    </member>
    <member kind="function">
      <type>vector3_t</type>
      <name>floatSeqToVector3</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a5375f2f8f6be69c1ec676479307b8cf1</anchor>
      <arglist>(const floatSeq &amp;dofArray)</arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>floatSeqToVector</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>aaa21c65a09ea19fa86d8cdbd1220b009</anchor>
      <arglist>(const floatSeq &amp;dofArray, const size_type expectedSize=-1)</arglist>
    </member>
    <member kind="function">
      <type>Configuration_t</type>
      <name>floatSeqToConfig</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a0f1c6994fed6eb0413a6e69c1d724857</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const floatSeq &amp;dofArray, bool throwIfNotNormalized)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationPtr_t</type>
      <name>floatSeqToConfigPtr</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a683a2f75cf964172d99985c925631fcf</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const floatSeq &amp;dofArray, bool throwIfNotNormalized)</arglist>
    </member>
    <member kind="function">
      <type>core::matrix_t</type>
      <name>floatSeqSeqToMatrix</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a2402a8df20c202f340977b38b616a9b0</anchor>
      <arglist>(const floatSeqSeq &amp;input, const size_type expectedRows=-1, const size_type expectedCols=-1)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>c_str</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ac9ab92367b8ba60a254db8c5a46d5e48</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Names_t *</type>
      <name>toNames_t</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a290ca480e00fee491ffe850dadb608ab</anchor>
      <arglist>(InputIt begin, InputIt end)</arglist>
    </member>
    <member kind="function">
      <type>intSeq *</type>
      <name>toIntSeq</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>ae1bf9a72783d121393b559847e20db3c</anchor>
      <arglist>(InputIt begin, InputIt end)</arglist>
    </member>
    <member kind="function">
      <type>OutputType</type>
      <name>toStrings</name>
      <anchorfile>a00106.html</anchorfile>
      <anchor>a884f8aa23a7fed3aa9ab9763f0aa9b24</anchor>
      <arglist>(const Names_t &amp;names)</arglist>
    </member>
    <member kind="function">
      <type>PortableServer::Servant_var&lt; S &gt;</type>
      <name>reference_to_servant</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gab735db73646629f8e63edd2a88716ba6</anchor>
      <arglist>(Server *server, const P &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>AbstractServantBase&lt; T &gt; *</type>
      <name>reference_to_servant_base</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gab55b19046cba181b453c8176ca2c89ce</anchor>
      <arglist>(Server *server, const P &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>P</type>
      <name>makeServant</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga521b05f2289d112f080cae3aa1f340b4</anchor>
      <arglist>(Server *server, S *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StorageTpl&lt; U &gt;</type>
      <name>storage_cast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga2d8154a38cc854237182935aa4d81011</anchor>
      <arglist>(const StorageTpl&lt; V &gt; &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ServantFactoryBase&lt; ServantBaseType &gt; * &gt; &amp;</type>
      <name>objectDowncasts</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gabe6f4a11a684582436e861ea50076b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDowncastObjects</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga711415542abfba03c421f14678b78d71</anchor>
      <arglist>(ServantFactoryBase&lt; ServantBaseType &gt; *const object)</arglist>
    </member>
    <member kind="function">
      <type>ReturnType::Object_var</type>
      <name>makeServantDownCast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga1759fa7a1fe1cfaf607c95f8991eb0d2</anchor>
      <arglist>(Server *server, const typename ServantBaseType::Storage &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>ServantBaseType::Object_var</type>
      <name>makeServantDownCast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga8916c3dc3c2aaafbba76d53785308a71</anchor>
      <arglist>(Server *server, const typename ServantBaseType::Storage &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaserver::benchmark</name>
    <filename>a00107.html</filename>
    <class kind="class">hpp::corbaserver::benchmark::Benchmark</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaServer::constraints_idl</name>
    <filename>a00108.html</filename>
    <class kind="class">hpp::corbaServer::constraints_idl::DifferentiableFunctionServant</class>
    <class kind="class">hpp::corbaServer::constraints_idl::ImplicitServant</class>
    <member kind="typedef">
      <type>DifferentiableFunctionServant&lt; POA_hpp::constraints_idl::DifferentiableFunction, constraints::DifferentiableFunctionPtr_t &gt;</type>
      <name>DifferentiableFunction</name>
      <anchorfile>a00108.html</anchorfile>
      <anchor>a5347724cdf382553ea1f4299f645b8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ImplicitServant&lt; POA_hpp::constraints_idl::Implicit, constraints::ImplicitPtr_t &gt;</type>
      <name>Implicit</name>
      <anchorfile>a00108.html</anchorfile>
      <anchor>aa00061fc5e90bd78016516035ad16ba8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaServer::core_idl</name>
    <filename>a00109.html</filename>
    <class kind="class">hpp::corbaServer::core_idl::DistanceServant</class>
    <class kind="class">hpp::corbaServer::core_idl::DistanceStorage</class>
    <class kind="class">hpp::corbaServer::core_idl::PathServant</class>
    <class kind="class">hpp::corbaServer::core_idl::PathValidationServant</class>
    <class kind="class">hpp::corbaServer::core_idl::PathVectorServant</class>
    <class kind="class">hpp::corbaServer::core_idl::ProblemServant</class>
    <class kind="class">hpp::corbaServer::core_idl::SteeringMethodServant</class>
    <class kind="class">hpp::corbaServer::core_idl::SteeringMethodStorage</class>
    <class kind="class">hpp::corbaServer::core_idl::WeighedDistanceServant</class>
    <member kind="typedef">
      <type>DistanceServant&lt; POA_hpp::core_idl::Distance, DistanceStorage&lt; core::Distance &gt; &gt;</type>
      <name>Distance</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a9c551aabbfd7618c572ce6a1eeaaf561</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>WeighedDistanceServant&lt; POA_hpp::core_idl::WeighedDistance, DistanceStorage&lt; core::WeighedDistance &gt; &gt;</type>
      <name>WeighedDistance</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>abc563b84ff9c63d8ceadb18a4fbb2827</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PathValidationServant&lt; POA_hpp::core_idl::PathValidation, core::PathValidationPtr_t &gt;</type>
      <name>PathValidation</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a187a617991dce68abae03c8cda9311ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PathServant&lt; POA_hpp::core_idl::Path, core::PathPtr_t &gt;</type>
      <name>Path</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a643a967beb614a35853a7800d20fb107</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PathVectorServant&lt; POA_hpp::core_idl::PathVector, core::PathVectorPtr_t &gt;</type>
      <name>PathVector</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>ab5e1a0636796cb7692829f2ffa8a0b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProblemServant&lt; POA_hpp::core_idl::Problem, core::ProblemPtr_t &gt;</type>
      <name>Problem</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>afc3402f87e9191960e8493fe620ee3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SteeringMethodServant&lt; POA_hpp::core_idl::SteeringMethod, SteeringMethodStorage&lt; core::SteeringMethod &gt; &gt;</type>
      <name>SteeringMethod</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>ab1bbe753b07fb145a620f793ae3cf1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>hpp::core_idl::Path_ptr</type>
      <name>makePathServant</name>
      <anchorfile>a00109.html</anchorfile>
      <anchor>a23bc494723601c3392748b84e88b5608</anchor>
      <arglist>(Server *server, const PathPtr_t &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaServer::impl</name>
    <filename>a00110.html</filename>
    <class kind="class">hpp::corbaServer::impl::Obstacle</class>
    <class kind="class">hpp::corbaServer::impl::Problem</class>
    <class kind="class">hpp::corbaServer::impl::Robot</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaserver::problem_solver</name>
    <filename>a00111.html</filename>
    <class kind="class">hpp::corbaserver::problem_solver::ProblemSolver</class>
    <member kind="function">
      <type>def</type>
      <name>newProblem</name>
      <anchorfile>a00111.html</anchorfile>
      <anchor>a716d1dc9a08cf9676a5977c513c2c0b7</anchor>
      <arglist>(client=None, name=None)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::corbaserver::robot</name>
    <filename>a00112.html</filename>
    <class kind="class">hpp::corbaserver::robot::HumanoidRobot</class>
    <class kind="class">hpp::corbaserver::robot::Robot</class>
    <class kind="class">hpp::corbaserver::robot::RobotXML</class>
    <class kind="class">hpp::corbaserver::robot::StaticStabilityConstraintsFactory</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::core_idl</name>
    <filename>a00113.html</filename>
    <namespace>hpp::core_idl::configuration_shooter</namespace>
    <class kind="interface">hpp::core_idl::ConfigProjector</class>
    <class kind="interface">hpp::core_idl::ConfigurationShooter</class>
    <class kind="interface">hpp::core_idl::Constraint</class>
    <class kind="interface">hpp::core_idl::ConstraintSet</class>
    <class kind="interface">hpp::core_idl::Distance</class>
    <class kind="interface">hpp::core_idl::Path</class>
    <class kind="interface">hpp::core_idl::PathPlanner</class>
    <class kind="interface">hpp::core_idl::PathValidation</class>
    <class kind="interface">hpp::core_idl::PathVector</class>
    <class kind="interface">hpp::core_idl::Problem</class>
    <class kind="interface">hpp::core_idl::SteeringMethod</class>
    <class kind="interface">hpp::core_idl::WeighedDistance</class>
    <member kind="typedef">
      <type>string</type>
      <name>PathValidationReport</name>
      <anchorfile>a00113.html</anchorfile>
      <anchor>ae56338aa305a2e47f7b31a75582e2504</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long long</type>
      <name>size_t</name>
      <anchorfile>a00113.html</anchorfile>
      <anchor>ab34b626c76512036641f399cf812459b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::core_idl::configuration_shooter</name>
    <filename>a00114.html</filename>
    <class kind="interface">hpp::core_idl::configuration_shooter::Gaussian</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::fcl</name>
    <filename>a00115.html</filename>
    <class kind="class">hpp::fcl::BVHModel</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::quaternion</name>
    <filename>a00116.html</filename>
    <class kind="class">hpp::quaternion::Quaternion</class>
  </compound>
  <compound kind="namespace">
    <name>hpp::transform</name>
    <filename>a00117.html</filename>
    <class kind="class">hpp::transform::Transform</class>
  </compound>
  <compound kind="group">
    <name>hpp_corbaserver_extend_bindings</name>
    <title>Extending the bindings</title>
    <filename>a00119.html</filename>
    <class kind="class">hpp::corbaServer::AbstractServantKey</class>
    <class kind="class">hpp::corbaServer::AbstractServantBase</class>
    <class kind="class">hpp::corbaServer::ServantBase</class>
    <class kind="class">hpp::corbaServer::AbstractStorage</class>
    <class kind="class">hpp::corbaServer::ServantFactoryBase</class>
    <class kind="struct">hpp::corbaServer::ServantFactory</class>
    <class kind="struct">hpp::corbaServer::vectorToSeqServant</class>
    <member kind="define">
      <type>#define</type>
      <name>SERVANT_BASE_TYPEDEFS</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga3852aef5193a0cf6672df2b367d94094</anchor>
      <arglist>(idlObj, hppObj)</arglist>
    </member>
    <member kind="typedef">
      <type>PortableServer::Servant_var&lt; PortableServer::ServantBase &gt;</type>
      <name>ServantBase_var</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga910f0760647ca9fc955e5c79c452ac7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PortableServer::Servant_var&lt; S &gt;</type>
      <name>reference_to_servant</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gab735db73646629f8e63edd2a88716ba6</anchor>
      <arglist>(Server *server, const P &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>AbstractServantBase&lt; T &gt; *</type>
      <name>reference_to_servant_base</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gab55b19046cba181b453c8176ca2c89ce</anchor>
      <arglist>(Server *server, const P &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>P</type>
      <name>makeServant</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga521b05f2289d112f080cae3aa1f340b4</anchor>
      <arglist>(Server *server, S *s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StorageTpl&lt; U &gt;</type>
      <name>storage_cast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga2d8154a38cc854237182935aa4d81011</anchor>
      <arglist>(const StorageTpl&lt; V &gt; &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ServantFactoryBase&lt; ServantBaseType &gt; * &gt; &amp;</type>
      <name>objectDowncasts</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>gabe6f4a11a684582436e861ea50076b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDowncastObjects</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga711415542abfba03c421f14678b78d71</anchor>
      <arglist>(ServantFactoryBase&lt; ServantBaseType &gt; *const object)</arglist>
    </member>
    <member kind="function">
      <type>ReturnType::Object_var</type>
      <name>makeServantDownCast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga1759fa7a1fe1cfaf607c95f8991eb0d2</anchor>
      <arglist>(Server *server, const typename ServantBaseType::Storage &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>ServantBaseType::Object_var</type>
      <name>makeServantDownCast</name>
      <anchorfile>a00119.html</anchorfile>
      <anchor>ga8916c3dc3c2aaafbba76d53785308a71</anchor>
      <arglist>(Server *server, const typename ServantBaseType::Storage &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index">hpp_corbaserver_documentation</docanchor>
    <docanchor file="index" title="Introduction">hppCorbaServer_sec_intro</docanchor>
    <docanchor file="index" title="How to communicate with the CORBA server">hppCorbaServer_sec_howto</docanchor>
    <docanchor file="index" title="How to embed a server in an application">hppCorbaServer_sec_embedding</docanchor>
    <docanchor file="index">hpp_core_documentation</docanchor>
    <docanchor file="index" title="Introduction">hpp_pinocchio_intro</docanchor>
    <docanchor file="index" title="What is Pinocchio?">OverviewIntro</docanchor>
    <docanchor file="index" title="How to install Pinocchio?">OverviewInstall</docanchor>
    <docanchor file="index" title="Simplest example with compilation command">OverviewSimple</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewSimpleCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewSimpleExplain</docanchor>
    <docanchor file="index" title="More complex example with C++ and Python">OverviewComplex</docanchor>
    <docanchor file="index" title="Compiling and running your program">OverviewComplexCompile</docanchor>
    <docanchor file="index" title="Explanation of the program">OverviewComplexExplain</docanchor>
    <docanchor file="index" title="About Python wrappings">OverviewPython</docanchor>
    <docanchor file="index" title="How to cite Pinocchio">OverviewCite</docanchor>
    <docanchor file="index" title="Where to go from here?">OverviewConclu</docanchor>
    <docanchor file="index">hpp_constraints_documentation</docanchor>
    <docanchor file="index" title="Introduction">hpp_template_corba_sec_intro</docanchor>
    <docanchor file="index" title="Principle">hpp_template_corba_sec_principle</docanchor>
    <docanchor file="index" title="How to">hpp_template_corba_sec_how_to</docanchor>
    <docanchor file="index" title="Implementing the server">hpp_template_corba_subsec_server</docanchor>
    <docanchor file="index" title="Implementing the client">hpp_template_corba_subsec_client</docanchor>
    <docanchor file="index" title="Running the server and client">hpp_template_corba_subsec_running</docanchor>
  </compound>
</tagfile>
