// Copyright (C) 2019 by Joseph Mirabel, LAAS-CNRS.
//
// This file is part of the hpp-corbaserver.
//
// This software is provided "as is" without warranty of any kind,
// either expressed or implied, including but not limited to the
// implied warranties of fitness for a particular purpose.
//
// See the COPYING file for more information.

#ifndef HPP_CORE_PATH_VALIDATIONS_IDL
#define HPP_CORE_PATH_VALIDATIONS_IDL
#include <hpp/common.idl>

#include <hpp/core_idl/paths.idl>

module hpp
{
  module core_idl {
  typedef string PathValidationReport;

  interface PathValidation
  {
    boolean validate (in Path p, in boolean reverse, out Path validPart, out PathValidationReport report) raises (Error);
    //* core::PathPtr_t _p (reference_to_servant_base<core::Path>(server_, p)->get());
    //* core::PathPtr_t vp;
    //* core::PathValidationReportPtr_t pvr;
    //*
    //* bool res = get()->validate (_p, reverse, vp, pvr);
    //*
    //* if (pvr) {
    //*   std::ostringstream oss; oss << *pvr;
    //*   std::string res = oss.str();
    //*   report = CORBA::string_dup(res.c_str());
    //* } else {
    //*   report = CORBA::string_dup("");
    //* }
    //*
    //* validPart = makeServant<hpp::core_idl::Path_ptr> (server_, new Path (server_, vp));
    //* return res;
  }; // interface SteeringMethod

  }; // module core
}; // module hpp
//* #include <hpp/core/path-validation.hh>
//* #include <hpp/core/path-validation-report.hh>
//* #include <hpp/core_idl/paths.hh>

#endif // HPP_CORE_PATH_VALIDATIONS_IDL
